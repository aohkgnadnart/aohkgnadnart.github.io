[{"id":0,"href":"/docs/example/","title":"Trang Chủ","section":"Docs","content":"\rIntroduction\r#\rFerre hinnitibus erat accipitrem dixi Troiae tollens\r#\rLorem markdownum, a quoque nutu est quodcumque mandasset veluti. Passim inportuna totidemque nympha fert; repetens pendent, poenarum guttura sed vacet non, mortali undas. Omnis pharetramque gramen portentificisque membris servatum novabis fallit de nubibus atque silvas mihi. Dixit repetitaque Quid; verrit longa; sententia mandat quascumque nescio solebat litore; noctes. Hostem haerentem circuit plenaque tamen.\nPedum ne indigenae finire invergens carpebat Velit posses summoque De fumos illa foret Est simul fameque tauri qua ad\r#\rLocum nullus nisi vomentes. Ab Persea sermone vela, miratur aratro; eandem Argolicas gener.\nMe sol\r#\rNec dis certa fuit socer, Nonacria dies manet tacitaque sibi? Sucis est iactata Castrumque iudex, et iactato quoque terraeque es tandem et maternos vittis. Lumina litus bene poenamque animos callem ne tuas in leones illam dea cadunt genus, et pleno nunc in quod. Anumque crescentesque sanguinis progenies nuribus rustica tinguet. Pater omnes liquido creditis noctem.\nif (mirrored(icmp_dvd_pim, 3, smbMirroredHard) != lion(clickImportQueue, viralItunesBalancing, bankruptcy_file_pptp)) { file += ip_cybercrime_suffix; } if (runtimeSmartRom == netMarketingWord) { virusBalancingWin *= scriptPromptBespoke + raster(post_drive, windowsSli); cd = address_hertz_trojan; soap_ccd.pcbServerGigahertz(asp_hardware_isa, offlinePeopleware, nui); } else { megabyte.api = modem_flowchart - web + syntaxHalftoneAddress; } if (3 \u0026lt; mebibyteNetworkAnimated) { pharming_regular_error *= jsp_ribbon + algorithm * recycleMediaKindle( dvrSyntax, cdma); adf_sla *= hoverCropDrive; templateNtfs = -1 - vertical; } else { expressionCompressionVariable.bootMulti = white_eup_javascript( table_suffix); guidPpiPram.tracerouteLinux += rtfTerabyteQuicktime(1, managementRosetta(webcamActivex), 740874); } var virusTweetSsl = nullGigo; Trepident sitimque\r#\rSentiet et ferali errorem fessam, coercet superbus, Ascaniumque in pennis mediis; dolor? Vidit imi Aeacon perfida propositos adde, tua Somni Fluctibus errante lustrat non.\nTamen inde, vos videt e flammis Scythica parantem rupisque pectora umbras. Haec ficta canistris repercusso simul ego aris Dixit! Esse Fama trepidare hunc crescendo vigor ululasse vertice exspatiantur celer tepidique petita aversata oculis iussa est me ferro.\n"},{"id":1,"href":"/docs/example/table-of-contents/with-toc/","title":"With ToC","section":"Table of Contents","content":"\rCaput vino delphine in tamen vias\r#\rCognita laeva illo fracta\r#\rLorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.\nTe at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit Natus quaerere\r#\rPectora et sine mulcere, coniuge dum tincta incurvae. Quis iam; est dextra Peneosque, metuis a verba, primo. Illa sed colloque suis: magno: gramen, aera excutiunt concipit.\nPhrygiae petendo suisque extimuit, super, pars quod audet! Turba negarem. Fuerat attonitus; et dextra retinet sidera ulnas undas instimulat vacuae generis? Agnus dabat et ignotis dextera, sic tibi pacis feriente at mora euhoeque comites hostem vestras Phineus. Vultuque sanguine dominoque metuit risi fama vergit summaque meus clarissimus artesque tinguebat successor nominis cervice caelicolae.\nLimitibus misere sit\r#\rAurea non fata repertis praerupit feruntur simul, meae hosti lentaque citius levibus, cum sede dixit, Phaethon texta. Albentibus summos multifidasque iungitur loquendi an pectore, mihi ursaque omnia adfata, aeno parvumque in animi perlucentes. Epytus agis ait vixque clamat ornum adversam spondet, quid sceptra ipsum est. Reseret nec; saeva suo passu debentia linguam terga et aures et cervix de ubera. Coercet gelidumque manus, doluit volvitur induta?\nEnim sua\r#\rIuvenilior filia inlustre templa quidem herbis permittat trahens huic. In cruribus proceres sole crescitque fata, quos quos; merui maris se non tamen in, mea.\nGermana aves pignus tecta\r#\rMortalia rudibusque caelum cognosceret tantum aquis redito felicior texit, nec, aris parvo acre. Me parum contulerant multi tenentem, gratissime suis; vultum tu occupat deficeret corpora, sonum. E Actaea inplevit Phinea concepit nomenque potest sanguine captam nulla et, in duxisses campis non; mercede. Dicere cur Leucothoen obitum?\nPostibus mittam est nubibus principium pluma, exsecratur facta et. Iunge Mnemonidas pallamque pars; vere restitit alis flumina quae quoque, est ignara infestus Pyrrha. Di ducis terris maculatum At sede praemia manes nullaque!\n"},{"id":2,"href":"/docs/example/table-of-contents/without-toc/","title":"Without ToC","section":"Table of Contents","content":"\rAt me ipso nepotibus nunc celebratior genus\r#\rTanto oblite\r#\rLorem markdownum pectora novis patenti igne sua opus aurae feras materiaque illic demersit imago et aristas questaque posset. Vomit quoque suo inhaesuro clara. Esse cumque, per referri triste. Ut exponit solisque communis in tendens vincetis agisque iamque huic bene ante vetat omina Thebae rates. Aeacus servat admonitu concidit, ad resimas vultus et rugas vultu dignamque Siphnon.\nQuam iugulum regia simulacra, plus meruit humo pecorumque haesit, ab discedunt dixit: ritu pharetramque. Exul Laurenti orantem modo, per densum missisque labor manibus non colla unum, obiectat. Tu pervia collo, fessus quae Cretenque Myconon crate! Tegumenque quae invisi sudore per vocari quaque plus ventis fluidos. Nodo perque, fugisse pectora sorores.\nSumme promissa supple vadit lenius\r#\rQuibus largis latebris aethera versato est, ait sentiat faciemque. Aequata alis nec Caeneus exululat inclite corpus est, ire tibi ostendens et tibi. Rigent et vires dique possent lumina; eadem dixit poma funeribus paret et felix reddebant ventis utile lignum.\nRemansit notam Stygia feroxque Et dabit materna Vipereas Phrygiaeque umbram sollicito cruore conlucere suus Quarum Elis corniger Nec ieiunia dixit Vertitur mos ortu ramosam contudit dumque; placabat ac lumen. Coniunx Amoris spatium poenamque cavernis Thebae Pleiadasque ponunt, rapiare cum quae parum nimium rima.\nQuidem resupinus inducto solebat una facinus quae\r#\rCredulitas iniqua praepetibus paruit prospexit, voce poena, sub rupit sinuatur, quin suum ventorumque arcadiae priori. Soporiferam erat formamque, fecit, invergens, nymphae mutat fessas ait finge.\nBaculum mandataque ne addere capiti violentior Altera duas quam hoc ille tenues inquit Sicula sidereus latrantis domoque ratae polluit comites Possit oro clausura namque se nunc iuvenisque Faciem posuit Quodque cum ponunt novercae nata vestrae aratra Ite extrema Phrygiis, patre dentibus, tonso perculit, enim blanda, manibus fide quos caput armis, posse! Nocendo fas Alcyonae lacertis structa ferarum manus fulmen dubius, saxa caelum effuge extremis fixum tumor adfecit bella, potentes? Dum nec insidiosa tempora tegit spirarunt. Per lupi pars foliis, porreximus humum negant sunt subposuere Sidone steterant auro. Memoraverit sine: ferrum idem Orion caelum heres gerebat fixis?\n"},{"id":3,"href":"/posts/creating-a-new-theme/","title":"Creating a New Theme","section":"Blog","content":"\rIntroduction\r#\rThis tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template. Then we\u0026rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.\nIn this tutorial, commands that you enter will start with the \u0026ldquo;$\u0026rdquo; prompt. The output will follow. Lines that start with \u0026ldquo;#\u0026rdquo; are comments that I\u0026rsquo;ve added to explain a point. When I show updates to a file, the \u0026ldquo;:wq\u0026rdquo; on the last line means to save the file.\nHere\u0026rsquo;s an example:\n## this is a comment\r$ echo this is a command\rthis is a command\r## edit the file\r$ vi foo.md\r+++\rdate = \u0026#34;2014-09-28\u0026#34;\rtitle = \u0026#34;creating a new theme\u0026#34;\r+++\rbah and humbug\r:wq\r## show it\r$ cat foo.md\r+++\rdate = \u0026#34;2014-09-28\u0026#34;\rtitle = \u0026#34;creating a new theme\u0026#34;\r+++\rbah and humbug\r$ Some Definitions\r#\rThere are a few concepts that you need to understand before creating a theme.\nSkins\r#\rSkins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.\nYou have two ways to create a skin. The simplest way is to create it in the layouts/ directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the layouts/ directory so it will always find the skin.\nYour second choice is to create it in a sub-directory of the themes/ directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?\nThe difference between creating a skin in layouts/ and creating it in themes/ is very subtle. A skin in layouts/ can’t be customized without updating the templates and static files that it is built from. A skin created in themes/, on the other hand, can be and that makes it easier for other people to use it.\nThe rest of this tutorial will call a skin created in the themes/ directory a theme.\nNote that you can use this tutorial to create a skin in the layouts/ directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.\nThe Home Page\r#\rThe home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.\nSite Configuration File\r#\rWhen Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.\nHugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your content/ directory and template files in your themes/ directory. It will create HTML files in your public/ directory. You can change this by specifying alternate locations in the configuration file.\nContent\r#\rContent is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.\nFront Matter\r#\rThe front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “+++”, YAML by “---”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.\nThe information in the front matter is passed into the template before the content is rendered into HTML.\nMarkdown\r#\rContent is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.\nTemplate Files\r#\rHugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it\u0026rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.\nThere are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.\nHugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.\nPlease note that you can use the front matter to influence Hugo’s choice of templates.\nSingle Template\r#\rA single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.\nList Template\r#\rA list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.\nThe homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.\nPartial Template\r#\rA partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.\nCreate a New Site\r#\rLet\u0026rsquo;s use Hugo to create a new web site. I\u0026rsquo;m a Mac user, so I\u0026rsquo;ll create mine in my home directory, in the Sites folder. If you\u0026rsquo;re using Linux, you might have to create the folder first.\nThe \u0026ldquo;new site\u0026rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.\n$ hugo new site ~/Sites/zafta\r$ cd ~/Sites/zafta\r$ ls -l\rtotal 8\rdrwxr-xr-x 7 quoha staff 238 Sep 29 16:49 .\rdrwxr-xr-x 3 quoha staff 102 Sep 29 16:49 ..\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes\r-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static\r$ Take a look in the content/ directory to confirm that it is empty.\nThe other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That\u0026rsquo;s a topic for a different tutorial, so please ignore them for now.\nGenerate the HTML For the New Site\r#\rRunning the hugo command with no options will read all the available content and generate the HTML files. It will also copy all static files (that\u0026rsquo;s everything that\u0026rsquo;s not content). Since we have an empty site, it won\u0026rsquo;t do much, but it will do it very quickly.\n$ hugo --verbose\rINFO: 2014/09/29 Using config file: config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]\rWARN: 2014/09/29 Unable to locate layout: [404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 2 ms\r$ The \u0026ldquo;--verbose\u0026rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with \u0026ldquo;INFO:\u0026rdquo; or \u0026ldquo;WARN:\u0026rdquo; is present because we used that flag. The lines that start with \u0026ldquo;WARN:\u0026rdquo; are warning messages. We\u0026rsquo;ll go over them later.\nWe can verify that the command worked by looking at the directory again.\n$ ls -l\rtotal 8\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes\r-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts\rdrwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static\r$ See that new public/ directory? Hugo placed all generated content there. When you\u0026rsquo;re ready to publish your web site, that\u0026rsquo;s the place to start. For now, though, let\u0026rsquo;s just confirm that we have what we\u0026rsquo;d expect from a site with no content.\n$ ls -l public\rtotal 16\r-rw-r--r-- 1 quoha staff 416 Sep 29 17:02 index.xml\r-rw-r--r-- 1 quoha staff 262 Sep 29 17:02 sitemap.xml\r$ Hugo created two XML files, which is standard, but there are no HTML files.\nTest the New Site\r#\rVerify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the \u0026ldquo;server\u0026rdquo; command. If it is successful, you will see output similar to the following:\n$ hugo server --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]\rWARN: 2014/09/29 Unable to locate layout: [404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 2 ms\rServing pages from /Users/quoha/Sites/zafta/public\rWeb Server is available at http://localhost:1313\rPress Ctrl+C to stop Connect to the listed URL (it\u0026rsquo;s on the line that starts with \u0026ldquo;Web Server\u0026rdquo;). If everything is working correctly, you should get a page that shows the following:\nindex.xml\rsitemap.xml That\u0026rsquo;s a listing of your public/ directory. Hugo didn\u0026rsquo;t create a home page because our site has no content. When there\u0026rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.\nLet’s go back and look at those warnings again.\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]\rWARN: 2014/09/29 Unable to locate layout: [404.html] That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.\nNow for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.\nI like that the verbose flag causes Hugo to list the files that it\u0026rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we\u0026rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn\u0026rsquo;t find a template for the home page and it told you so.\nAt this point, you\u0026rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.\nCreate a New Theme\r#\rHugo doesn\u0026rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.\nWe\u0026rsquo;re going to create a new theme called \u0026ldquo;zafta.\u0026rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.\nAll themes have opinions on content and layout. For example, Zafta uses \u0026ldquo;post\u0026rdquo; over \u0026ldquo;blog\u0026rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.\nCreate a Skeleton\r#\rUse the hugo \u0026ldquo;new\u0026rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.\n$ hugo new theme zafta\r$ ls -l\rtotal 8\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 archetypes\r-rw-r--r-- 1 quoha staff 82 Sep 29 16:49 config.toml\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 content\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 layouts\rdrwxr-xr-x 4 quoha staff 136 Sep 29 17:02 public\rdrwxr-xr-x 2 quoha staff 68 Sep 29 16:49 static\rdrwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes\r$ find themes -type f | xargs ls -l\r-rw-r--r-- 1 quoha staff 1081 Sep 29 17:31 themes/zafta/LICENSE.md\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/archetypes/default.md\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html\r-rw-r--r-- 1 quoha staff 93 Sep 29 17:31 themes/zafta/theme.toml\r$ The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.\nPlease take a minute to fill out the theme.toml and LICENSE.md files. They\u0026rsquo;re optional, but if you\u0026rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It\u0026rsquo;s also nice to declare the license so that people will know how they can use the theme.\n$ vi themes/zafta/theme.toml\rauthor = \u0026#34;michael d henderson\u0026#34;\rdescription = \u0026#34;a minimal working template\u0026#34;\rlicense = \u0026#34;MIT\u0026#34;\rname = \u0026#34;zafta\u0026#34;\rsource_repo = \u0026#34;\u0026#34;\rtags = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;]\r:wq\r## also edit themes/zafta/LICENSE.md and change\r## the bit that says \u0026#34;YOUR_NAME_HERE\u0026#34; Note that the the skeleton\u0026rsquo;s template files are empty. Don\u0026rsquo;t worry, we\u0026rsquo;ll be changing that shortly.\n$ find themes/zafta -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/single.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/partials/header.html\r$ Update the Configuration File to Use the Theme\r#\rNow that we\u0026rsquo;ve got a theme to work with, it\u0026rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add \u0026ldquo;-t zafta\u0026rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don\u0026rsquo;t put it in the configuration file or specify it on the command line, you won\u0026rsquo;t use the template that you\u0026rsquo;re expecting to.\nEdit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.\n$ vi config.toml\rtheme = \u0026#34;zafta\u0026#34;\rbaseurl = \u0026#34;\u0026#34;\rlanguageCode = \u0026#34;en-us\u0026#34;\rtitle = \u0026#34;zafta - totally refreshing\u0026#34;\rMetaDataFormat = \u0026#34;toml\u0026#34;\r:wq\r$ Generate the Site\r#\rNow that we have an empty theme, let\u0026rsquo;s generate the site again.\n$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 2 ms\r$ Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme\u0026rsquo;s directory.\nLet\u0026rsquo;s check the public/ directory to see what Hugo\u0026rsquo;s created.\n$ ls -l public\rtotal 16\rdrwxr-xr-x 2 quoha staff 68 Sep 29 17:56 css\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:56 index.html\r-rw-r--r-- 1 quoha staff 407 Sep 29 17:56 index.xml\rdrwxr-xr-x 2 quoha staff 68 Sep 29 17:56 js\r-rw-r--r-- 1 quoha staff 243 Sep 29 17:56 sitemap.xml\r$ Notice four things:\nHugo created a home page. This is the file public/index.html. Hugo created a css/ directory. Hugo created a js/ directory. Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn\u0026rsquo;t create any pages. That\u0026rsquo;s because it considers a \u0026ldquo;page\u0026rdquo; to be a file created directly from a content file. It doesn\u0026rsquo;t count things like the index.html files that it creates automatically. The Home Page\r#\rHugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo\u0026rsquo;s warning message shows that it looks for three different templates:\nWARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html] If it can\u0026rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.\nWhen Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.\n$ find . -name index.html | xargs ls -l\r-rw-r--r-- 1 quoha staff 0 Sep 29 20:21 ./public/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 ./themes/zafta/layouts/index.html\r$ The Magic of Static\r#\rHugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.\nHugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo\u0026rsquo;s opinion is that you\u0026rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don\u0026rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo\u0026rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.\n$ find themes/zafta -type d | xargs ls -ld\rdrwxr-xr-x 7 quoha staff 238 Sep 29 17:38 themes/zafta\rdrwxr-xr-x 3 quoha staff 102 Sep 29 17:31 themes/zafta/archetypes\rdrwxr-xr-x 5 quoha staff 170 Sep 29 17:31 themes/zafta/layouts\rdrwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/_default\rdrwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/layouts/partials\rdrwxr-xr-x 4 quoha staff 136 Sep 29 17:31 themes/zafta/static\rdrwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/css\rdrwxr-xr-x 2 quoha staff 68 Sep 29 17:31 themes/zafta/static/js\r$ The Theme Development Cycle\r#\rWhen you\u0026rsquo;re working on a theme, you will make changes in the theme\u0026rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:\nPurge the public/ directory. Run the built in web server in watch mode. Open your site in a browser. Update the theme. Glance at your browser window to see changes. Return to step 4. I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.\nCheck the main Hugo site for information on using Git with Hugo.\nPurge the public/ Directory\r#\rWhen generating the site, Hugo will create new files and update existing ones in the public/ directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.\nNote: If you\u0026rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.\nHugo\u0026rsquo;s Watch Option\r#\rHugo\u0026rsquo;s \u0026ldquo;--watch\u0026rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.\nLive Reload\r#\rHugo\u0026rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, \u0026ldquo;Wow, that\u0026rsquo;s totally amazing.\u0026rdquo;\nDevelopment Commands\r#\rUse the following commands as the basis for your workflow.\n## purge old files. hugo will recreate the public directory.\r##\r$ rm -rf public\r##\r## run hugo in watch mode\r##\r$ hugo server --watch --verbose Here\u0026rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I\u0026rsquo;ve said this before, it\u0026rsquo;s amazing.\n$ rm -rf public\r$ hugo server --watch --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 2 ms\rWatching for changes in /Users/quoha/Sites/zafta/content\rServing pages from /Users/quoha/Sites/zafta/public\rWeb Server is available at http://localhost:1313\rPress Ctrl+C to stop\rINFO: 2014/09/29 File System Event: [\u0026#34;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html\u0026#34;: MODIFY|ATTRIB]\rChange detected, rebuilding site\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 1 ms Update the Home Page Template\r#\rThe home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme\u0026rsquo;s layout/ directory:\nindex.html _default/list.html _default/single.html We could update one of the default templates, but a good design decision is to update the most specific template available. That\u0026rsquo;s not a hard and fast rule (in fact, we\u0026rsquo;ll break it a few times in this tutorial), but it is a good generalization.\nMake a Static Home Page\r#\rRight now, that page is empty because we don\u0026rsquo;t have any content and we don\u0026rsquo;t have any logic in the template. Let\u0026rsquo;s change that by adding some text to the template.\n$ vi themes/zafta/layouts/index.html\r\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; :wq\r$ Build the web site and then verify the results.\n$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 0 pages created 0 tags created\r0 categories created\rin 2 ms\r$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-r--r-- 1 quoha staff 78 Sep 29 21:26 public/index.html\r$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;/html\u0026gt; Live Reload\r#\rNote: If you\u0026rsquo;re running the server with the --watch option, you\u0026rsquo;ll see different content in the file:\n$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;hugo says hello!\u0026lt;/p\u0026gt; \u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39; + (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0] + \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39; + \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; When you use --watch, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.\nBuild a \u0026ldquo;Dynamic\u0026rdquo; Home Page\r#\r\u0026ldquo;Dynamic home page?\u0026rdquo; Hugo\u0026rsquo;s a static web site generator, so this seems an odd thing to say. I mean let\u0026rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We\u0026rsquo;ll use iteration in the template to do that.\nCreate New Posts\r#\rNow that we have the home page generating static content, let\u0026rsquo;s add some content to the site. We\u0026rsquo;ll display these posts as a list on the home page and on their own page, too.\nHugo has a command to generate a skeleton post, just like it does for sites and themes.\n$ hugo --verbose new post/first.md\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 attempting to create post/first.md of post\rINFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md\rERROR: 2014/09/29 Unable to Cast \u0026lt;nil\u0026gt; to map[string]interface{}\r$ That wasn\u0026rsquo;t very nice, was it?\nThe \u0026ldquo;new\u0026rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there\u0026rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.\n$ vi themes/zafta/archetypes/post.md\r+++\rDescription = \u0026#34;\u0026#34;\rTags = []\rCategories = []\r+++\r:wq\r$ find themes/zafta/archetypes -type f | xargs ls -l\r-rw-r--r-- 1 quoha staff 0 Sep 29 21:53 themes/zafta/archetypes/default.md\r-rw-r--r-- 1 quoha staff 51 Sep 29 21:54 themes/zafta/archetypes/post.md\r$ hugo --verbose new post/first.md\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 attempting to create post/first.md of post\rINFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md\rINFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md\r/Users/quoha/Sites/zafta/content/post/first.md created\r$ hugo --verbose new post/second.md\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 attempting to create post/second.md of post\rINFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md\rINFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md\r/Users/quoha/Sites/zafta/content/post/second.md created\r$ ls -l content/post\rtotal 16\r-rw-r--r-- 1 quoha staff 104 Sep 29 21:54 first.md\r-rw-r--r-- 1 quoha staff 105 Sep 29 21:57 second.md\r$ cat content/post/first.md +++\rCategories = []\rDescription = \u0026#34;\u0026#34;\rTags = []\rdate = \u0026#34;2014-09-29T21:54:53-05:00\u0026#34;\rtitle = \u0026#34;first\u0026#34;\r+++\rmy first post\r$ cat content/post/second.md +++\rCategories = []\rDescription = \u0026#34;\u0026#34;\rTags = []\rdate = \u0026#34;2014-09-29T21:57:09-05:00\u0026#34;\rtitle = \u0026#34;second\u0026#34;\r+++\rmy second post\r$ Build the web site and then verify the results.\n$ rm -rf public\r$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;, \u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;}\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 2 pages created 0 tags created\r0 categories created\rin 4 ms\r$ The output says that it created 2 pages. Those are our new posts:\n$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-r--r-- 1 quoha staff 78 Sep 29 22:13 public/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/first/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:13 public/post/second/index.html\r$ The new files are empty because because the templates used to generate the content are empty. The homepage doesn\u0026rsquo;t show the new content, either. We have to update the templates to add the posts.\nList and Single Templates\r#\rIn Hugo, we have three major kinds of templates. There\u0026rsquo;s the home page template that we updated previously. It is used only by the home page. We also have \u0026ldquo;single\u0026rdquo; templates which are used to generate output for a single content file. We also have \u0026ldquo;list\u0026rdquo; templates that are used to group multiple pieces of content before generating output.\nGenerally speaking, list templates are named \u0026ldquo;list.html\u0026rdquo; and single templates are named \u0026ldquo;single.html.\u0026rdquo;\nThere are three other types of templates: partials, content views, and terms. We will not go into much detail on these.\nAdd Content to the Homepage\r#\rThe home page will contain a list of posts. Let\u0026rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.\n$ vi themes/zafta/layouts/index.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r{{ range first 10 .Data.Pages }}\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r{{ end }}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r:wq\r$ Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between \u0026ldquo;{{\u0026rdquo; and \u0026ldquo;}}\u0026rdquo;. In our template, the commands are:\nrange .Title end The \u0026ldquo;range\u0026rdquo; command is an iterator. We\u0026rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.\nThe \u0026ldquo;.Title\u0026rdquo; command prints the value of the \u0026ldquo;title\u0026rdquo; variable. Hugo pulls it from the front matter in the Markdown file.\nThe \u0026ldquo;end\u0026rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds \u0026ldquo;end.\u0026rdquo; Everything between the \u0026ldquo;range\u0026rdquo; and \u0026ldquo;end\u0026rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.\nIt\u0026rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.\nBuild the web site and then verify the results.\n$ rm -rf public\r$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;}\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 2 pages created 0 tags created\r0 categories created\rin 4 ms\r$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l -rw-r--r-- 1 quoha staff 94 Sep 29 22:23 public/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/first/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:23 public/post/second/index.html\r$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt;\r\u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r$ Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let\u0026rsquo;s take a moment to appreciate what we\u0026rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you\u0026rsquo;ve learned everything you need to know to build a theme. All that\u0026rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.\nAnd, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don\u0026rsquo;t worry, though, that\u0026rsquo;s all to come.\nAdd Content to the Posts\r#\rWe\u0026rsquo;re working with posts, which are in the content/post/ directory. That means that their section is \u0026ldquo;post\u0026rdquo; (and if we don\u0026rsquo;t do something weird, their type is also \u0026ldquo;post\u0026rdquo;).\nHugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can\u0026rsquo;t find one, then it will look in the _default/ directory. There are some twists that we\u0026rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.\nNow that we know the search rule, let\u0026rsquo;s see what we actually have available:\n$ find themes/zafta -name single.html | xargs ls -l\r-rw-r--r-- 1 quoha staff 132 Sep 29 17:31 themes/zafta/layouts/_default/single.html We could create a new template, post/single.html, or change the default. Since we don\u0026rsquo;t know of any other content types, let\u0026rsquo;s start with updating the default.\nRemember, any content that we haven\u0026rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we\u0026rsquo;re going to be adding different types of content and we\u0026rsquo;re going to end up undoing some of the changes we\u0026rsquo;ve made. It\u0026rsquo;s good because we\u0026rsquo;ll be able to see immediate results. It\u0026rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we\u0026rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we\u0026rsquo;ll accept the cost and proceed.\nPlease see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you\u0026rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That\u0026rsquo;s a refreshing amount of joy right there.\nUpdate the Template File\r#\r$ vi themes/zafta/layouts/_default/single.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r{{ .Content }}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r:wq\r$ Build the web site and verify the results.\n$ rm -rf public\r$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;}\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 2 pages created 0 tags created\r0 categories created\rin 4 ms\r$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-r--r-- 1 quoha staff 94 Sep 29 22:40 public/index.html\r-rw-r--r-- 1 quoha staff 125 Sep 29 22:40 public/post/first/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:40 public/post/index.html\r-rw-r--r-- 1 quoha staff 128 Sep 29 22:40 public/post/second/index.html\r$ cat public/post/first/index.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;first\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;first\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;my first post\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r$ cat public/post/second/index.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;second\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;second\u0026lt;/h1\u0026gt;\r\u0026lt;p\u0026gt;my second post\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r$ Notice that the posts now have content. You can go to localhost:1313/post/first to verify.\nLinking to Content\r#\rThe posts are on the home page. Let\u0026rsquo;s add a link from there to the post. Since this is the home page, we\u0026rsquo;ll update its template.\n$ vi themes/zafta/layouts/index.html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r{{ range first 10 .Data.Pages }}\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r{{ end }}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; Build the web site and verify the results.\n$ rm -rf public\r$ hugo --verbose\rINFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/\rINFO: 2014/09/29 found taxonomies: map[string]string{\u0026#34;tag\u0026#34;:\u0026#34;tags\u0026#34;, \u0026#34;category\u0026#34;:\u0026#34;categories\u0026#34;}\rWARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]\r0 draft content 0 future content 2 pages created 0 tags created\r0 categories created\rin 4 ms\r$ find public -type f -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-r--r-- 1 quoha staff 149 Sep 29 22:44 public/index.html\r-rw-r--r-- 1 quoha staff 125 Sep 29 22:44 public/post/first/index.html\r-rw-r--r-- 1 quoha staff 0 Sep 29 22:44 public/post/index.html\r-rw-r--r-- 1 quoha staff 128 Sep 29 22:44 public/post/second/index.html\r$ cat public/index.html \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/second/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;/post/first/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r$ Create a Post Listing\r#\rWe have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let\u0026rsquo;s make it show a list of all posts (not just the first ten).\nWe need to decide which template to update. This will be a listing, so it should be a list template. Let\u0026rsquo;s take a quick look and see which list templates are available.\n$ find themes/zafta -name list.html | xargs ls -l\r-rw-r--r-- 1 quoha staff 0 Sep 29 17:31 themes/zafta/layouts/_default/list.html As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don\u0026rsquo;t have multiple content types, so let\u0026rsquo;s stay consistent and update the default list template.\nCreating Top Level Pages\r#\rLet\u0026rsquo;s add an \u0026ldquo;about\u0026rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).\nThe default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let\u0026rsquo;s verify that by creating an \u0026ldquo;about\u0026rdquo; page at the top level:\n$ vi content/about.md +++\rtitle = \u0026#34;about\u0026#34;\rdescription = \u0026#34;about this site\u0026#34;\rdate = \u0026#34;2014-09-27\u0026#34;\rslug = \u0026#34;about time\u0026#34;\r+++\r## about us\ri\u0026#39;m speechless\r:wq Generate the web site and verify the results.\n$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:08 public/about-time/index.html\r-rw-rw-r-- 1 mdhender staff 527 Sep 27 15:08 public/index.html\r-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:08 public/post/first-post/index.html\r-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:08 public/post/index.html\r-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:08 public/post/second-post/index.html Notice that the page wasn\u0026rsquo;t created at the top level. It was created in a sub-directory named \u0026lsquo;about-time/\u0026rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It\u0026rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.\nOne other thing. Take a look at the home page.\n$ cat public/index.html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/theme/\u0026#34;\u0026gt;creating a new theme\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/about-time/\u0026#34;\u0026gt;about\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/second-post/\u0026#34;\u0026gt;second\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;http://localhost:1313/post/first-post/\u0026#34;\u0026gt;first\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt;\r\u0026lt;script\u0026gt;document.write(\u0026#39;\u0026lt;script src=\u0026#34;http://\u0026#39;\r+ (location.host || \u0026#39;localhost\u0026#39;).split(\u0026#39;:\u0026#39;)[0]\r+ \u0026#39;:1313/livereload.js?mindelay=10\u0026#34;\u0026gt;\u0026lt;/\u0026#39;\r+ \u0026#39;script\u0026gt;\u0026#39;)\u0026lt;/script\u0026gt;\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt; Notice that the \u0026ldquo;about\u0026rdquo; link is listed with the posts? That\u0026rsquo;s not desirable, so let\u0026rsquo;s change that first.\n$ vi themes/zafta/layouts/index.html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt;\r{{ range first 10 .Data.Pages }}\r{{ if eq .Type \u0026#34;post\u0026#34;}}\r\u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt;\r{{ end }}\r{{ end }}\r\u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt;\r{{ range .Data.Pages }}\r{{ if eq .Type \u0026#34;page\u0026#34; }}\r\u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt;\r{{ end }}\r{{ end }}\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r:wq Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.\nBut, that about page still renders to about-time/index.html.\n$ find public -name \u0026#39;*.html\u0026#39; | xargs ls -l\r-rw-rw-r-- 1 mdhender staff 334 Sep 27 15:33 public/about-time/index.html\r-rw-rw-r-- 1 mdhender staff 645 Sep 27 15:33 public/index.html\r-rw-rw-r-- 1 mdhender staff 358 Sep 27 15:33 public/post/first-post/index.html\r-rw-rw-r-- 1 mdhender staff 0 Sep 27 15:33 public/post/index.html\r-rw-rw-r-- 1 mdhender staff 342 Sep 27 15:33 public/post/second-post/index.html Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let\u0026rsquo;s do it the hard way and change the permalink in the configuration file.\n$ vi config.toml\r[permalinks]\rpage = \u0026#34;/:title/\u0026#34;\rabout = \u0026#34;/:filename/\u0026#34; Generate the web site and verify that this didn\u0026rsquo;t work. Hugo lets \u0026ldquo;slug\u0026rdquo; or \u0026ldquo;URL\u0026rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.\nSharing Templates\r#\rIf you\u0026rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn\u0026rsquo;t. That\u0026rsquo;s because we didn\u0026rsquo;t put the title in the home page\u0026rsquo;s template (layouts/index.html). That\u0026rsquo;s an easy thing to do, but let\u0026rsquo;s look at a different option.\nWe can put the common bits into a shared template that\u0026rsquo;s stored in the themes/zafta/layouts/partials/ directory.\nCreate the Header and Footer Partials\r#\rIn Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme\u0026rsquo;s presentation.\n$ vi themes/zafta/layouts/partials/header.html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r:wq\r$ vi themes/zafta/layouts/partials/footer.html\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r:wq Update the Home Page Template to Use the Partials\r#\rThe most noticeable difference between a template call and a partials call is the lack of path:\n{{ template \u0026#34;theme/partials/header.html\u0026#34; . }} versus\n{{ partial \u0026#34;header.html\u0026#34; . }} Both pass in the context.\nLet\u0026rsquo;s change the home page template to use these new partials.\n$ vi themes/zafta/layouts/index.html\r{{ partial \u0026#34;header.html\u0026#34; . }}\r\u0026lt;h1\u0026gt;posts\u0026lt;/h1\u0026gt;\r{{ range first 10 .Data.Pages }}\r{{ if eq .Type \u0026#34;post\u0026#34;}}\r\u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt;\r{{ end }}\r{{ end }}\r\u0026lt;h1\u0026gt;pages\u0026lt;/h1\u0026gt;\r{{ range .Data.Pages }}\r{{ if or (eq .Type \u0026#34;page\u0026#34;) (eq .Type \u0026#34;about\u0026#34;) }}\r\u0026lt;h2\u0026gt;\u0026lt;a href=\u0026#34;{{ .Permalink }}\u0026#34;\u0026gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}\u0026lt;/a\u0026gt;\u0026lt;/h2\u0026gt;\r{{ end }}\r{{ end }}\r{{ partial \u0026#34;footer.html\u0026#34; . }}\r:wq Generate the web site and verify the results. The title on the home page is now \u0026ldquo;your title here\u0026rdquo;, which comes from the \u0026ldquo;title\u0026rdquo; variable in the config.toml file.\nUpdate the Default Single Template to Use the Partials\r#\r$ vi themes/zafta/layouts/_default/single.html\r{{ partial \u0026#34;header.html\u0026#34; . }}\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r{{ .Content }}\r{{ partial \u0026#34;footer.html\u0026#34; . }}\r:wq Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.\nAdd “Date Published” to Posts\r#\rIt\u0026rsquo;s common to have posts display the date that they were written or published, so let\u0026rsquo;s add that. The front matter of our posts has a variable named \u0026ldquo;date.\u0026rdquo; It\u0026rsquo;s usually the date the content was created, but let\u0026rsquo;s pretend that\u0026rsquo;s the value we want to display.\nAdd “Date Published” to the Template\r#\rWe\u0026rsquo;ll start by updating the template used to render the posts. The template code will look like:\n{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }} Posts use the default single template, so we\u0026rsquo;ll change that file.\n$ vi themes/zafta/layouts/_default/single.html\r{{ partial \u0026#34;header.html\u0026#34; . }}\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r\u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt;\r{{ .Content }}\r{{ partial \u0026#34;footer.html\u0026#34; . }}\r:wq Generate the web site and verify the results. The posts now have the date displayed in them. There\u0026rsquo;s a problem, though. The \u0026ldquo;about\u0026rdquo; page also has the date displayed.\nAs usual, there are a couple of ways to make the date display only on posts. We could do an \u0026ldquo;if\u0026rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.\nThe \u0026ldquo;if\u0026rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of \u0026ldquo;code for today,\u0026rdquo; too.\nLet\u0026rsquo;s assume, though, that we\u0026rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we\u0026rsquo;re going to create a section template.\nLet\u0026rsquo;s restore the default single template before we forget.\n$ mkdir themes/zafta/layouts/post\r$ vi themes/zafta/layouts/_default/single.html\r{{ partial \u0026#34;header.html\u0026#34; . }}\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r{{ .Content }}\r{{ partial \u0026#34;footer.html\u0026#34; . }}\r:wq Now we\u0026rsquo;ll update the post\u0026rsquo;s version of the single template. If you remember Hugo\u0026rsquo;s rules, the template engine will use this version over the default.\n$ vi themes/zafta/layouts/post/single.html\r{{ partial \u0026#34;header.html\u0026#34; . }}\r\u0026lt;h1\u0026gt;{{ .Title }}\u0026lt;/h1\u0026gt;\r\u0026lt;h2\u0026gt;{{ .Date.Format \u0026#34;Mon, Jan 2, 2006\u0026#34; }}\u0026lt;/h2\u0026gt;\r{{ .Content }}\r{{ partial \u0026#34;footer.html\u0026#34; . }}\r:wq Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn\u0026rsquo;t.\nDon\u0026rsquo;t Repeat Yourself\r#\rDRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you\u0026rsquo;re figuring that out, accept that you\u0026rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it\u0026rsquo;s okay to delay splitting up a template.\n"},{"id":4,"href":"/posts/migrate-from-jekyll/","title":"Migrating from Jekyll","section":"Blog","content":"\rMove static content to static\r#\rJekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/\r▾ images/\rlogo.png\rshould become\n▾ \u0026lt;root\u0026gt;/\r▾ static/\r▾ images/\rlogo.png\rAdditionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nCreate your Hugo configuration file\r#\rHugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the Hugo configuration documentation for details.\nSet your configuration publish folder to _site\r#\rThe default is for Jekyll to publish to _site and for Hugo to publish to public. If, like me, you have _site mapped to a git submodule on the gh-pages branch, you\u0026rsquo;ll want to do one of two alternatives:\nChange your submodule to point to map gh-pages to public instead of _site (recommended).\ngit submodule deinit _site\rgit rm _site\rgit submodule add -b gh-pages git@github.com:your-username/your-repo.git public\rOr, change the Hugo configuration to use _site instead of public.\n{\r..\r\u0026quot;publishdir\u0026quot;: \u0026quot;_site\u0026quot;,\r..\r}\rConvert Jekyll templates to Hugo templates\r#\rThat\u0026rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to Jekyll\u0026rsquo;s template documentation if you need to refresh your memory on how you built your blog and Hugo\u0026rsquo;s template to learn Hugo\u0026rsquo;s way.\nAs a single reference data point, converting my templates for heyitsalex.net took me no more than a few hours.\nConvert Jekyll plugins to Hugo shortcodes\r#\rJekyll has plugins; Hugo has shortcodes. It\u0026rsquo;s fairly trivial to do a port.\nImplementation\r#\rAs an example, I was using a custom image_tag plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.\nJekyll\u0026rsquo;s plugin:\nmodule Jekyll\rclass ImageTag \u0026lt; Liquid::Tag\r@url = nil\r@caption = nil\r@class = nil\r@link = nil\r// Patterns\rIMAGE_URL_WITH_CLASS_AND_CAPTION =\rIMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;(\\s+)-\u0026gt;((https?:\\/\\/|\\/)(\\S+))(\\s*)/i\rIMAGE_URL_WITH_CAPTION = /((https?:\\/\\/|\\/)(\\S+))(\\s+)\u0026quot;(.*?)\u0026quot;/i\rIMAGE_URL_WITH_CLASS = /(\\w+)(\\s+)((https?:\\/\\/|\\/)(\\S+))/i\rIMAGE_URL = /((https?:\\/\\/|\\/)(\\S+))/i\rdef initialize(tag_name, markup, tokens)\rsuper\rif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK\r@class = $1\r@url = $3\r@caption = $7\r@link = $9\relsif markup =~ IMAGE_URL_WITH_CLASS_AND_CAPTION\r@class = $1\r@url = $3\r@caption = $7\relsif markup =~ IMAGE_URL_WITH_CAPTION\r@url = $1\r@caption = $5\relsif markup =~ IMAGE_URL_WITH_CLASS\r@class = $1\r@url = $3\relsif markup =~ IMAGE_URL\r@url = $1\rend\rend\rdef render(context)\rif @class\rsource = \u0026quot;\u0026lt;figure class='#{@class}'\u0026gt;\u0026quot;\relse\rsource = \u0026quot;\u0026lt;figure\u0026gt;\u0026quot;\rend\rif @link\rsource += \u0026quot;\u0026lt;a href=\\\u0026quot;#{@link}\\\u0026quot;\u0026gt;\u0026quot;\rend\rsource += \u0026quot;\u0026lt;img src=\\\u0026quot;#{@url}\\\u0026quot;\u0026gt;\u0026quot;\rif @link\rsource += \u0026quot;\u0026lt;/a\u0026gt;\u0026quot;\rend\rsource += \u0026quot;\u0026lt;figcaption\u0026gt;#{@caption}\u0026lt;/figcaption\u0026gt;\u0026quot; if @caption\rsource += \u0026quot;\u0026lt;/figure\u0026gt;\u0026quot;\rsource\rend\rend\rend\rLiquid::Template.register_tag('image', Jekyll::ImageTag)\ris written as this Hugo shortcode:\n\u0026lt;!-- image --\u0026gt;\r\u0026lt;figure {{ with .Get \u0026quot;class\u0026quot; }}class=\u0026quot;{{.}}\u0026quot;{{ end }}\u0026gt;\r{{ with .Get \u0026quot;link\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt;{{ end }}\r\u0026lt;img src=\u0026quot;{{ .Get \u0026quot;src\u0026quot; }}\u0026quot; {{ if or (.Get \u0026quot;alt\u0026quot;) (.Get \u0026quot;caption\u0026quot;) }}alt=\u0026quot;{{ with .Get \u0026quot;alt\u0026quot;}}{{.}}{{else}}{{ .Get \u0026quot;caption\u0026quot; }}{{ end }}\u0026quot;{{ end }} /\u0026gt;\r{{ if .Get \u0026quot;link\u0026quot;}}\u0026lt;/a\u0026gt;{{ end }}\r{{ if or (or (.Get \u0026quot;title\u0026quot;) (.Get \u0026quot;caption\u0026quot;)) (.Get \u0026quot;attr\u0026quot;)}}\r\u0026lt;figcaption\u0026gt;{{ if isset .Params \u0026quot;title\u0026quot; }}\r{{ .Get \u0026quot;title\u0026quot; }}{{ end }}\r{{ if or (.Get \u0026quot;caption\u0026quot;) (.Get \u0026quot;attr\u0026quot;)}}\u0026lt;p\u0026gt;\r{{ .Get \u0026quot;caption\u0026quot; }}\r{{ with .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;a href=\u0026quot;{{.}}\u0026quot;\u0026gt; {{ end }}\r{{ .Get \u0026quot;attr\u0026quot; }}\r{{ if .Get \u0026quot;attrlink\u0026quot;}}\u0026lt;/a\u0026gt; {{ end }}\r\u0026lt;/p\u0026gt; {{ end }}\r\u0026lt;/figcaption\u0026gt;\r{{ end }}\r\u0026lt;/figure\u0026gt;\r\u0026lt;!-- image --\u0026gt;\rUsage\r#\rI simply changed:\n{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg \u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were \u0026quot;having fun\u0026quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; -\u0026gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}\rto this (this example uses a slightly extended version named fig, different than the built-in figure):\n{{% fig class=\u0026quot;full\u0026quot; src=\u0026quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg\u0026quot; title=\u0026quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.\u0026quot; link=\u0026quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/\u0026quot; %}}\rAs a bonus, the shortcode named parameters are, arguably, more readable.\nFinishing touches\r#\rFix content\r#\rDepending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch is your friend. Test your changes and fix errors as needed.\nClean up\r#\rYou\u0026rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn\u0026rsquo;t used, delete it.\nA practical example in a diff\r#\rHey, it\u0026rsquo;s Alex was migrated in less than a father-with-kids day from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this diff.\n"},{"id":5,"href":"/docs/example/table-of-contents/","title":"Table of Contents","section":"Trang Chủ","content":"\rUbi loqui\r#\rMentem genus facietque salire tempus bracchia\r#\rLorem markdownum partu paterno Achillem. Habent amne generosi aderant ad pellem nec erat sustinet merces columque haec et, dixit minus nutrit accipiam subibis subdidit. Temeraria servatum agros qui sed fulva facta. Primum ultima, dedit, suo quisque linguae medentes fixo: tum petis.\nRapit vocant si hunc siste adspice\r#\rOra precari Patraeque Neptunia, dixit Danae Cithaeron armaque maxima in nati Coniugis templis fluidove. Effugit usus nec ingreditur agmen ac manus conlato. Nullis vagis nequiquam vultibus aliquos altera suum venis teneas fretum. Armos remotis hoc sine ferrea iuncta quam!\nLocus fuit caecis\r#\rNefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral),\rnorthbridge_services_troubleshooting, personal(\rfirmware_rw.trash_rw_crm.device(interactive_gopher_personal,\rsoftware, -1), megabit, ergonomicsSoftware(cmyk_usb_panel,\rmips_whitelist_duplex, cpa)));\rif (5) {\rmanagementNetwork += dma - boolean;\rkilohertz_token = 2;\rhoneypot_affiliate_ergonomics = fiber;\r}\rmouseNorthbridge = byte(nybble_xmp_modem.horse_subnet(\ranalogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet),\rgateway_ospf), repository.domain_key.mouse(serverData(fileNetwork,\rtrim_duplex_file), cellTapeDirect, token_tooltip_mashup(\rripcordingMashup)));\rmodule_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) +\rcoreLog.joystick(componentUdpLink), windows_expansion_touchscreen);\rbashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling(\rciscNavigationBacklink, table + cleanDriver), indexProtocolIsp);\rPlacabilis coactis nega ingemuit ignoscat nimia non\r#\rFrontis turba. Oculi gravis est Delphice; inque praedaque sanguine manu non.\nif (ad_api) {\rzif += usb.tiffAvatarRate(subnet, digital_rt) + exploitDrive;\rgigaflops(2 - bluetooth, edi_asp_memory.gopher(queryCursor, laptop),\rpanel_point_firmware);\rspyware_bash.statePopApplet = express_netbios_digital(\rinsertion_troubleshooting.brouter(recordFolderUs), 65);\r}\rrecursionCoreRay = -5;\rif (hub == non) {\rportBoxVirus = soundWeb(recursive_card(rwTechnologyLeopard),\rfont_radcab, guidCmsScalable + reciprocalMatrixPim);\rleft.bug = screenshot;\r} else {\rtooltipOpacity = raw_process_permalink(webcamFontUser, -1);\rexecutable_router += tape;\r}\rif (tft) {\rbandwidthWeb *= social_page;\r} else {\rregular += 611883;\rthumbnail /= system_lag_keyboard;\r}\rCaesorum illa tu sentit micat vestes papyriferi\r#\rInde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":6,"href":"/docs/example/collapsed/","title":"Collapsed","section":"Trang Chủ","content":"\rfsdfsdfk\r#\rfsdfsklfjkldsfjklsdf\ndkfjslfs\r#\r"},{"id":7,"href":"/posts/goisforlovers/","title":"(Hu)go Template Primer","section":"Blog","content":"Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.\nThis document is a brief primer on using Go templates. The Go docs provide more details.\nIntroduction to Go Templates\r#\rGo templates provide an extremely simple template language. It adheres to the belief that only the most basic of logic belongs in the template or view layer. One consequence of this simplicity is that Go templates parse very quickly.\nA unique characteristic of Go templates is they are content aware. Variables and content will be sanitized depending on the context of where they are used. More details can be found in the Go docs.\nBasic Syntax\r#\rGolang templates are HTML files with the addition of variables and functions.\nGo variables and functions are accessible within {{ }}\nAccessing a predefined variable \u0026ldquo;foo\u0026rdquo;:\n{{ foo }}\rParameters are separated using spaces\nCalling the add function with input of 1, 2:\n{{ add 1 2 }}\rMethods and fields are accessed via dot notation\nAccessing the Page Parameter \u0026ldquo;bar\u0026rdquo;\n{{ .Params.bar }}\rParentheses can be used to group items together\n{{ if or (isset .Params \u0026quot;alt\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;) }} Caption {{ end }}\rVariables\r#\rEach Go template has a struct (object) made available to it. In hugo each template is passed either a page or a node struct depending on which type of page you are rendering. More details are available on the variables page.\nA variable is accessed by referencing the variable name.\n\u0026lt;title\u0026gt;{{ .Title }}\u0026lt;/title\u0026gt;\rVariables can also be defined and referenced.\n{{ $address := \u0026quot;123 Main St.\u0026quot;}}\r{{ $address }}\rFunctions\r#\rGo template ship with a few functions which provide basic functionality. The Go template system also provides a mechanism for applications to extend the available functions with their own. Hugo template functions provide some additional functionality we believe are useful for building websites. Functions are called by using their name followed by the required parameters separated by spaces. Template functions cannot be added without recompiling hugo.\nExample:\n{{ add 1 2 }}\rIncludes\r#\rWhen including another template you will pass to it the data it will be able to access. To pass along the current context please remember to include a trailing dot. The templates location will always be starting at the /layout/ directory within Hugo.\nExample:\n{{ template \u0026quot;chrome/header.html\u0026quot; . }}\rLogic\r#\rGo templates provide the most basic iteration and conditional logic.\nIteration\r#\rJust like in Go, the Go templates make heavy use of range to iterate over a map, array or slice. The following are different examples of how to use range.\nExample 1: Using Context\n{{ range array }}\r{{ . }}\r{{ end }}\rExample 2: Declaring value variable name\n{{range $element := array}}\r{{ $element }}\r{{ end }}\rExample 2: Declaring key and value variable name\n{{range $index, $element := array}}\r{{ $index }}\r{{ $element }}\r{{ end }}\rConditionals\r#\rIf, else, with, or, \u0026amp; and provide the framework for handling conditional logic in Go Templates. Like range, each statement is closed with end.\nGo Templates treat the following values as false:\nfalse 0 any array, slice, map, or string of length zero Example 1: If\n{{ if isset .Params \u0026quot;title\u0026quot; }}\u0026lt;h4\u0026gt;{{ index .Params \u0026quot;title\u0026quot; }}\u0026lt;/h4\u0026gt;{{ end }}\rExample 2: If -\u0026gt; Else\n{{ if isset .Params \u0026quot;alt\u0026quot; }}\r{{ index .Params \u0026quot;alt\u0026quot; }}\r{{else}}\r{{ index .Params \u0026quot;caption\u0026quot; }}\r{{ end }}\rExample 3: And \u0026amp; Or\n{{ if and (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}\rExample 4: With\nAn alternative way of writing \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent.\nThe first example above could be simplified as:\n{{ with .Params.title }}\u0026lt;h4\u0026gt;{{ . }}\u0026lt;/h4\u0026gt;{{ end }}\rExample 5: If -\u0026gt; Else If\n{{ if isset .Params \u0026quot;alt\u0026quot; }}\r{{ index .Params \u0026quot;alt\u0026quot; }}\r{{ else if isset .Params \u0026quot;caption\u0026quot; }}\r{{ index .Params \u0026quot;caption\u0026quot; }}\r{{ end }}\rPipes\r#\rOne of the most powerful components of Go templates is the ability to stack actions one after another. This is done by using pipes. Borrowed from unix pipes, the concept is simple, each pipeline\u0026rsquo;s output becomes the input of the following pipe.\nBecause of the very simple syntax of Go templates, the pipe is essential to being able to chain together function calls. One limitation of the pipes is that they only can work with a single value and that value becomes the last parameter of the next pipeline.\nA few simple examples should help convey how to use the pipe.\nExample 1 :\n{{ if eq 1 1 }} Same {{ end }}\ris the same as\n{{ eq 1 1 | if }} Same {{ end }}\rIt does look odd to place the if at the end, but it does provide a good illustration of how to use the pipes.\nExample 2 :\n{{ index .Params \u0026quot;disqus_url\u0026quot; | html }}\rAccess the page parameter called \u0026ldquo;disqus_url\u0026rdquo; and escape the HTML.\nExample 3 :\n{{ if or (or (isset .Params \u0026quot;title\u0026quot;) (isset .Params \u0026quot;caption\u0026quot;)) (isset .Params \u0026quot;attr\u0026quot;)}}\rStuff Here\r{{ end }}\rCould be rewritten as\n{{ isset .Params \u0026quot;caption\u0026quot; | or isset .Params \u0026quot;title\u0026quot; | or isset .Params \u0026quot;attr\u0026quot; | if }}\rStuff Here\r{{ end }}\rContext (aka. the dot)\r#\rThe most easily overlooked concept to understand about Go templates is that {{ . }} always refers to the current context. In the top level of your template this will be the data set made available to it. Inside of a iteration it will have the value of the current item. When inside of a loop the context has changed. . will no longer refer to the data available to the entire page. If you need to access this from within the loop you will likely want to set it to a variable instead of depending on the context.\nExample:\n{{ $title := .Site.Title }}\r{{ range .Params.tags }}\r\u0026lt;li\u0026gt; \u0026lt;a href=\u0026quot;{{ $baseurl }}/tags/{{ . | urlize }}\u0026quot;\u0026gt;{{ . }}\u0026lt;/a\u0026gt; - {{ $title }} \u0026lt;/li\u0026gt;\r{{ end }}\rNotice how once we have entered the loop the value of {{ . }} has changed. We have defined a variable outside of the loop so we have access to it from within the loop.\nHugo Parameters\r#\rHugo provides the option of passing values to the template language through the site configuration (for sitewide values), or through the meta data of each specific piece of content. You can define any values of any type (supported by your front matter/config format) and use them however you want to inside of your templates.\nUsing Content (page) Parameters\r#\rIn each piece of content you can provide variables to be used by the templates. This happens in the front matter.\nAn example of this is used in this documentation site. Most of the pages benefit from having the table of contents provided. Sometimes the TOC just doesn\u0026rsquo;t make a lot of sense. We\u0026rsquo;ve defined a variable in our front matter of some pages to turn off the TOC from being displayed.\nHere is the example front matter:\n---\rtitle: \u0026#34;Permalinks\u0026#34;\rdate: \u0026#34;2013-11-18\u0026#34;\raliases:\r- \u0026#34;/doc/permalinks/\u0026#34;\rgroups: [\u0026#34;extras\u0026#34;]\rgroups_weight: 30\rnotoc: true\r--- Here is the corresponding code inside of the template:\n{{ if not .Params.notoc }}\r\u0026lt;div id=\u0026quot;toc\u0026quot; class=\u0026quot;well col-md-4 col-sm-6\u0026quot;\u0026gt;\r{{ .TableOfContents }}\r\u0026lt;/div\u0026gt;\r{{ end }}\rUsing Site (config) Parameters\r#\rIn your top-level configuration file (eg, config.yaml) you can define site parameters, which are values which will be available to you in chrome.\nFor instance, you might declare:\nparams: CopyrightHTML: \u0026#34;Copyright \u0026amp;#xA9; 2013 John Doe. All Rights Reserved.\u0026#34; TwitterUser: \u0026#34;spf13\u0026#34; SidebarRecentLimit: 5 Within a footer layout, you might then declare a \u0026lt;footer\u0026gt; which is only provided if the CopyrightHTML parameter is provided, and if it is given, you would declare it to be HTML-safe, so that the HTML entity is not escaped again. This would let you easily update just your top-level config file each January 1st, instead of hunting through your templates.\n{{if .Site.Params.CopyrightHTML}}\u0026lt;footer\u0026gt;\r\u0026lt;div class=\u0026#34;text-center\u0026#34;\u0026gt;{{.Site.Params.CopyrightHTML | safeHtml}}\u0026lt;/div\u0026gt;\r\u0026lt;/footer\u0026gt;{{end}} An alternative way of writing the \u0026ldquo;if\u0026rdquo; and then referencing the same value is to use \u0026ldquo;with\u0026rdquo; instead. With rebinds the context . within its scope, and skips the block if the variable is absent:\n{{with .Site.Params.TwitterUser}}\u0026lt;span class=\u0026#34;twitter\u0026#34;\u0026gt;\r\u0026lt;a href=\u0026#34;https://twitter.com/{{.}}\u0026#34; rel=\u0026#34;author\u0026#34;\u0026gt;\r\u0026lt;img src=\u0026#34;/images/twitter.png\u0026#34; width=\u0026#34;48\u0026#34; height=\u0026#34;48\u0026#34; title=\u0026#34;Twitter: {{.}}\u0026#34;\ralt=\u0026#34;Twitter\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\r\u0026lt;/span\u0026gt;{{end}} Finally, if you want to pull \u0026ldquo;magic constants\u0026rdquo; out of your layouts, you can do so, such as in this example:\n\u0026lt;nav class=\u0026#34;recent\u0026#34;\u0026gt;\r\u0026lt;h1\u0026gt;Recent Posts\u0026lt;/h1\u0026gt;\r\u0026lt;ul\u0026gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}\r\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;{{.RelPermalink}}\u0026#34;\u0026gt;{{.Title}}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;\r{{end}}\u0026lt;/ul\u0026gt;\r\u0026lt;/nav\u0026gt; "},{"id":8,"href":"/posts/hugoisforlovers/","title":"Getting Started with Hugo","section":"Blog","content":"\rStep 1. Install Hugo\r#\rGo to Hugo releases and download the appropriate version for your OS and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at Install Hugo\nStep 2. Build the Docs\r#\rHugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\nClone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:\ngit clone https://github.com/spf13/hugo\rcd hugo\r/path/to/where/you/installed/hugo server --source=./docs\r\u0026gt; 29 pages created\r\u0026gt; 0 tags index created\r\u0026gt; in 27 ms\r\u0026gt; Web Server is available at http://localhost:1313\r\u0026gt; Press ctrl+c to stop\rOnce you\u0026rsquo;ve gotten here, follow along the rest of this page on your local build.\nStep 3. Change the docs site\r#\rStop the Hugo process by hitting Ctrl+C.\nNow we are going to run hugo again, but this time with hugo in watch mode.\n/path/to/hugo/from/step/1/hugo server --source=./docs --watch\r\u0026gt; 29 pages created\r\u0026gt; 0 tags index created\r\u0026gt; in 27 ms\r\u0026gt; Web Server is available at http://localhost:1313\r\u0026gt; Watching for changes in /Users/spf13/Code/hugo/docs/content\r\u0026gt; Press ctrl+c to stop\rOpen your favorite editor and change one of the source content pages. How about changing this very file to fix the typo. How about changing this very file to fix the typo.\nContent files are found in docs/content/. Unless otherwise specified, files are located at the same relative location as the url, in our case docs/content/overview/quickstart.md.\nChange and save this file.. Notice what happened in your terminal.\n\u0026gt; Change detected, rebuilding site\r\u0026gt; 29 pages created\r\u0026gt; 0 tags index created\r\u0026gt; in 26 ms\rRefresh the browser and observe that the typo is now fixed.\nNotice how quick that was. Try to refresh the site before it\u0026rsquo;s finished building. I double dare you. Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.\nStep 4. Have fun\r#\rThe best way to learn something is to play with it.\n"},{"id":9,"href":"/docs/example/collapsed/3rd-level/4th-level/","title":"4th Level","section":"3rd Level","content":"\r4th Level of Menu\r#\rCaesorum illa tu sentit micat vestes papyriferi\r#\rInde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"},{"id":10,"href":"/docs/example/collapsed/3rd-level/","title":"3rd Level","section":"Collapsed","content":"\r3rd Level of Menu\r#\rNefas discordemque domino montes numen tum humili nexilibusque exit, Iove. Quae miror esse, scelerisque Melaneus viribus. Miseri laurus. Hoc est proposita me ante aliquid, aura inponere candidioribus quidque accendit bella, sumpta. Intravit quam erat figentem hunc, motus de fontes parvo tempestate.\niscsi_virus = pitch(json_in_on(eupViral),\rnorthbridge_services_troubleshooting, personal(\rfirmware_rw.trash_rw_crm.device(interactive_gopher_personal,\rsoftware, -1), megabit, ergonomicsSoftware(cmyk_usb_panel,\rmips_whitelist_duplex, cpa)));\rif (5) {\rmanagementNetwork += dma - boolean;\rkilohertz_token = 2;\rhoneypot_affiliate_ergonomics = fiber;\r}\rmouseNorthbridge = byte(nybble_xmp_modem.horse_subnet(\ranalogThroughputService * graphicPoint, drop(daw_bit, dnsIntranet),\rgateway_ospf), repository.domain_key.mouse(serverData(fileNetwork,\rtrim_duplex_file), cellTapeDirect, token_tooltip_mashup(\rripcordingMashup)));\rmodule_it = honeypot_driver(client_cold_dvr(593902, ripping_frequency) +\rcoreLog.joystick(componentUdpLink), windows_expansion_touchscreen);\rbashGigabit.external.reality(2, server_hardware_codec.flops.ebookSampling(\rciscNavigationBacklink, table + cleanDriver), indexProtocolIsp);\r"},{"id":11,"href":"/docs/example/hidden/","title":"Hidden","section":"Trang Chủ","content":"\rThis page is hidden in menufdsfsd\r#\rQuondam non pater est dignior ille Eurotas\r#\rLatent te facies\r#\rLorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona\r#\rO fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer),\rpad.property_data_programming.sectorBrowserPpga(dataMask, 37,\rrecycleRup));\rintellectualVaporwareUser += -5 * 4;\rtraceroute_key_upnp /= lag_optical(android.smb(thyristorTftp));\rsurge_host_golden = mca_compact_device(dual_dpi_opengl, 33,\rcommerce_add_ppc);\rif (lun_ipv) {\rverticalExtranet(1, thumbnail_ttl, 3);\rbar_graphics_jpeg(chipset - sector_xmp_beta);\r}\rFronde cetera dextrae sequens pennis voce muneris\r#\rActa cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software;\rif (internic \u0026gt; disk) {\remoticonLockCron += 37 + bps - 4;\rwan_ansi_honeypot.cardGigaflops = artificialStorageCgi;\rsimplex -= downloadAccess;\r}\rvar volumeHardeningAndroid = pixel + tftp + onProcessorUnmount;\rsector(memory(firewire + interlaced, wired)); "},{"id":12,"href":"/docs/example/hiddencopy/","title":"gg","section":"Trang Chủ","content":"\rThis page is hidden in menu fdfdf\r#\rQuondam non pater est dignior ille Eurotas\r#\rLatent te facies\r#\rLorem markdownum arma ignoscas vocavit quoque ille texit mandata mentis ultimus, frementes, qui in vel. Hippotades Peleus pennas conscia cuiquam Caeneus quas.\nPater demittere evincitque reddunt Maxime adhuc pressit huc Danaas quid freta Soror ego Luctus linguam saxa ultroque prior Tatiumque inquit Saepe liquitur subita superata dederat Anius sudor Cum honorum Latona\r#\rO fallor in sustinui iussorum equidem. Nymphae operi oris alii fronde parens dumque, in auro ait mox ingenti proxima iamdudum maius?\nreality(burnDocking(apache_nanometer),\rpad.property_data_programming.sectorBrowserPpga(dataMask, 37,\rrecycleRup));\rintellectualVaporwareUser += -5 * 4;\rtraceroute_key_upnp /= lag_optical(android.smb(thyristorTftp));\rsurge_host_golden = mca_compact_device(dual_dpi_opengl, 33,\rcommerce_add_ppc);\rif (lun_ipv) {\rverticalExtranet(1, thumbnail_ttl, 3);\rbar_graphics_jpeg(chipset - sector_xmp_beta);\r}\rFronde cetera dextrae sequens pennis voce muneris\r#\rActa cretus diem restet utque; move integer, oscula non inspirat, noctisque scelus! Nantemque in suas vobis quamvis, et labori!\nvar runtimeDiskCompiler = home - array_ad_software;\rif (internic \u0026gt; disk) {\remoticonLockCron += 37 + bps - 4;\rwan_ansi_honeypot.cardGigaflops = artificialStorageCgi;\rsimplex -= downloadAccess;\r}\rvar volumeHardeningAndroid = pixel + tftp + onProcessorUnmount;\rsector(memory(firewire + interlaced, wired)); "},{"id":13,"href":"/posts/2021-11-02-Di-visibleConfusion/","title":"Problem:  Di-visible Confusion","section":"Blog","content":"Cho mảng a có n phần tử. Hỏi có thể xóa tất cả các phần tử của mảng hay không? phần tử a[i] được xóa khi a[i] không chia hết cho i + 1, với 1 \u0026lt;= i \u0026lt;= |x|. Chỉ số được đánh từ 1, cập nhật lại sau mỗi thao tác xóa.\nRàng buộc\n1≤t≤10000 1≤n≤1e5 1≤ai≤1e9 It is guaranteed that the sum of n over all test cases doesn\u0026#39;t exceed 3e5. Input\n5 3 1 2 3 1 2 2 7 7 10 384836991 191890310 576823355 782177068 404011431 818008580 954291757 160449218 155374934 840594328 8 6 69 696 69696 696969 6969696 69696969 696969696 Output\nYES NO YES YES NO Submit tại đây\nHướng dẫn\nXóa từ trước ra sau. Code\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; int a[n + 1]; for(int i = 1; i \u0026lt;= n; i++){ cin \u0026gt;\u0026gt; a[i]; } bool res = 1; for(int i = 1; i \u0026lt;= n; i++){ bool temp = 0; for(int j = i + 1; j \u0026gt; 1; j--){ if(a[i] % j != 0){ temp = 1; break; } } res \u0026amp;= temp; } cout \u0026lt;\u0026lt; (res? \u0026#34;YES\\n\u0026#34;: \u0026#34;NO\\n\u0026#34;); } } "},{"id":14,"href":"/posts/2021-10-30-ABBalance/","title":"Problem: AB Balance","section":"Blog","content":"Cho chuỗi s gồm 2 kí tự \u0026lsquo;a\u0026rsquo; và(hoặc) \u0026lsquo;b\u0026rsquo;. Mỗi thao tác bạn được phép đổi 1 ký tự \u0026lsquo;a\u0026rsquo; thành \u0026lsquo;b\u0026rsquo; và ngược lại. Hãy sử dụng số thao tác tối thiểu để làm cho chuỗi s có số substring(ab) bằng số substring (ba). Xuất ra chuỗi s sau cùng.\nRàng buộc\n1≤t≤1000 1≤|s|≤100, consisting only of characters a and/or b Input\n4 b aabbbabaa abbb abbaab Output\nb aabbbabaa bbbb abbaaa Submit tại đây\nHướng dẫn\nNếu chuỗi chỉ chứa 2 ký tự, a, b. thì chuỗi sau khi bỏ qua các phần tử không cần thiết sẽ là ababab\u0026hellip; hoặc bababa\u0026hellip; Nhận thấy chỉ khi kí tự đầu và cuỗi khác nhau thì số lượng substring(ab) và số lượng substring(ba) luôn chênh lệch 1. Code\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ string s; cin \u0026gt;\u0026gt; s; if(s[0] != s.back()) s[0] = s.back(); cout \u0026lt;\u0026lt; s \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":15,"href":"/posts/2021-10-21-ACM/","title":"Problem: ACM","section":"Blog","content":"SuperCoders là đội tuyển huyền thoại của trường XYZ đã nhiều lần vô địch cuộc thi lập trình viên vũ trụ ACM Universe Final. Theo thể thức cuộc thi, mỗi đội tham dự chỉ có đúng 3 thành viên và được giao duy nhất 1 máy tính, chính vì vậy việc điều phối công việc vô cùng quan trọng. Trong đội SuperCoders, PHUONGHD - đội trưởng - là người nắm giữ vai trò đó.\nĐề thi ACM năm nay gồm có 2n bài đánh số từ 1 tới 2n. Bằng kỹ năng thiết kế thuật toán siêu việt, chỉ vài giây sau khi đọc đề, PHUONGHD đã có lời giải cho cả 2n bài. Vấn đề còn lại là phân công hai người còn lại lập trình bởi PHUONGHD không quen với thứ ngôn ngữ lập trình mới được đưa vào sử dụng tại cuộc thi.\nDo rất hiểu hai lập trình viên Tí và Tèo trong đội, PHUONGHD biết rằng bài thứ i nếu giao cho Tí làm sẽ mất ai giây, cũng bài đó nếu giao cho Tèo sẽ mất bi giây để hoàn thành (∀i: 1 ≤ i ≤ 2n). Nhiệm vụ của bạn là hãy giúp PHUONGHD phân công cho hai lập trình viên, mỗi người làm đúng n bài sao cho tổng thời gian lập trình cả 2n bài là ít nhất.\nRàng buộc\n1 \u0026lt;= n \u0026lt;= 4e5 1 \u0026lt;= a[i], b[i] \u0026lt;= 100 Input\n2 2 1 3 2 5 3 1 2 Output\n8 Submit tại đây\nHướng dẫn\nChọn ra n công việc mà người 1 làm thì nhanh hơn người 2 làm, sắp xếp theo thứ tự ưu tiên, càng nhanh hơn nhiều thì càng được chọn. Code\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n; cin \u0026gt;\u0026gt; n; pair\u0026lt;int,int\u0026gt; a[n \u0026lt;\u0026lt; 1]; for(int i = 0; i \u0026lt; n * 2; i++){ cin \u0026gt;\u0026gt; a[i].first \u0026gt;\u0026gt; a[i].second; } sort(a, a + n * 2, [](pair\u0026lt;int,int\u0026gt; x, pair\u0026lt;int,int\u0026gt; y){ return x.first - x.second \u0026lt; y.first - y.second; }); int res = 0; for(int i = 0; i \u0026lt; n; i++) res += a[i].first + a[n + i].second; cout \u0026lt;\u0026lt; res; } "},{"id":16,"href":"/posts/2021-10-30-Arena/","title":"Problem: Arena","section":"Blog","content":"Cho n (n \u0026lt;= 500) anh hùng, anh hùng thứ i có a[i] điểm sức mạnh (1 \u0026lt;= a[i] \u0026lt;= 500). Mỗi vòng chơi, mỗi anh hùng còn sống sẽ gây 1 sát thương lên các anh hùng còn lại, tức là làm giảm điểm sức mạnh của các anh hùng khác đi 1. Sau mỗi vòng, anh hùng có điểm sức mạnh \u0026lt; 1 sẽ chết. Các anh hùng còn sống tiếp tục trò chơi. Người sống sót duy nhất, sau cùng là người chiến thắng. Cho n và x trong đó n là số anh hùng và a[i] \u0026lt;= x. Hãy tìm tất cả các trường mảng a thỏa mãn, trò chơi không có người chiến thắng sau cùng. Hai trường hợp khác nhau khi có ít nhất một anh hùng có điểm sức mạnh khác nhau, ví dụ: [1, 2, 1] khác [2, 1, 1]. Xuất ra kết quả sau khi lấy phần dư cho 998244353.\nRàng buộc\n2≤n≤500 1≤x≤500 Input\n2 5 Output\n5 Submit tại đây\nHướng dẫn\nxem hàm solve phần code. Code\nĐộ phưc tạp O(n * n * x) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int M = 998244353; vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; f(501, vector\u0026lt;int\u0026gt;(501, -1)); int g[501][501]; int nCk(int n, int k){ if(g[n][k]) return g[n][k]; if(k == 0 || k == n) return g[n][k] = 1LL; return g[n][k] = (nCk(n - 1, k - 1) + nCk(n - 1, k)) % M; } int poww(int a, int n){ if(n == 0) return 1; if(n == 1) return a; int z = poww(a, n / 2) % M; if(n\u0026amp;1) return z * z % M * a % M; return z * z % M; } int solve(int n, int x){ if(f[n][x] != -1) return f[n][x]; if(n == 1) return f[n][x] = 0; if(x \u0026lt; n) return f[n][x] = poww(x, n); int res = poww(n - 1, n); for(int i = n; i \u0026gt;= 2; i--){ res += solve(i, x - (n - 1)) * poww(n - 1, n - i) % M * nCk(n, i) % M; res %= M; } return f[n][x] = res; } signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, x; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; x; cout \u0026lt;\u0026lt; solve(n, x); } "},{"id":17,"href":"/posts/2021-12-02-atomicenergy/","title":"Problem: Atomic Energy","section":"Blog","content":"Cho mảng a gồm n số nguyên dương. q truy vấn, mỗi truy vấn cho một số k. Yêu cầu tính f(k) biết nếu k \u0026lt;= n thì f(k) = a[n], ngược lại f(k) = min(f(x) + f(k - x)), x thuộc [1, k).\nRàng buộc\nn \u0026lt;= 100 1 \u0026lt;= a[i] \u0026lt;= 1e9 q \u0026lt;= 1e5 1 \u0026lt;= k \u0026lt;= 1e9 Input\n4 5 2 3 5 7 2 3 5 6 8 Output\n3 5 8 10 13 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(n^4 + q) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int n, q; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; int a[n + 1]; int m = 1; for(int i = 1; i \u0026lt;= n; i++){ cin \u0026gt;\u0026gt; a[i]; if(a[i] * m \u0026lt; a[m] * i) m = i; } int sz = 2e6; vector\u0026lt;int\u0026gt; dp(sz, 1e18); dp[0] = 0; for(int i = 1; i \u0026lt;= n; i++){ dp[i] = a[i]; } for(int i = n + 1; i \u0026lt; sz; i++){ for(int j = 1; j \u0026lt;= n; j++){ dp[i] = min(dp[i], dp[i - j] + dp[j]); } } while(q--){ int k; cin \u0026gt;\u0026gt; k; if(k \u0026lt; sz) cout \u0026lt;\u0026lt; dp[k] \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; else{ k -= 1e6; int r = k % m + 1e6; cout \u0026lt;\u0026lt; dp[r] + k / m * a[m] \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } } } "},{"id":18,"href":"/posts/2021-11-02-BestSumAnyTreePath/","title":"Problem: Best Sum Any Tree Path","section":"Blog","content":"Cho cây có n (1 ≤ n ≤ 1e5) đỉnh đánh số từ 0 tới n - 1, cha của các đỉnh và trọng số của các đỉnh. Tìm được đi có tổng trọng số lớn nhất. Biết root = 0, parent[0] = -1\nSubmit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; string ltrim(const string \u0026amp;); string rtrim(const string \u0026amp;); /* * Complete the \u0026#39;bestSumAnyTreePath\u0026#39; function below. * * The function is expected to return an INTEGER. * The function accepts following parameters: * 1. INTEGER_ARRAY parent * 2. INTEGER_ARRAY values */ int bestSumAnyTreePath(vector\u0026lt;int\u0026gt; parent, vector\u0026lt;int\u0026gt; values) { int n = values.size(); vector\u0026lt;int\u0026gt; adj[n]; for(int i = 1; i \u0026lt; n; i++){ adj[parent[i]].push_back(i); } vector\u0026lt;int\u0026gt; left(n, 0), right(n , 0), mid(n, 0); int res = 0; function\u0026lt;void(int)\u0026gt; dfs = [\u0026amp;](int u){ int le = 0, ri = 0; for(auto v: adj[u]){ dfs(v); if(left[v] \u0026gt; le){ ri = le; le = left[v]; } else if(left[v] \u0026gt; ri) ri = left[v]; } mid[u] = values[u] + le + ri; left[u] = values[u] + le; right[u] = values[u] + ri; res = max(res, max(mid[u], left[u])); }; dfs(0); return res; } int main() { ofstream fout(getenv(\u0026#34;OUTPUT_PATH\u0026#34;)); string parent_count_temp; getline(cin, parent_count_temp); int parent_count = stoi(ltrim(rtrim(parent_count_temp))); vector\u0026lt;int\u0026gt; parent(parent_count); for (int i = 0; i \u0026lt; parent_count; i++) { string parent_item_temp; getline(cin, parent_item_temp); int parent_item = stoi(ltrim(rtrim(parent_item_temp))); parent[i] = parent_item; } string values_count_temp; getline(cin, values_count_temp); int values_count = stoi(ltrim(rtrim(values_count_temp))); vector\u0026lt;int\u0026gt; values(values_count); for (int i = 0; i \u0026lt; values_count; i++) { string values_item_temp; getline(cin, values_item_temp); int values_item = stoi(ltrim(rtrim(values_item_temp))); values[i] = values_item; } int result = bestSumAnyTreePath(parent, values); fout \u0026lt;\u0026lt; result \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; fout.close(); return 0; } string ltrim(const string \u0026amp;str) { string s(str); s.erase( s.begin(), find_if(s.begin(), s.end(), not1(ptr_fun\u0026lt;int, int\u0026gt;(isspace))) ); return s; } string rtrim(const string \u0026amp;str) { string s(str); s.erase( find_if(s.rbegin(), s.rend(), not1(ptr_fun\u0026lt;int, int\u0026gt;(isspace))).base(), s.end() ); return s; } "},{"id":19,"href":"/posts/2021-11-03-Blue-Red-Permutation/","title":"Problem: Blue-Red Permutation","section":"Blog","content":"Cho mảng n phần tử. Nếu phần tử có màu đỏ,được tăng giá trị. Nếu phần tử có màu xanh, được giảm giá trị. Hỏi sau cùng có thể thu được, mảng hoán vị của n hay không?\nRàng buộc\n1≤t≤1e4 1≤n≤2⋅1e5 −1e9≤ai≤1e9 It is guaranteed that the sum of n over all input sets does not exceed 2e5. Input\n8 4 1 2 5 2 BRBR 2 1 1 BB 5 3 1 4 2 5 RBRRB 5 3 1 3 1 3 RBRRB 5 5 1 5 1 5 RBRRB 4 2 2 2 2 BRBR 2 1 -2 BR 4 -2 -1 4 0 RRRR Output\nYES NO YES YES NO YES YES YES Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; int a[n + 1]; for(int i = 1; i \u0026lt;= n; i++){ cin \u0026gt;\u0026gt; a[i]; } pair\u0026lt;int,int\u0026gt; b[n + 1]; bool ok = 1; for(int i = 1; i \u0026lt;= n; i++){ char c; cin \u0026gt;\u0026gt; c; if(c == \u0026#39;B\u0026#39;){ a[i] = min(a[i], n); b[i] = make_pair(a[i], 1); if(a[i] \u0026lt; 1) ok = 0; } else{ a[i] = max(a[i], 1LL); b[i] = make_pair(n, a[i]); if(a[i] \u0026gt; n) ok = 0; } } sort(b + 1, b + n + 1); for(int i = 1; i \u0026lt;= n; i++){ int l, r; tie(r, l) = b[i]; if(i \u0026gt; r || i \u0026lt; l) ok = 0; } cout \u0026lt;\u0026lt; (ok? \u0026#34;yes\\n\u0026#34;: \u0026#34;no\\n\u0026#34;); } } "},{"id":20,"href":"/posts/2021-10-16-BubbleStrike/","title":"Problem: Bubble Strike","section":"Blog","content":"Môt game có 2 người chơi (bạn và đối thủ). Có n bản đồ. Hệ thống chọn ra 3 bản đồ từ n bản đồ. Mỗi người chơi được phép chọn 1 bản đồ để loại (2 người chơi chọn độc lập, tức là có thể trùng). Sau đó từ các bản đồ không được chọn, hệ thống chọn ra 1 bản đồ cho game đó. Bạn chiến thắng game đó khi bạn đã xem bản đồ của game đó. Tính số bản đồ bạn cần xem để xác suất chiến thắng trò chơi \u0026gt;= P. Đối thủ của bạn không biết bạn đã xem bản đồ nào.\nRàng buộc\n3 ≤ N ≤ 1e3 0 ≤ P ≤ 1 Input\n7 1.0000 Output\n6 Submit tại đây\nHướng dẫn\nĐầu tiên, ta tính xác suất xảy ra cho từng trường hợp có thể. Các trường hợp có thể xảy ra đó là:\n3 bản đồ hệ thống chọn, bạn đều đã xem 2 bản đồ bạn đã xem. 1 bản đồ bạn đã xem. Tiếp đó ta tính xác suất bản đồ được hệ thống chọn là bản đồ đã xem.\n3 bản đồ đã xem thì chắc chăn hệ thống sẽ chọn trúng bản đồ bạn đã xem. 2 bản đồ đã xem: thì bạn sẽ chọn bản đồ chưa xem để loại bỏ, như vậy cũng chắc chắn hệ thống chọn trúng bản đồ đã xem. 1 bản đồ đã xem: bạn sẽ loại bỏ 1 bản đồ chưa xem. Bây giờ sẽ có 2 TH: (1 / 3 * 1 / 2 + 1 / 3 = 1 / 2) Đối thủ của bạn loại bỏ 1 bản đồ chưa xem giống bạn(XS th này là 1 / 3): thì lúc này còn lại 2 bản đồ 1 chưa xem, 1 đã xem; Xs hệ thống chọn trúng bản đồ đã xem là 1 / 2; Như vậy xs chiến thắng của bạn game này là 1 / 3 * 1 / 2 = 1 / 6. Đối thủ của bạn loại bỏ 1 bản đồ chưa xem khác bạn(XS th này là 1 / 3). Code\nĐộ phức tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long int nCk(int n, int k){ //voi k \u0026lt;= 3 if(k == 0) return 1; if(k == 1) return n; if(k == 2) return n * (n - 1) / 2; return n * (n - 1) * (n - 2) / 6; } main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n; double P; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; P; if(P \u0026lt;= 1e-5) return cout \u0026lt;\u0026lt; 0, 0; for(int seen = 1; seen \u0026lt;= n; seen++){ // He thong chon ra 3 ban do tu n ban do cho nguoi choi 1 double res = 0; double check = 0; int mapDaXem = min(3LL, seen); for(; mapDaXem \u0026gt;= 2; mapDaXem--){ //mapDaXem la so map da xem trong so 3 map duoc he thong chon ra double p = 1.0 * nCk(seen, mapDaXem) * nCk(n - seen, 3 - mapDaXem) / nCk(n, 3); res += p; } mapDaXem = 1; double p = 1.0 * nCk(seen, mapDaXem) * nCk(n - seen, 3 - mapDaXem) / nCk(n, 3); res += p * 1 / 2; if(res \u0026gt;= P) return cout \u0026lt;\u0026lt; seen, 0; } } "},{"id":21,"href":"/posts/2021-12-03-digitone/","title":"Problem: Chênh lệch không quá 1","section":"Blog","content":"Một số được gọi là số cân bằng nếu chênh lệch giữa hai chữ số liên tiếp là không quá 1, chẳng hạn như 34322,56654322,45,8,\u0026hellip;. Số có một chữ số cũng được xem là số cân bằng.\nRàng buộc\nT≤10 1≤L≤R≤1e100000 Input\n4 1 9 25 47 14 19 1 999999999999999999999999999 Output\n9 6 0 299194653 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double const double E = 1e-6; const int INF = 9e18; const int M = (int)1e9 + 7; const int N = 1e5 + 1; string s; int n; int f[N][10][2][2]; int solve(int pos, int preNumber, bool smaller, bool prefix0) { if(pos == n) return 1; if(f[pos][preNumber][smaller][prefix0] != -1) return f[pos][preNumber][smaller][prefix0]; int res = 0; int nu = s[pos] - \u0026#39;0\u0026#39;; if(pos == 0) { if(nu == 0) return 1; for(int i = 1; i \u0026lt; nu; i++) { res += solve(pos + 1, i, 1, 0); } res += solve(pos + 1, 0, 1, 1); res += solve(pos + 1, nu, 0, 0); } else { if(smaller) { if(prefix0) { res += solve(pos + 1, 0, 1, 1); for(int i = 1; i \u0026lt;= 9; i++) { res += solve(pos + 1, i, 1, 0); } } else { if(preNumber - 1 \u0026gt;= 0) res += solve(pos + 1, preNumber - 1, 1, 0); res += solve(pos + 1, preNumber, 1, 0); if(preNumber + 1 \u0026lt;= 9) res += solve(pos + 1, preNumber + 1, 1, 0); } } else { if(nu \u0026lt;= preNumber + 1 \u0026amp;\u0026amp; nu \u0026gt;= preNumber - 1) res += solve(pos + 1, nu, 0, 0); for(int i = 0; i \u0026lt; nu; i++) { if(i \u0026lt;= preNumber + 1 \u0026amp;\u0026amp; i \u0026gt;= preNumber - 1) res += solve(pos + 1, i, 1, 0); } } } return f[pos][preNumber][smaller][prefix0] = res % M; } string subtraction(string \u0026amp;s) { if((int)s.size() == 1) return string(1, s.back() - 1); for(int i = (int)s.length() - 1; i \u0026gt;= 0; i--) { if(s[i] != \u0026#39;0\u0026#39;){ if(i == 0) return string(s[i] \u0026gt; \u0026#39;1\u0026#39;, s[i] - 1) + string((int)s.length() - (i + 1), \u0026#39;9\u0026#39;); return s.substr(0, i) + (char)(s[i] - 1) + string((int)s.length() - (i + 1), \u0026#39;9\u0026#39;); } } } int get(string \u0026amp;x) { s = x; n = s.length(); memset(f, -1, sizeof(f)); return solve(0, 0, 0, 0); } signed main() { FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false); cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--) { string l, r; cin \u0026gt;\u0026gt; l \u0026gt;\u0026gt; r; l = subtraction(l); cout \u0026lt;\u0026lt; (get(r) - get(l) + M) % M \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":22,"href":"/posts/2021-12-25-CoinToss/","title":"Problem: Coin Toss","section":"Blog","content":"Chuỗi tung đồng xu có thể được mã hóa dưới dạng chuỗi nhị phân, \u0026lsquo;0\u0026rsquo; cho đầu, \u0026lsquo;1\u0026rsquo; cho đuôi. Cho một chuỗi được mã hóa S, tung đồng xu cho đến khi S xuất hiện trong chuỗi kết quả thì dừng lại. Gọi T là số lần tung đồng xu để S xuất hiện, tìm giá trị kỳ vọng của T.\nRàng buộc\n1 ≤ Q ≤ 1e4 1 ≤ |S| ≤ 20 Input\n1 00 Output\n6 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":23,"href":"/posts/2021-12-03-ComplexMarketAnalysis/","title":"Problem: Complex Market Analysis","section":"Blog","content":"Cho mảng a gồm n số tự nhiên và số tự nhiên e. Tính số cặp (i,k) thỏa mãn điều các điều kiện: 1\u0026lt;=i,k; i+e*k\u0026lt;=n; tích a[i]*a[i + e]*a[i + 2e]*...*a[i + ke] là số nguyên tố.\nRàng buộc\n1 \u0026lt;= t \u0026lt;= 1e4 1 \u0026lt;= e \u0026lt;= n \u0026lt;= 2e5 1 \u0026lt;= a[i] \u0026lt;= 1e6 tổng n trong tất cả các test không quá 2e5 Input\n6 7 3 10 2 1 3 1 19 3 3 2 1 13 1 9 3 2 4 2 1 1 1 1 4 2 3 1 1 1 1 4 1 1 2 1 1 2 2 1 2 Output\n2 0 4 0 5 0 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":24,"href":"/posts/2021-12-17-CrazyRobot/","title":"Problem: Crazy Robot","section":"Blog","content":"Có một lưới, bao gồm n hàng và m cột. Mỗi ô của lưới là tự do hoặc bị chặn. Một trong những ô trống chứa phòng thí nghiệm. Tất cả các ô bên ngoài đường viền của lưới cũng bị chặn.\nMột người máy điên rồ đã trốn thoát khỏi phòng thí nghiệm này. Nó hiện đang ở trong một số ô trống của lưới. Bạn có thể gửi một trong các lệnh sau tới rô bốt: \u0026ldquo;di chuyển sang phải\u0026rdquo;, \u0026ldquo;di chuyển xuống\u0026rdquo;, \u0026ldquo;di chuyển sang trái\u0026rdquo; hoặc \u0026ldquo;di chuyển lên trên\u0026rdquo;. Mỗi lệnh có nghĩa là di chuyển đến một ô lân cận theo hướng tương ứng.\nTuy nhiên, vì robot điên, nó sẽ làm bất cứ điều gì ngoại trừ việc tuân theo lệnh. Khi nhận được lệnh, nó sẽ chọn một hướng khác với hướng trong lệnh và ô ở hướng đó không bị chặn. Nếu có một hướng như vậy, thì nó sẽ di chuyển đến một ô lân cận theo hướng đó. Nếu không, nó sẽ không làm gì cả.\nChúng tôi muốn đưa robot đến phòng thí nghiệm để sửa nó. Đối với mỗi ô trống, hãy xác định xem liệu robot có thể bị buộc đến phòng thí nghiệm bắt đầu từ ô này hay không. Có nghĩa là, sau mỗi bước của rô bốt, một lệnh có thể được gửi đến rô bốt sao cho bất kể rô bốt chọn hướng nào khác nhau, nó sẽ kết thúc trong phòng thí nghiệm.\nRàng buộc\n1≤t≤1000 1≤n,m≤1e6; n x m≤1e6 \u0026#39;.\u0026#39; — the cell is free; \u0026#39;#\u0026#39; — the cell is blocked; \u0026#39;L\u0026#39; — the cell contains a lab. The grid contains exactly one lab. The sum of n⋅m over all testcases doesn\u0026#39;t exceed 106. Input\n4 3 3 ... .L. ... 4 5 #.... ..##L ...#. ..... 1 1 L 1 9 ....L..#. Output\n... .L. ... #++++ ..##L ...#+ ...++ L ++++L++#. Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--){ int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; int r, c; vector\u0026lt;vector\u0026lt;char\u0026gt;\u0026gt; a(n + 2, vector\u0026lt;char\u0026gt;(m + 2, \u0026#39;#\u0026#39;)); for(int i = 1; i \u0026lt;= n; i++){ for(int j = 1; j \u0026lt;= m; j++){ cin \u0026gt;\u0026gt; a[i][j]; if(a[i][j] == \u0026#39;L\u0026#39;){ r = i; c = j; } } } vector\u0026lt;vector\u0026lt;bool\u0026gt;\u0026gt; mark(n + 2, vector\u0026lt;bool\u0026gt;(m + 2, 0)); queue\u0026lt;pair\u0026lt;int,int\u0026gt;\u0026gt; q; q.push(make_pair(r, c)); mark[r][c] = 1; function\u0026lt;bool(int,int)\u0026gt; loang = [\u0026amp;](int x, int y){ if(a[x][y] == \u0026#39;#\u0026#39;) return 0; int cnt = 0; if(a[x + 1][y] == \u0026#39;.\u0026#39;) cnt++; if(a[x][y + 1] == \u0026#39;.\u0026#39;) cnt++; if(a[x - 1][y] == \u0026#39;.\u0026#39;) cnt++; if(a[x][y - 1] == \u0026#39;.\u0026#39;) cnt++; if(cnt \u0026lt; 2){ a[x][y] = \u0026#39;+\u0026#39;; mark[x][y] = 1; return 1; } return 0; }; mark[r][c] = 1; while(!q.empty()){ int x, y; tie(x, y) = q.front(); q.pop(); if(mark[x][y + 1] == 0 \u0026amp;\u0026amp; loang(x, y + 1)){ q.push(make_pair(x, y + 1)); } if(mark[x + 1][y] == 0 \u0026amp;\u0026amp; loang(x + 1, y)){ q.push(make_pair(x + 1, y)); } if(mark[x][y - 1] == 0 \u0026amp;\u0026amp; loang(x, y - 1)){ q.push(make_pair(x, y - 1)); } if(mark[x - 1][y] == 0 \u0026amp;\u0026amp; loang(x - 1, y)){ q.push(make_pair(x - 1, y)); } } for(int i = 1; i \u0026lt;= n; i++){ for(int j = 1; j \u0026lt;= m; j++){ cout \u0026lt;\u0026lt; a[i][j]; } cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } } "},{"id":25,"href":"/posts/2021-10-21-Dayso/","title":"Problem: Dãy số","section":"Blog","content":"Cho dãy số gồm N phần tử. Ban đầu, bạn sẽ ở vị trí ô số 0 với tổng điểm là 0. Mỗi nước đi, người chơi có thể di chuyển sang phải tối thiểu là 1 bước và tối đa là K bước. Khi dừng lại ở ô nào đó thì giá trị của ô đó sẽ được cộng vào tổng điểm. Bạn có thể dừng cuộc chơi bất cứ lúc nào. Hãy tìm cách chơi sao cho tổng điểm nhận được là nhiều nhất.\nRàng buộc\nN ≤ 10000 -1000 \u0026lt;= a[i] \u0026lt;= 1000 K \u0026lt;= 10 Input\n5 2 -2 3 -6 -4 5 Output\n4 Submit tại đây\nHướng dẫn\nBài classic. Code\nĐộ phức tạp O(n * k) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; int a[n + 1]; for(int i = 1; i \u0026lt;= n; i++) cin \u0026gt;\u0026gt; a[i]; vector\u0026lt;int\u0026gt; dp(n + 1, -1e9); dp[0] = 0; for(int i = 1; i \u0026lt;= n; i++){ for(int j = i - 1; j \u0026gt;= max(0, i - k); j--){ dp[i] = max(dp[i], dp[j] + a[i]); } } int res = *max_element(dp.begin(), dp.end()); cout \u0026lt;\u0026lt; res; } "},{"id":26,"href":"/posts/2021-12-03-Divanandbitwiseoperations/","title":"Problem: Divan and bitwise operations","section":"Blog","content":"Cho mảng a có n số nguyên không âm, thỏa mãn m thông tin. Mỗi thông tin có dạng: l r x, cho biết phép OR các phần tử trong đoạn [l,r] của mảng a là x. Tính tổng các xor của các subsequence khác rỗng của mảng a.\nRàng buộc\n1≤t≤1e3 1≤n,m≤2e5 1≤l≤r≤n 0≤x≤2^30−1 tổng n, tổng m trong tất cả các test không vượt quá 2e5 Input\n3 2 1 1 2 2 3 2 1 3 5 2 3 5 5 4 1 2 7 3 3 7 4 4 0 4 5 2 Output\n4 20 112 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":27,"href":"/posts/2021-11-13-DominantCharacter/","title":"Problem: Dominant Character","section":"Blog","content":"Cho chuỗi s có độ dài n được tạo nên từ 3 kí tự \u0026lsquo;a\u0026rsquo;, \u0026lsquo;b\u0026rsquo;, \u0026lsquo;c\u0026rsquo;. Hãy tìm độ dài substring ngắn nhất của s thỏa mãn substring này có:\nđộ dài \u0026gt; 1 số kí tự \u0026lsquo;a\u0026rsquo; trong substring lớn hơn số kí tự \u0026lsquo;b\u0026rsquo; số kí tự \u0026lsquo;a\u0026rsquo; trong substring lớn hơn số kí tự \u0026lsquo;c\u0026rsquo; Ràng buộc\n1≤t≤105 2≤n≤106 It is guaranteed that the sum of n over all test cases does not exceed 106. Input\n3 2 aa 5 cbabb 8 cacabccc Output\n2 -1 3 Submit tại đây\nHướng dẫn\nNghĩ tới các substring thỏa mãn, ta phát hiện ra substring chỉ có thể là các TH như trong phần if của code.\nNhận xét 1: nếu có 2 kí tự \u0026lsquo;a\u0026rsquo; liên tiếp thì kết quả là 2. Nhận xét 2: nếu không phải 2 kí tự liên tiếp \u0026lsquo;a_a\u0026rsquo; hoặc \u0026lsquo;a__a\u0026rsquo;, không thể \u0026lsquo;a___a\u0026rsquo; được vì lúc này chắc chắn có số lượng kí tự \u0026lsquo;b\u0026rsquo; hoặc \u0026lsquo;c\u0026rsquo; lớn hơn số kí tự \u0026lsquo;a\u0026rsquo;. Nhận xét 3: tiếp tục nháp để tìm ra tất cả các substring có thể có. Code\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; string s; cin \u0026gt;\u0026gt; s; bool aa = 0; for(int i = 1; i \u0026lt; n; i++){ if(s[i] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 1] == \u0026#39;a\u0026#39;){ aa = 1; break; } } if(aa){ cout \u0026lt;\u0026lt; 2 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; continue; } bool a_a = 0; for(int i = 2; i \u0026lt; n; i++){ if(s[i] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 2] == \u0026#39;a\u0026#39;){ a_a = 1; break; } } if(a_a){ cout \u0026lt;\u0026lt; 3 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; continue; } bool a__a = 0; for(int i = 3; i \u0026lt; n; i++){ if(s[i] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 3] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 2] != s[i - 1]){ a__a = 1; break; } } if(a__a){ cout \u0026lt;\u0026lt; 4 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; continue; } bool a__a__a = 0; for(int i = 6; i \u0026lt; n; i++){ if(s[i] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 3] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 6] == \u0026#39;a\u0026#39; \u0026amp;\u0026amp; s[i - 2] != s[i - 4]){ a__a__a = 1; break; } } if(a__a__a){ cout \u0026lt;\u0026lt; 7 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; continue; } cout \u0026lt;\u0026lt; \u0026#34;-1\\n\u0026#34;; } } "},{"id":28,"href":"/posts/2021-10-06-DynamicDiameter/","title":"Problem: Dynamic Diameter","section":"Blog","content":"Cho cây gồm n đỉnh. Hỏi nếu nối đỉnh n + 1 vào đỉnh i, thì đường kính của cây lúc này là bao nhiêu. Xuất ra kết qua cho tất cả i.\nRàng buộc\n1≤n≤3e5 Input\n3 3 2 2 1 Output\n3 2 3 Submit: tại đây\nSai 1\nTìm tâm của cây, sau đó dfs từ tâm, thu được khoảng cách từ các đỉnh đến tâm. Chọn ra 2 đỉnh có khoảng cách đến tâm xa nhất, cộng 2 khoảng cách đó lại chính là đường kính.(SAI) Ta thấy d[1] = 2, d[2] = 2. là 2 khoảng cách xa nhất đến tâm. Nhưng đường kính của cây chỉ là 3.\nSai 2\nGọi path là đường dẫn có độ dài là đường kính của cây. dfs từ 1 đỉnh bất kì để tìm điểm mút của path. dfs từ điểm mút để tìm khoẳng cách của các đỉnh đến đỉnh mút. Sau đó tính đường kính mới = max(diameter, d[i] + 1) , trước đó đã đổi d[điểm mut] = diameter.(SAI) Ta thấy d[2] = 2. Nhưng nếu đỉnh n + 1 được nối vào đỉnh 2 thì đường kính sẽ tăng thêm 1. Rõ ràng cách tính được trình bày trong thuật trên là sai.\nHướng dẫn\nGọi path là đường dẫn có độ dài là đường kính của cây. dfs từ 1 đỉnh bất kì để tìm điểm mút của path. dfs từ điểm mút để tìm khoẳng cách của các đỉnh đến đỉnh mút. điểm có d[i] lớn nhất là điểm mút còn lại của path ta tiếp tục dfs từ điểm mút mới này, thu được mảng e với e[i] là khoảng cách từ đỉnh i tới điểm mút mới này. Đường kính mới = max(diameter, max(d[i] + 1, e[i] + 1)) Code\nĐộ phức tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int N = 3e5; int n; vector\u0026lt;int\u0026gt; adj[N + 1]; vector\u0026lt;int\u0026gt; d(N + 1, 0); void dfs(int x, int p){ for(auto v: adj[x]){ if(v == p) continue; d[v] = d[x] + 1; dfs(v, x); } } main(){ ios_base::sync_with_stdio(0);cin.tie(0); cin \u0026gt;\u0026gt; n; for(int i = 1; i \u0026lt; n; i++){ int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; adj[x].push_back(y); adj[y].push_back(x); } dfs(1, 0); int root = max_element(d.begin() + 1, d.end()) - d.begin(); d.assign(n + 1, 0); dfs(root, 0); int root1 = max_element(d.begin() + 1, d.end()) - d.begin(); int diameter = d[root1]; vector\u0026lt;int\u0026gt; e = d; d.assign(n + 1, 0); dfs(root1, 0); for(int i = 1; i \u0026lt;= n; i++){ cout \u0026lt;\u0026lt; max(diameter, max(d[i] + 1, e[i] + 1)) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":29,"href":"/posts/2021-11-24-Emulation-of-Numbers/","title":"Problem: Emulation of Numbers","section":"Blog","content":"Cho số x và mảng n phần tử. Hỏi có bao nhiêu cách tạo nên x từ các phần tử của mảng. Biết mỗi phần tử trong mảng có thể sử dụng nhiều lần.\nRàng buộc\n1 ≤ X ≤ 1000000 2 ≤ N ≤ 9 Input\n6 3 2 7 3 Output\n2 Submit tại đây\nHướng dẫn\nclassic Code\nĐộ phưc tạp O(X * n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long int dp[(int)1e6 + 1]; signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int x; cin \u0026gt;\u0026gt; x; int n; cin \u0026gt;\u0026gt; n; set\u0026lt;int\u0026gt; se; for(int i = 0; i \u0026lt; n; i++){ int u; cin \u0026gt;\u0026gt; u; se.insert(u); } n = se.size(); int a[n]; int cnt = 0; for(auto val: se){ a[cnt++] = val; } dp[0] = 1; for(auto val: a){ for(int i = 1; i \u0026lt;= x; i++){ if(i \u0026lt; val) continue; dp[i] += dp[i - val]; } } cout \u0026lt;\u0026lt; dp[x]; } "},{"id":30,"href":"/posts/2021-11-03-FindingBorders/","title":"Problem: Finding Borders","section":"Blog","content":"Cho chuỗi s. Tìm tất cả độ dài của các chuỗi mà nó vừa là tiền tố, vừa là hậu tố của chuỗi s.\nRàng buộc\n1≤n≤1e6 Input\nabcababcab Output\n2 5 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long struct hashing{ int n; int A, B; vector\u0026lt;int\u0026gt; h, p; hashing(string \u0026amp;s, int _a, int _b){ n = s.length(); A = _a; B = _b; h = vector\u0026lt;int\u0026gt;(n); p = vector\u0026lt;int\u0026gt;(n); p[0] = 1; h[0] = s[0]; for(int i = 1; i \u0026lt; n; i++){ p[i] = p[i - 1] * A % B; h[i] = (h[i - 1] * A + s[i]) % B; } } int get(int l, int r){ if(l == 0) return h[r]; return (h[r] - h[l - 1]*p[r - l + 1] + B*B) % B; } int cal(string \u0026amp;s){ int m = s.length(); vector\u0026lt;int\u0026gt; h(m); h[0] = s[0]; for(int i = 1; i \u0026lt; m; i++){ h[i] = (h[i - 1] * A + s[i]) % B; } return h[m - 1]; } }; signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); string s; cin \u0026gt;\u0026gt; s; hashing ha(s, 911382323, 972663749); int n = s.length(); for(int i = 0; i + 1 \u0026lt; n; i++){ if(ha.get(0, i) == ha.get(n - 1 - i, n - 1)){ cout \u0026lt;\u0026lt; i + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } } } "},{"id":31,"href":"/posts/2021-12-17-GCDProblem/","title":"Problem: GCD Problem","section":"Blog","content":"Cho số nguyên dương n. Tìm 3 số nguyên dương phân biệt a, b, c sao cho a + b + c = n và gcd(a, b) = c. hoặc cho biết không thể tìm thấy.\nRàng buộc\n1≤t≤105 10≤n≤1e9 Input\n6 18 63 73 91 438 122690412 Output\n6 9 3 21 39 3 29 43 1 49 35 7 146 219 73 28622 122661788 2 Submit tại đây\nHướng dẫn\nVới n chẵn ta có thể tách thành n / 2, n / 2 - 1, 1. Vì ta biết rằng 2 số tự nhiên liên tiếp có gcd(a, b) = 1. Ngược lại, n lẻ: ta quan sát tới gcd của 2 số lẻ n / 2 - 1 và n / 2 + 1 hoặc n / 2 - 2 và n / 2 + 2 Code\nĐộ phưc tạp O(1) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double const double E = 1e-6; const int M = (int)1e9 + 7; signed main() { FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false); cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--) { int n; cin \u0026gt;\u0026gt; n; if(n % 2 == 0){ cout \u0026lt;\u0026lt; n / 2 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; n / 2 - 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } else{ if((n / 2)\u0026amp;1) cout \u0026lt;\u0026lt; n / 2 - 2 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; n / 2 + 2 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; else cout \u0026lt;\u0026lt; n / 2 - 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; n / 2 + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } } "},{"id":32,"href":"/posts/2021-11-27-GoingHome/","title":"Problem: Going Home","section":"Blog","content":"Cho mảng a có n phần tử. Tìm 4 vị trí khác nhau x, y, z, t sao cho ax + ay = az + at.\nRàng buộc\n4≤n≤200000 1≤ai≤2.5e6 Input\n6 2 1 5 2 7 4 Output\nYES 2 3 1 6 Submit tại đây\nHướng dẫn\nÁp dụng nguyên lí Diritlet trên tập S, nhận thấy giá trị S trong thuộc [2, 5e6]. Như vậy nếu trong 5e6 + 1 lần duyệt a[i] + a[j] thì sẽ có giá trị S lặp lại. Nhưng nếu mảng a có 2 phần tử cùng giá trị thì cần gấp đôi số lần duyệt mới xuất hiện S lặp lại mà hợp lệ. Nhưng nếu mảng a có 3 phần tử cùng giá trị thì cần gập ba lần duyệt mới xuất hiện S lặp lại mà hợp lệ Nhưng nếu mảng a có 4 phần tử cùng giá trị thì\u0026hellip; kết liễu nó luôn vì đó chính là giá trị hợp lệ cần tìm. Code\nĐộ phưc tạp O(min(n * n, 5e6 * 3 + 1) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int MAX = 25e5; const int N = 2e5; int x[MAX * 2 + 1], y[MAX * 2 + 1]; int a[N + 1]; signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int n; cin \u0026gt;\u0026gt; n; for(int i = 1; i \u0026lt;= n; i++){ cin \u0026gt;\u0026gt; a[i]; } for(int i = 1; i \u0026lt;= n; i++){ for(int j = i + 1; j \u0026lt;= n; j++){ int s = a[i] + a[j]; if(x[s] \u0026amp;\u0026amp; x[s] != i \u0026amp;\u0026amp; y[s] != j \u0026amp;\u0026amp; y[s] != i){ cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; cout \u0026lt;\u0026lt; x[s] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; y[s] \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; j; return 0; } x[s] = i; y[s] = j; } } cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; } "},{"id":33,"href":"/posts/2021-10-12-Graycode/","title":"Problem: Gray code","section":"Blog","content":"Mã màu xám là danh sách tất cả 2^n chuỗi bit có độ dài n, trong đó hai chuỗi liên tiếp bất kỳ khác nhau đúng một bit (tức là khoảng cách Hamming của chúng là một).\nNhiệm vụ của bạn là tạo mã Xám cho một độ dài nhất định n.\nRàng buộc\n1≤n≤16 Input\n2 Output\n00 01 11 10 Submit tại đây\nSai\nQuy về bài toán đồ thị, 2 đỉnh i, j được nối với nhau nếu distanceHammil(i, j) = 1. Bây giờ tìm đường đi đi qua tất cả các đỉnh, tức là đường đi Hammilton. Bài toàn tìm đường đi Hammilton là bài toán NP-hard cho nên ta phải nghĩ cách khác để ko TLE Nhận thấy với giá trị n, đồ thị có 2^n đỉnh. mỗi đỉnh sẽ nối với đúng n đỉnh. Ta dfs tham lam luôn chọn dfs tới đỉnh nhỏ nhất có thể. (SAI với n \u0026gt; 5) Hướng dẫn\nNhận xét: Gặp những bài này, cố gắng nháp viết ra được cách đệ quy\nCode 1\nĐộ phức tạp O(2^n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); int n; cin \u0026gt;\u0026gt; n; vector\u0026lt;int\u0026gt; res; res.push_back(0); res.push_back(1); for(int i = 1; i \u0026lt; n; i++){ int sz = res.size(); int x = (1 \u0026lt;\u0026lt; i); for(int j = sz - 1; j \u0026gt;=0; j--){ res.push_back(res[j] + x); } } int m = (1 \u0026lt;\u0026lt; n); for(int i = 0; i \u0026lt; m; i++){ for(int j = 0; j \u0026lt; n; j++){ cout \u0026lt;\u0026lt; ((res[i] \u0026gt;\u0026gt; (n - 1 - j))\u0026amp;1); } cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } Code 2\nĐộ phức tạp O(2^n) #include \u0026lt;bits/stdc++.h\u0026gt; #define ll long long #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using namespace std; vector\u0026lt;string\u0026gt; v(1, \u0026#34;\u0026#34;); void solve(int n){ if(n == 0) return ; solve(n - 1); int k = v.size(); for(int i = k - 1; i \u0026gt;= 0; i--) v.push_back(v[i] + \u0026#34;1\u0026#34;); for(int i = 0; i \u0026lt; k; i++) v[i] += \u0026#34;0\u0026#34;; } int main(){ ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); int n; cin \u0026gt;\u0026gt; n; solve(n);\tfor(auto val: v) cout \u0026lt;\u0026lt; val \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } "},{"id":34,"href":"/posts/2021-11-15-GuessthePermutation/","title":"Problem: Guess the Permutation","section":"Blog","content":"Cho mảng gồm n phần tử tăng dần từ 1 tới n. Có các phân đoạn [i, j - 1] và [j, k] đã bị đảo ngược lại(i \u0026lt; j \u0026lt; k và j - i \u0026gt; 1). Bạn được phép hỏi xem đoạn [l, r] có bao nhiêu cặp nghịch thế. Số lần hỏi nhiều nhất là 40. Tìm i, j, k.\nRàng buộc\n4≤n≤1e9 Input\n2 5 4 3 3 5 2 2 1 Output\n? 1 5 ? 2 5 ? 3 5 ! 1 3 5 ? 1 5 ? 2 5 ? 3 5 ! 2 4 5 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(logn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long int ask(int l, int r){ cout \u0026lt;\u0026lt; \u0026#34;? \u0026#34; \u0026lt;\u0026lt; l \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; r \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; cout.flush(); int ans; cin \u0026gt;\u0026gt; ans; return ans; } int get_i(int l, int r){ while(true){ if(r - l \u0026lt;= 1){ if(ask(1, r) == 0) return r; return l; } int mid = ((l + r) \u0026gt;\u0026gt; 1); if(ask(1, mid) == 0) l = mid; else r = mid; } } signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); // ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; int i = get_i(1, n); int j = i + (ask(i, n) - ask(i + 1, n)) + 1; int k = j + (ask(j, n) - ask(j + 1, n)); cout \u0026lt;\u0026lt; \u0026#34;! \u0026#34; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; j \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; k \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":35,"href":"/posts/2021-10-21-Hangdong/","title":"Problem: Hang động","section":"Blog","content":"Một con đom đóm bay vào một cái hang đầy những chướng ngại vật gồm: măng đá (nhô lên từ mặt đất) và nhũ đá (đâm xuống từ trần hang). Hang này dài N đơn vị (N chẵn) và cao H đơn vị. Khi vào hang, vật cản đầu tiên là măng đá, sau đó là nhũ đã, rồi lại đến măng đá, \u0026hellip; cứ thế thay phiên nhau.\nCon đom đóm này không phải là loài có thể bay quanh các chướng ngại vật. Thay vào đó, nó sẽ chọn một mức chiều cao bắt đầu rồi bay từ đầu đến cuối hang, phá hết tất cả các chướng ngại vật trên đường bay của nó.\nTheo ví dụ trên, nếu chọn mức 4, con đom đóm sẽ phá tất cả là 8 chướng ngại vật.\nĐây không phải là lựa chọn tốt nhất vì con đom đóm sẽ ít mệt hơn nếu chọn mức 1 hoặc mức 5, lúc này nó chỉ cần phá 7 chướng ngại vật.\nBạn được cho chiều dài, chiều cao và kích thước của tất cả các chướng ngại vật. Hãy xác định số chướng ngại vật tối thiểu mà con đom đóm cần phá để thoát khỏi hang, và có bao nhiêu cách chọn khác nhau đưa đến kết quả đó.\nRàng buộc\n1 \u0026lt;= N \u0026lt;= 2e5 1 \u0026lt;= H \u0026lt;= 5e5 h[i] \u0026gt; 0 Input\n6 7 1 5 3 3 5 1 Output\n2 3 Submit tại đây\nHướng dẫn 1\nSử dụng fenwick sum: range update, point query. Code\nĐộ phưc tạp O(n + hlogh) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; struct fenwick{ int n; vector\u0026lt;int\u0026gt; v; fenwick(int _n){ n = _n; v.assign(n + 1, 0); } void update(int p, int val){ for(int i = p; i \u0026lt;= n;i += i\u0026amp;-i){ v[i] += val; } } void update(int l, int r, int val){ update(r + 1, -val); update(l, val); } int get(int p){ int res = 0; for(int i = p; i \u0026gt; 0; i -= i\u0026amp;-i){ res += v[i]; } return res; } }; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, h; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; h; fenwick fen(h); for(int i = 1; i \u0026lt;= n; i++){ int x; cin \u0026gt;\u0026gt; x; if(i\u0026amp;1) fen.update(1, x, 1); else fen.update(h - x + 1, h, 1); } int res1 = 1e9; int res2 = 0; for(int i = 1; i \u0026lt;= h; i++){ int x = fen.get(i); if(x \u0026lt; res1){ res1 = x; res2 = 1; } else if(x == res1) res2++; } cout \u0026lt;\u0026lt; res1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; res2; } Hướng dẫn 2\nSử dụng dp Code\nĐộ phưc tạp O(n + h) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, h; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; h; vector\u0026lt;int\u0026gt; u(h + 1, 0); vector\u0026lt;int\u0026gt; v(h + 1, 0); for(int i = 1; i \u0026lt;= n; i++){ int x; cin \u0026gt;\u0026gt; x; if(i\u0026amp;1) u[x]++; else v[x]++; } vector\u0026lt;int\u0026gt; dp1(h + 2, 0), dp2(h + 2, 0); for(int i = h; i \u0026gt;= 1; i--){ dp1[i] = dp1[i + 1] + u[i]; dp2[i] = dp2[i + 1] + v[i]; } int res1 = 1e9, res2; for(int i = 1; i \u0026lt;= h; i++){ int x = dp1[i] + dp2[h - i + 1]; if(x \u0026lt; res1){ res1 = x; res2 = 1; } else if(x == res1) res2++; } cout \u0026lt;\u0026lt; res1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; res2; } Hướng dẫn 3\nSử dụng segment tree sum: range update, range query Code\nĐộ phức tạp O(n + hlogh) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; struct segment_tree{ int n; vector\u0026lt;int\u0026gt; v, c; segment_tree(int _n){ n = _n; v.assign(n\u0026lt;\u0026lt;2, 0); c.assign(n\u0026lt;\u0026lt;2, 0); } void down(int node){ v[node \u0026lt;\u0026lt; 1] += c[node]; c[node \u0026lt;\u0026lt; 1] += c[node]; v[(node \u0026lt;\u0026lt; 1)|1] += c[node]; c[(node \u0026lt;\u0026lt; 1)|1] += c[node]; c[node] = 0; } void update(int x, int y, int val, int l, int r, int node){ if(l \u0026gt; y || r \u0026lt; x) return ; if(l \u0026gt;= x \u0026amp;\u0026amp; r \u0026lt;= y){ v[node] += val; c[node] += val; return ; } down(node); int mid = ((l + r)\u0026gt;\u0026gt;1); update(x, y, val, l, mid, node\u0026lt;\u0026lt;1); update(x, y, val, mid + 1, r, (node\u0026lt;\u0026lt;1)|1); v[node] = v[node \u0026lt;\u0026lt; 1] + v[(node \u0026lt;\u0026lt; 1)|1]; } int get(int x, int y, int l, int r, int node){ if(l \u0026gt; y || r \u0026lt; x) return 0; if(l \u0026gt;= x \u0026amp;\u0026amp; r \u0026lt;= y) return v[node]; down(node); int mid = ((l + r)\u0026gt;\u0026gt;1); return get(x, y, l, mid, node\u0026lt;\u0026lt;1) + get(x, y, mid + 1, r, (node\u0026lt;\u0026lt;1)|1); } }; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, h; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; h; segment_tree seg(h + 1); for(int i = 0; i \u0026lt; n; i++){ int x; cin \u0026gt;\u0026gt; x; if(i % 2 == 0) seg.update(1, x, 1, 0, h, 1); else seg.update(h - x + 1, h, 1, 0, h, 1); } int res1 = 1e9, res2 = 0; for(int i = 1; i \u0026lt;= h; i++){ int x = seg.get(i, i, 0, h, 1); if(x \u0026lt; res1){ res1 = x; res2 = 1; } else if(x == res1) res2++; } cout \u0026lt;\u0026lt; res1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; res2; } "},{"id":36,"href":"/posts/2021-12-03-HCN/","title":"Problem: HCN","section":"Blog","content":"Cho 1 mảnh đất hình chữ nhật kích thước nxm được tạo nên từ các ô đất kích thước 1x1. Mỗi ô đất hoặc là đá hoặc là đất.\nTrên mảnh đất này hãy tìm vùng đất hình chữ nhật có diện tích lớn nhất để xây nhà. Biết rằng bạn không thể xây nhà trên đá và ngôi nhà này phải có các cạnh song song với cạnh của mảnh đất đã cho.\nRàng buộc\nn,m≤1000 aij = \u0026#39;.\u0026#39; or \u0026#39;*\u0026#39; Input\n3 4 ..*. .... *..* Output\n4 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":37,"href":"/posts/2021-12-03-Kingdom-of-Cats/","title":"Problem: Kingdom of Cats","section":"Blog","content":"Choa tọa độ n điểm trong mp Oxy. Tính số tứ giác lồi khác nhau được tạo ra.\nRàng buộc\n1≤n≤50 −1e9≤xi,yi≤1e9 tổng n trong tất cả các test không quá 500 n = 0 kết thúc chương trình Input\n7 4 1 3 1 2 1 1 1 1 2 1 3 1 4 4 0 0 0 2 2 0 2 2 0 Output\n9 1 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double const double E = 1e-6; const int M = (int)1e9 + 7; class point { public: int x, y; point() { x = 0; y = 0; } point(int _x, int _y) { x = _x; y = _y; } friend int crossProduct(const point\u0026amp; a, const point\u0026amp; b) { return a.x * b.y - b.x * a.y; } friend int pointLocation(const point\u0026amp; a, const point\u0026amp; b, const point\u0026amp; c) { int x = crossProduct(b - a, c - b); if(x \u0026gt; 0) return 1;//left if(x \u0026lt; 0) return -1;//right return 0; } friend vector\u0026lt;point\u0026gt; convexHull(point a[], int n) { // n different points // return point clockwise if(n \u0026lt; 3) { vector\u0026lt;point\u0026gt; res(n); for(int i = 0; i \u0026lt; n; i++) { res[i] = a[i]; } return res; } sort(a, a + n); vector\u0026lt;point\u0026gt; res; vector\u0026lt;point\u0026gt; b; for(int i = 0; i \u0026lt; n; i++) { while(res.size() \u0026gt; 1) { int x = pointLocation(res[(int)res.size() - 2], res.back(), a[i]); if(x \u0026gt; 0) { b.push_back(res.back()); res.pop_back(); } else break; } res.push_back(a[i]); } sort(b.begin(), b.end(), greater\u0026lt;point\u0026gt;()); b.push_back(a[0]); for(auto val: b) { while(res.size() \u0026gt; 1) { int x = pointLocation(res[(int)res.size() - 2], res.back(), val); if(x \u0026gt; 0) res.pop_back(); else break; } res.push_back(val); } res.pop_back(); return res; } friend vector\u0026lt;point\u0026gt; convexHullMin(point a[], int n){ // n different points // return point clockwise vector\u0026lt;point\u0026gt; v = convexHull(a, n); if(v.size() \u0026lt; 3) return v; vector\u0026lt;point\u0026gt; res(1, v[0]); for(int i = 1; i + 1 \u0026lt; v.size(); i++){ int x = pointLocation(v[i - 1], v[i], v[i + 1]); if(x == 0) continue; res.push_back(v[i]); } int x = pointLocation(v[(int)v.size() - 2], v.back(), v[0]); if(x \u0026lt; 0 || (x == 0 \u0026amp;\u0026amp; (int)res.size() == 1)) res.push_back(v.back()); return res; } friend int pointInPolygon(point a[], int n, const point\u0026amp; b) { // return 0: BOUNDARY // return 1: INSIDE // return -1: OUTSIDE srand(time(nullptr)); // point c(1234567890, 1023485557); point c(1047159043, 343214337); c.x += rand() * rand(); c.y += rand() * rand(); int cnt = 0; for(int i = 0; i + 1 \u0026lt; n; i++) { if(fabs(fabs(a[i] - b) + fabs(a[i + 1] - b) - fabs(a[i] - a[i + 1])) \u0026lt; E) return 0; int x = lineSegmentIntersection(c, b, a[i], a[i + 1]); cnt += (x \u0026gt; 0); } if(fabs(fabs(a[n - 1] - b) + fabs(a[0] - b) - fabs(a[n - 1] - a[0])) \u0026lt; E) return 0; int x = lineSegmentIntersection(c, b, a[n - 1], a[0]); cnt += (x \u0026gt; 0); if(cnt\u0026amp;1) return 1; return -1; } friend double fabs(const point\u0026amp; a) { return sqrt(a.x * a.x + a.y * a.y); } friend int abs2(const point\u0026amp; a) { return a.x * a.x + a.y * a.y; } friend double triangleArea(const point\u0026amp; a, const point\u0026amp; b, const point\u0026amp; c) { return abs(crossProduct(b - a, c - a)) / 2.0L; } friend int triangleAreaX2(const point\u0026amp; a, const point\u0026amp; b, const point\u0026amp; c) { return abs(crossProduct(b - a, c - a)); } friend double polygonArea(point a[], int n) { // the vertices a[i] and a[i + 1] are adjacent, and vertices a[0] and a[n - 1] also are adjacent return polygonAreaX2(a, n) / 2.0L; } friend int polygonAreaX2(point a[], int n) { // the vertices a[i] and a[i + 1] are adjacent, and vertices a[0] and a[n - 1] also are adjacent int res = 0; for(int i = 0; i + 1 \u0026lt; n; i++) { res += crossProduct(a[i], a[i + 1]); } res += crossProduct(a[n - 1], a[0]); return abs(res); } friend double dist(const point\u0026amp; a, const point\u0026amp; b, const point\u0026amp; c) { return fabs(crossProduct(b - a, c - a)) / fabs(a - b); } friend int lineSegmentIntersection(const point\u0026amp; a, const point\u0026amp; b, const point\u0026amp; c, const point\u0026amp; d) { //a != b and c != d // return 0: 0 intersection point // return 1: 1 intersection point // return 2: countless intersection point int cnt = 0; if(a == c || a == d) cnt++; if(b == c || b == d) cnt++; if(cnt \u0026gt; 0) return cnt; int x = pointLocation(a, b, c); if(x == 0 \u0026amp;\u0026amp; fabs(fabs(a - c) + fabs(b - c) - fabs(a - b)) \u0026lt; E) return 1; int y = pointLocation(a, b, d); if(y == 0 \u0026amp;\u0026amp; fabs(fabs(a - d) + fabs(b - d) - fabs(a - b)) \u0026lt; E) return 1; if(x == 0 \u0026amp;\u0026amp; y == 0 \u0026amp;\u0026amp; fabs(fabs(a - c) + fabs(a - d) - fabs(c - d)) \u0026lt; E) return 2; if(x * y \u0026lt; 0) { int z = pointLocation(c, d, a); int t = pointLocation(c, d, b); if(z == 0 \u0026amp;\u0026amp; fabs(fabs(c - a) + fabs(d - a) - fabs(c - d)) \u0026lt; E) return 1; if(t == 0 \u0026amp;\u0026amp; fabs(fabs(c - b) + fabs(d - b) - fabs(c - d)) \u0026lt; E) return 1; return z * t \u0026lt; 0; } return 0; } friend int minEuclidDistance(point a[], int n) { pair\u0026lt;int,int\u0026gt; u[n], v[n]; for(int i = 0; i \u0026lt; n; i++) { u[i].first = a[i].x + a[i].y; u[i].second = i; v[i].first = a[i].y - a[i].x; v[i].second = i; } sort(u, u + n); sort(v, v + n); int res = 9e18; for(int i = 1; i \u0026lt; n; i++) { res = min(res, abs2(a[u[i].second] - a[u[i - 1].second])); res = min(res, abs2(a[v[i].second] - a[v[i - 1].second])); } return res; } friend tuple\u0026lt;int,int,int\u0026gt; lineEquation(const point\u0026amp; a, const point \u0026amp;b) { int u = a.x - b.x; int v = a.y - b.y; // lineEquation: -v * (x - x0) + u(y - y0) = 0 return make_tuple(-v, u, v * a.x - u * a.y); } friend int countIntegerPointsInTheRangeAB(const point\u0026amp; a, const point\u0026amp; b) { // u * x + v * y + p = 0 // y = -(u * x + p) / v; int u, v, p; tie(u, v, p) = lineEquation(a, b); int l = abs(a.x - b.x); int r = abs(a.y - b.y); return __gcd(l, r) + 1; } friend pair\u0026lt;int,int\u0026gt; polygonLatticePoints(point a[], int n) { // the vertices a[i] and a[i + 1] are adjacent, and vertices a[0] and a[n - 1] also are adjacent // n \u0026gt;= 3 // We have: S = a + b / 2 - 1 // 2 * S = 2 * a + b - 2 int areaX2 = round(polygonArea(a, n) * 2); int value_b = 0; for(int i = 1; i \u0026lt; n; i++) value_b += countIntegerPointsInTheRangeAB(a[i], a[i - 1]); value_b += countIntegerPointsInTheRangeAB(a[n - 1], a[0]); value_b -= n; int value_a = (areaX2 - value_b + 2) / 2; return make_pair(value_a, value_b); } friend point operator- (const point\u0026amp; a, const point\u0026amp; b) { point res; res.x = a.x - b.x; res.y = a.y - b.y; return res; } friend point operator+ (const point\u0026amp; a, const point\u0026amp; b) { point res; res.x = a.x + b.x; res.y = a.y + b.y; return res; } friend bool operator\u0026gt; (const point\u0026amp; a, const point\u0026amp; b) { return a.x \u0026gt; b.x || (a.x == b.x \u0026amp;\u0026amp; a.y \u0026gt; b.y); } friend bool operator== (const point\u0026amp; a, const point\u0026amp; b) { return a.x == b.x \u0026amp;\u0026amp; a.y == b.y; } friend bool operator!= (const point\u0026amp; a, const point\u0026amp; b) { return a.x != b.x || a.y != b.y; } friend bool operator\u0026lt; (const point\u0026amp; a, const point\u0026amp; b) { return a.x \u0026lt; b.x || (a.x == b.x \u0026amp;\u0026amp; a.y \u0026lt; b.y); } }; signed main() { FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false); cin.tie(nullptr); while(true) { int n; cin \u0026gt;\u0026gt; n; if(n == 0) return 0; point a[n]; for(int i = 0; i \u0026lt; n; i++) { cin \u0026gt;\u0026gt; a[i].x \u0026gt;\u0026gt; a[i].y; } int res = 0; for(int i = 0; i \u0026lt; n; i++) { for(int j = i + 1; j \u0026lt; n; j++) { for(int l = j + 1; l \u0026lt; n; l++) { for(int k = l + 1; k \u0026lt; n; k++) { point b[4] = {a[i], a[j], a[l], a[k]}; vector\u0026lt;point\u0026gt; con = convexHullMin(b, 4); if((int)con.size() == 4) res++; } } } } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":38,"href":"/posts/2021-10-28-KorneyKorneevichandXOR/","title":"Problem: Korney Korneevich and XOR","section":"Blog","content":"Cho mảng a gồm n (n \u0026lt;= 1e6) số nguyên (0 \u0026lt;= a[i] \u0026lt;= 5000). Xuất ra tất cả giá trị xor của tất cả mảng con(subsequence) tăng dần trong mảng.\nRàng buộc\n1≤n≤1e6 0≤ai≤5000 Input\n4 4 2 2 4 Output\n4 0 2 4 6 Submit tại đây\nHướng dẫn 1\nKhởi tạo vector\u0026lt;int\u0026gt; ind[5001] trong đó vector\u0026lt;int\u0026gt; ind[x] là tất cả vị trí mà giá trị x xuất hiện trong mảng. Khởi tạo vector\u0026lt;int\u0026gt; dp(max_value, 1e9) trong đó dp[x] là chỉ số vị trí nhỏ nhất tạo nên giá trị xor là x. 2 vòng for lòng: vòng for ngoài i từ [0, max_value], vòng for trong j từ [0, max_xor]. Để tính dp[i^j] Code\nĐộ phức tạp O(n + max_value * max_xor * logn) trong đó max_xor = (1 \u0026lt;\u0026lt; 13), max_value = 5000 #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int MAX_XOR = (1 \u0026lt;\u0026lt; 13); const int N = 5000; vector\u0026lt;int\u0026gt; ind[N + 1]; vector\u0026lt;int\u0026gt; dp(MAX_XOR, 1e9); signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n; cin \u0026gt;\u0026gt; n; for(int i = 0; i \u0026lt; n; i++){ int x; cin \u0026gt;\u0026gt; x; ind[x].push_back(i); } dp[0] = -1; for(int i = 0; i \u0026lt;= N; i++){ for(int j = 0; j \u0026lt; MAX_XOR; j++){ if(dp[j] == (int)1e9) continue; auto it = upper_bound(ind[i].begin(), ind[i].end(), dp[j]); if(it == ind[i].end()) continue; dp[j^i] = min(dp[j^i], *it); } } int k = 0; for(int i = 0; i \u0026lt; MAX_XOR; i++){ if(dp[i] \u0026lt; 1e9) k++; } cout \u0026lt;\u0026lt; k \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; for(int i = 0; i \u0026lt; MAX_XOR; i++){ if(dp[i] \u0026lt; 1e9) cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } } Hướng dẫn 2\nPending Code\nĐộ phức tạp O(n + max_value * max_xor) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; const int MAX_XOR = (1 \u0026lt;\u0026lt; 13); const int MAX_VALUE = 5000; vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; a(MAX_VALUE + 1, vector\u0026lt;int\u0026gt;(1, 0)); vector\u0026lt;int\u0026gt; r(MAX_XOR, MAX_VALUE); bool mark[MAX_XOR]; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n; cin \u0026gt;\u0026gt; n; for(int i = 0; i \u0026lt; n; i++){ int x; cin \u0026gt;\u0026gt; x; for(auto val: a[x]){ int xo = val^x; mark[xo] = 1; while(r[xo] \u0026gt; x){ a[r[xo]].push_back(xo); r[xo]--; } a[x].clear(); } } int k = 0; mark[0] = 1; for(int i = 0; i \u0026lt; MAX_XOR; i++){ k += mark[i]; } cout \u0026lt;\u0026lt; k \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; for(int i = 0; i \u0026lt; MAX_XOR; i++){ if(mark[i]) cout \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } } "},{"id":39,"href":"/posts/2021-12-25-LexigraphicalMatrix/","title":"Problem: Lexigraphical Matrix","section":"Blog","content":"Cho ma trận m x n với mỗi hàng là 1 hoán vị từ 1 tới n. Bạn được phép thực hiện thao tác sau với số lần tùy thích để thu được ma trận có thứ tự từ điển lớn nhất: chọn 2 hàng(cột) rồi đổi chỗ chúng.\nVới q truy vấn, mỗi truy vấn xuất ra phần tử ở vị trí i, j.\nRàng buộc\n1 ≤ m, n ≤ 500 1 ≤ q ≤ 10000 Input\n2 3 1 2 3 1 2 3 2 1 1 2 3 Output\n3 1 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":40,"href":"/posts/2021-12-03-LongestY/","title":"Problem: Longest Y","section":"Blog","content":"Cho một chuỗi S có gồm kí tự 'Y' và '.'. Bạn có thể thực hiện thao tác sau với số lần [0:k]: đổi chỗ 2 phần tử liền kề.\nSố 'Y' liên tiếp lớn nhất có thể là bao nhiêu, sau các hoạt động.\nRàng buộc\n2 \u0026lt;= |s| \u0026lt;= 2e5 s[i] = \u0026#39;Y\u0026#39; or \u0026#39;.\u0026#39; 0 \u0026lt;= k \u0026lt;= 1e12 Input\nYY...Y.Y.Y. 2 Output\n3 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); string s; int k; cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; k; vector\u0026lt;int\u0026gt; v(1, 0); int p = 1; for(int i = 0; i \u0026lt; s.length(); i++){ if(s[i] == \u0026#39;Y\u0026#39;) v.push_back(i - p++); } int n = v.size(); vector\u0026lt;int\u0026gt; psu(n); psu[0] = 0; for(int i = 1; i \u0026lt; n; i++){ psu[i] = psu[i - 1] + v[i]; } function\u0026lt;int(int,int)\u0026gt; f = [\u0026amp;](int l, int r){ int mid = (l + r) / 2; int sulmid = psu[mid] - psu[l - 1]; int sumidr = psu[r] - psu[mid - 1]; return (mid - l + 1) * v[mid] - sulmid + sumidr - (r - mid + 1) * v[mid]; }; function\u0026lt;int(int)\u0026gt; bise = [\u0026amp;](int p){ int l = p, r = n - 1; while(true){ if(r - l \u0026lt;= 1){ if(f(p, r) \u0026lt;= k) return r - p + 1; return l - p + 1; } int mid = (l + r) / 2; if(f(p, mid) \u0026lt;= k) l = mid; else r = mid; } }; int res = 0; for(int i = 1; i \u0026lt; n; i++){ res = max(res, bise(i)); } cout \u0026lt;\u0026lt; res; } "},{"id":41,"href":"/posts/2021-12-03-MakeBipartite/","title":"Problem: Make Bipartite","section":"Blog","content":"Cho một đồ thị vô hướng với n+1 các đỉnh đánh số từ [0:n]\nVới mỗi i=1,2,…,n, đồ thị có một cạnh vô hướng với trọng số là a[i] nối đỉnh i và đỉnh 0.\nNgoài ra, đối với mỗi i=1,2,…,n, đồ thị có một cạnh vô hướng với trọng số là b[i] kết nối đỉnh i và đỉnh i + 1(riêng i = n thì kết nối đỉnh n và 1)\nBiểu đồ không có cạnh nào ngoài các cạnh này N * 2 các cạnh trên.\nHãy để chúng tôi xóa một số cạnh khỏi biểu đồ này để biểu đồ sẽ là lưỡng phân.\nTổng trọng lượng tối thiểu của các cạnh phải bị xóa là bao nhiêu?\nRàng buộc\n3 \u0026lt;= n \u0026lt;= 2e5 1 \u0026lt;= a[i], b[i] \u0026lt;= 1e9 tất cả giá trị trong input đều nguyên Input\n5 31 4 159 2 65 5 5 5 5 10 Output\n16 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":42,"href":"/posts/2021-12-25-Menorah/","title":"Problem: Menorah","section":"Blog","content":"Cho n ngọn nến, ngọn nến sáng là 1, ngọn nến tắt là 0. Bạn hay thực hiện thao tác sau với số lần tối thiểu để từ chuỗi a thu được chuỗi b: chọn 1 ngọn nến đang sáng, giữ cho nó sáng và đảo ngược trạng thái của các ngọn nến còn lại. Xuất ra số lần tối thiểu, hoặc -1 nếu không thể.\nRàng buộc\n1≤t≤1e4 1≤n≤1e5 It is guaranteed that the sum of n does not exceed 105. Input\n5 5 11010 11010 2 01 11 3 000 101 9 100010111 101101100 9 001011011 011010101 Output\n0 1 -1 3 4 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":43,"href":"/posts/2021-12-25-MEXandIncrements/","title":"Problem: MEX and Increments","section":"Blog","content":"Cho n số nguyên không âm. Bạn được phép thực hiện thao tác: chọn 1 phần tử và tăng nó thêm 1.\nHãy tính số thao tác tối thiểu để tạo Mex(a, i) vỡi mỗi i thuộc [0, n] tức là i là số nguyên không âm nhỏ nhất không xuất hiện trong mảng a.\nRàng buộc\n1≤t≤1e4 1≤n≤2e5 0≤ai≤n It is guaranteed that the sum of the values n over all test cases in the test does not exceed 2e5. Input\n5 3 0 1 3 7 0 1 2 3 4 3 2 4 3 0 0 0 7 4 6 2 3 5 0 5 5 4 0 1 0 4 Output\n1 1 0 -1 1 1 2 2 1 0 2 6 3 0 1 4 3 1 0 -1 -1 -1 -1 -1 -1 2 1 0 2 -1 -1 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":44,"href":"/posts/2021-12-17-MinimizeDistance/","title":"Problem: Minimize Distance","section":"Blog","content":"Tổng cộng n các kho hàng nằm trên một dãy số. kho chứatôi nằm ở điểm xi vì 1 ≤ i ≤ n.\nBạn là một nhân viên bán hàng với n các túi hàng hóa, cố gắng phân phối một túi cho mỗi nkho bãi. Bạn vàn túi ban đầu ở nguồn gốc 0. Bạn có thể mang đếnktúi tại một thời điểm. Bạn phải thu thập số lượng hàng hóa cần thiết từ điểm xuất phát, chuyển chúng đến các kho tương ứng, sau đó quay trở lại điểm xuất phát để lấy lô hàng tiếp theo của bạn.\nTính toán khoảng cách tối thiểu bạn cần phải trải qua để chuyển tất cả các túi hàng hóa đến kho hàng. Bạn không phải trả lại nguồn gốc sau khi bạn đã giao tất cả các túi.\nRàng buộc\n1≤t≤10500 1≤k≤n≤2e5 −109≤xi≤109 It is guaranteed that the sum of n over all test cases does not exceed 2e5. Input\n4 5 1 1 2 3 4 5 9 3 -5 -10 -15 6 5 8 3 7 4 5 3 2 2 3 3 3 4 2 1000000000 1000000000 1000000000 1000000000 Output\n25 41 7 3000000000 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--){ int n, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; vector\u0026lt;int\u0026gt; a, b; for(int i = 0; i \u0026lt; n; i++){ int x; cin \u0026gt;\u0026gt; x; if(x \u0026lt; 0) a.push_back(x); else if(x \u0026gt; 0) b.push_back(x); } sort(a.begin(), a.end(), greater\u0026lt;int\u0026gt;()); sort(b.begin(), b.end()); n = a.size(); int m = b.size(); if(n == 0 \u0026amp;\u0026amp; m == 0){ cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; continue; } int res = 1e18; int p = min((n % k == 0? k - 1: n % k - 1), n - 1); if(n \u0026gt; 0 \u0026amp;\u0026amp; m \u0026gt; 0){ int res1 = 0; int res2 = 0; while(p \u0026lt; n){ if(p == n - 1){ res1 += -a[n - 1] * 2; break; } res1 += -a[p] * 2; if(p + k \u0026gt;= n){ res1 += -a[n - 1] * 2; break; } p += k; } p = min((m % k == 0? k - 1: m % k - 1), m - 1); while(p \u0026lt; m){ if(p \u0026lt; m - 1) res1 += b[p] * 2; else{ res1 += b[m - 1]; break; } if(p + k \u0026gt;= m - 1){ res1 += b[m - 1]; break; } p += k; } res = min(res, res1); p = min((m % k == 0? k - 1: m % k - 1), m - 1); while(p \u0026lt; m){ if(p == m - 1){ res2 += b[m - 1] * 2; break; } res2 += b[p] * 2; if(p + k \u0026gt;= m){ res2 += b[m - 1] * 2; break; } p += k; } p = min((n % k == 0? k - 1: n % k - 1), n - 1); while(p \u0026lt; n){ if(p == n - 1){ res2 += -a[n - 1]; break; } res2 += -a[p] * 2; if(p + k \u0026gt;= n){ res2 += -a[n - 1]; break; } p += k; } res = min(res, res2); } int res3 = 0; if(n == 0){ p = min((m % k == 0? k - 1: m % k - 1), m - 1); while(p \u0026lt; m){ if(p \u0026lt; m - 1) res3 += b[p] * 2; else{ res3 += b[m - 1]; break; } if(p + k \u0026gt;= m - 1){ res3 += b[m - 1]; break; } p += k; } res = min(res, res3); } else if(m == 0){ p = min((n % k == 0? k - 1: n % k - 1), n - 1); while(p \u0026lt; n){ if(p == n - 1){ res3 += -a[n - 1]; break; } res3 += -a[p] * 2; if(p + k \u0026gt;= n){ res3 += -a[n - 1]; break; } p += k; } res = min(res, res3); } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":45,"href":"/posts/2021-11-27-NapoleonCake/","title":"Problem: Napoleon Cake","section":"Blog","content":"Cho mảng a gồm n phần tử và một mảng b gồm n phần tử gồm các phần tử ban đầu đều là 0. Giá trị a[i] cho biết các phần tử từ [a[i] - i + 1, i] trong mảng b được thay đổi thành 1. Xuất ra mảng b sau cùng.\nRàng buộc\n1≤t≤20000 1≤n≤2e5 0≤ai≤n It is guaranteed that the sum of n over all test cases does not exceed 2e5. Input\n3 6 0 3 0 0 1 3 10 0 0 0 1 0 5 0 0 0 2 3 0 0 0 Output\n1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 1 0 0 0 Submit tại đây\nHướng dẫn 1\nCode\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--){ int n; cin \u0026gt;\u0026gt; n; vector\u0026lt;int\u0026gt; a(n + 1, 0); for(int i = 1; i \u0026lt;= n; i++){ int x; cin \u0026gt;\u0026gt; x; x = min(x, i); a[i - x + 1] = max(a[i - x + 1], x); } int m = 0; for(int i = 1; i \u0026lt;= n; i++){ if(a[i] == 0) cout \u0026lt;\u0026lt; 0 \u0026lt;\u0026lt; \u0026#34; \u0026#34;; else{ int m = i + a[i] - 1; for(int j = i; j \u0026lt;= m; j++){ cout \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34;; m = max(m, j + a[j] - 1); } i = m; } } cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } Hướng dẫn 2\ndùng fenwick sum cập nhật đoạn, get điểm. Code\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long struct fenwick{ int n; vector\u0026lt;int\u0026gt; v; fenwick(int _n){ n = _n; v.assign(n + 1, 0); } void update(int p, int val){ for(int i = p; i \u0026lt;= n; i += i\u0026amp;-i){ v[i] += val; } } void updatelr(int l, int r, int val){ update(l, val); update(r + 1, -val); } int get(int p){ int res = 0; for(int i = p; i \u0026gt; 0; i -= i\u0026amp;-i){ res += v[i]; } return res; } }; signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--){ int n; cin \u0026gt;\u0026gt; n; fenwick fe(n); for(int i = 1; i \u0026lt;= n; i++){ int x; cin \u0026gt;\u0026gt; x; x = min(x, i); fe.updatelr(i - x + 1, i, 1); } for(int i = 1; i \u0026lt;= n; i++){ if(fe.get(i) \u0026gt; 0) cout \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34;; else cout \u0026lt;\u0026lt; 0 \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":46,"href":"/posts/2021-12-07-NatureReserve/","title":"Problem: Nature Reserve","section":"Blog","content":"Cho tọa độ n điểm trên mặt phẳng Oxy. Tìm đường tròn có bán kính nhỏ nhất chứa n điểm này, và đường tròn này có đúng 1 giao điểm với đường thẳng y = 0.\nXuất ra bán kính (sai số không quá 1e-6). Nếu không tồn tại đường tròn phù hợp yêu cầu, xuất -1.\nRàng buộc\n1 \u0026lt;= n \u0026lt;= 1e5 -1e7 \u0026lt;= x[i], y[i] \u0026lt;= 1e7 Input\n2 0 1 1 1 Output\n0.625 Submit tại đây\nHướng dẫn\nChặt nhị phân cho bán kính R, tìm R nhỏ nhất thỏa mãn. Ta biết là nếu trong n điểm tồn tại các giá trị y trái dấu thì đáp án sẽ là -1. Vì lúc đó, đường tròn chứa n điểm sẽ nằm ở cả trên và dưới trục Ox. Với TH n điểm có giá trị y \u0026gt; 0 và có bán kính R thì tâm của đường tròn sẽ là (x[o], R). Đường tròn bán kính R chứa được n điểm khi mà từ mỗi điểm này, lấy tâm tại nó vẽ các đường tròn bán kính R, đường tròn này cắt đường thẳng y = R khi x[o] thuộc đoạn [u,v]. Giao của n đoạn [u,v] nếu khác rỗng thì R thỏa mãn. Tức là tồn tại điệm (x[o], R) làm tâm đường tròn chứa n điểm. Lưu ý: nếu thực hiện phép tính có số thực và số nguyên thì nên xếp số thực ở trước. Code\nĐộ phưc tạp O(nlogC) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int n; cin \u0026gt;\u0026gt; n; int a[n]; int b[n]; bool ok = 1; for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i] \u0026gt;\u0026gt; b[i]; ok \u0026amp;= (b[i] * b[0] \u0026gt; 0); } for(int i = 0; i \u0026lt; n; i++){ b[i] = fabs(b[i]); } if(!ok) return cout \u0026lt;\u0026lt; -1, 0; function\u0026lt;bool(double)\u0026gt; f = [\u0026amp;](double R){ double l = -1e17, r = 1e17; for(int i = 0; i \u0026lt; n; i++){ double z = R * b[i] * 2 - 1.0 * b[i] * b[i]; if(z \u0026lt; 0) return false; z = sqrt(z); l = max(l, - z + a[i]); r = min(r, z + a[i]); } if(r \u0026lt;= l) return false; return true; }; function\u0026lt;double()\u0026gt; biseReal = [\u0026amp;](){ double l = 0, r = 1e20; for(int i = 1; i \u0026lt;= 200; i++){ double mid = (l + r) * 0.5; if(f(mid)) r = mid; else l = mid; } return (l + r) * 0.5; }; cout \u0026lt;\u0026lt; fixed \u0026lt;\u0026lt; setprecision(6); cout \u0026lt;\u0026lt; biseReal(); } "},{"id":47,"href":"/posts/2021-11-24-NewScanningDevice/","title":"Problem: New Scanning Device","section":"Blog","content":"Cho lưới 1e9 x 1e9 có các ô đơn vị 1 x 1. Có một hình chữ nhật gồm các ô đơn vị được tô màu. Hình chữ nhật này có các cạnh song song với cạnh của lưới. Bạn được phép hỏi số ô tô màu trong hình chữ nhật (a, b) (c, d), 2 tọa này lần lượt là tọa độ góc trên bên trái và góc dưới bên phải. Số lần hỏi không quá 66. Hãy tìm ra (a, b) (c, d) của hình chữ nhật được tô màu.\nSubmit tại đây\nHướng dẫn\npending Code\nĐộ phưc tạp O(log1e9) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long int z; int ask(int a, int b, int c, int d){ cout \u0026lt;\u0026lt; \u0026#34;? \u0026#34; \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; c \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; d \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; cout.flush(); int x; cin \u0026gt;\u0026gt; x; return x; } void endGame(int a, int b, int c, int d){ cout \u0026lt;\u0026lt; \u0026#34;! \u0026#34; \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; c \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; d \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; cout.flush(); } int ud(){ int u = 1, d = 1e9; while(true){ if(d - u \u0026lt;= 1){ if(ask(1, 1, u, 1e9) == z) return u; return d; } int mid = (u + d) / 2; if(ask(1, 1, mid, 1e9) == z) d = mid; else u = mid; } } int lr(){ int l = 1, r = 1e9; while(true){ if(r - l \u0026lt;= 1){ if(ask(1, 1, 1e9, l) == z) return l; return r; } int mid = (l + r) / 2; if(ask(1, 1, 1e9, mid) == z) r = mid; else l = mid; } } signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); // ios_base::sync_with_stdio(0);cin.tie(0); z = ask(1, 1, 1e9, 1e9); int r = ud(); int c = lr(); int doDaiCanh1 = ask(r, 1, r, c); int doDaiCanh2 = z / doDaiCanh1; endGame(r - doDaiCanh2 + 1,c - doDaiCanh1 + 1 , r, c); } "},{"id":48,"href":"/posts/2021-12-25-NewYearsProblem/","title":"Problem: New Year's Problem","section":"Blog","content":"Bạn được cho ma trận m x n. và bạn được chọn ra n - 1 hàng trong m hàng, sau đó từ n - 1 hàng này, mỗi cột chọn ra 1 phần từ sao cho min của các phần tử được chọn là lớn nhất.\nXuất ra giá trị này.\nRàng buộc\n1≤t≤1e4 2≤n 2≤n⋅m≤1e5 It is guaranteed that the sum of the values n⋅m over all test cases in the test does not exceed 1e5. Input\n5 2 2 1 2 3 4 4 3 1 3 1 3 1 1 1 2 2 1 1 3 2 3 5 3 4 2 5 1 4 2 7 9 8 1 9 6 10 8 2 4 6 5 2 1 7 9 7 2 Output\n3 2 4 8 2 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":49,"href":"/posts/2021-12-17-NumberofUniqueCharacters/","title":"Problem: Number of Unique Characters","section":"Blog","content":"Định nghĩa 𝑓(𝑋) là số ký tự duy nhất trong chuỗi (𝑋). Ví dụ: 𝑓(𝑎) = 1, 𝑓(𝑎𝑏𝑑𝑒) = 4, 𝑓(𝑎𝑏𝑑𝑒𝑑) = 3, 𝑓(𝑎𝑏𝑏𝑎) = 0. Cho một chuỗi 𝑆. Tính giá trị của biểu thức sau:\n𝐺(𝑆) = ∑∑𝑓(𝑆 [𝑖. .𝑗])\nvới 𝑆[𝑖. .𝑗] là chuỗi con liên tiếp từ 𝑖 đến 𝑗 của 𝑆 (lập chỉ mục dựa trên 1).\nRàng buộc\n𝟏 ≤ 𝑻 ≤ 𝟏𝟎 1 ≤ |𝑆| ≤ 1e5 \u0026#39;a\u0026#39; \u0026lt;= s[i] \u0026lt;= \u0026#39;z\u0026#39; Input\n4 z icpccentral abcde uuuu Output\n1 212 35 4 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--){ string s; cin \u0026gt;\u0026gt; s; vector\u0026lt;int\u0026gt; adj[26]; for(int i = 0; i \u0026lt; 26; i++){ adj[i].push_back(-1); } int n = s.length(); for(int i = 0; i \u0026lt; n; i++){ adj[s[i] - \u0026#39;a\u0026#39;].push_back(i); } for(int i = 0; i \u0026lt; 26; i++){ adj[i].push_back(n); } int res = 0; for(int i = 0; i \u0026lt; 26; i++){ for(int j = 1; j + 1 \u0026lt; adj[i].size(); j++){ int ll = adj[i][j] - adj[i][j - 1] - 1; int rr = adj[i][j + 1] - adj[i][j] - 1; res += (ll + 1) * (rr + 1); } } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":50,"href":"/posts/2021-12-17-tamgiac/","title":"Problem: Olympic Sinh Viên 2019 - Không chuyên - Tam giác","section":"Blog","content":"Với 𝑘 thanh gỗ độ dài 𝑙1, 𝑙2, … , 𝑙𝑘 có thể xếp được thành một hình tam giác nếu có cách phân chia 𝑘 thanh gỗ thành ba tập khác rỗng, sau đó ghép nối các thanh gỗ trong cùng một tập thành một đoạn có độ dài là tổng độ dài các thanh gỗ trong tập, khi đó độ dài của ba đoạn đó là độ dài ba cạnh của một tam giác.\nHoàng có 𝑛 thanh gỗ xếp thành một hàng từ trái sang phải với độ dài tương ứng là 𝑑1, 𝑑2, … , 𝑑𝑛, các thanh gỗ có độ dài đôi một khác nhau. Với một số nguyên 𝑘 (𝑘 ≥ 3), Hoàng muốn đếm xem có bao nhiêu cách chọn 𝑘 thanh gỗ liên tiếp nhau mà 𝑘 thanh gỗ này có có thể xếp được thành một hình tam giác\nYêu cầu: Cho 𝑑1, 𝑑2, … , 𝑑𝑛 và số nguyên 𝑘. Hãy đếm số cách chọn 𝑘 thanh gỗ liên tiếp nhau mà 𝑘 thanh gỗ này có có thể xếp được thành một hình tam giác.\nRàng buộc\n𝑘 ≤ 𝑛 ≤ 1e5 Input\n6 3 1 3 4 2 5 9 Output\n2 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int n, k; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; k; int a[n]; set\u0026lt;int\u0026gt; se; int sum = 0; for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i]; if(i \u0026lt; k){ se.insert(a[i]); sum += a[i]; } } if(n \u0026lt; 3 || k \u0026lt; 3) return cout \u0026lt;\u0026lt; 0, 0; int res = 0; int x = *(--se.end()); if(sum - x \u0026gt; x) res++; for(int i = k; i \u0026lt; n; i++){ se.erase(a[i - k]); sum -= a[i- k]; se.insert(a[i]); sum += a[i]; x = *(--se.end()); if(sum - x \u0026gt; x) res++; } cout \u0026lt;\u0026lt; res; } "},{"id":51,"href":"/posts/2021-10-19-OmkarandHeavenlyTree/","title":"Problem: Omkar and Heavenly Tree","section":"Blog","content":"Tìm một cây có n đỉnh, thỏa mãn m (m \u0026lt; n) yêu cầu. Mỗi yêu cầu gồm 3 cố a, b, c, hiểu là trên đường đi đơn giản từ đỉnh a tới đỉnh c không chứa đỉnh b. Xuất ra n - 1 cạnh của cây. Dễ dàng chứng minh được luôn tồn tại đáp án.\nRàng buộc\n1≤t≤1e4 3≤n≤105 1≤m\u0026lt;n 1≤ai,bi,ci≤n, a, b, c are distinct It is guaranteed that the sum of n across all test cases will not exceed 105. Input\n2 7 4 1 2 3 3 4 5 5 6 7 6 5 4 5 3 1 2 3 2 3 4 3 4 5 Output\n1 2 1 3 3 5 3 4 2 7 7 6 5 1 1 3 3 2 2 4 Submit tại đây\nHướng dẫn\nĐầu tiên ta nháp thử trường hợp trong m yêu câu có chứa 3 yêu cầu sau, 1 3 7, 1 7 3, 3 1 7. Để giải quyết yêu cầu này ta buộc phải dùng 1 đỉnh khác nối với cả 3 đỉnh này. Tiếp theo ta thấy nối tới chuyện chọn 1 đỉnh làm tâm để nối tới tất cả các đỉnh của đồ thị, dễ thấy việc này hoàn toàn có thể. Code\nĐộ phức tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;int\u0026gt; adj[n + 1]; vector\u0026lt;bool\u0026gt; appear(n + 1, 0); while(m--){ int x, y, z; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y \u0026gt;\u0026gt; z; appear[y] = 1; } int z = 0; for(int i = 1; i \u0026lt;= n; i++){ if(appear[i] == 0){ z = i; break; } } for(int i = 1; i \u0026lt;= n; i++){ if(i == z) continue; cout \u0026lt;\u0026lt; z \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; i \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } } "},{"id":52,"href":"/posts/2021-12-03-Palindrome/","title":"Problem: Palindrome","section":"Blog","content":"Một xâu S chỉ chứa kí tự latin in thường. Nếu có thể chặt xâu S thành 3 xâu con không rỗng và cả 3 xâu con đều là xâu đối xứng thì xuất YES, ngược lại xuất NO.\nRàng buộc\n|s| \u0026lt;= 5000 \u0026#39;a\u0026#39; \u0026lt;= s[i] \u0026lt;= \u0026#39;z\u0026#39; Input\nabadddddz Output\nYES Submit tại đây\nHướng dẫn 1\nCode\nĐộ phưc tạp O(n * n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int N = 5000; string s; int n; bool f[N][N]; signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); cin \u0026gt;\u0026gt; s; n = s.length(); for(int i = 0; i \u0026lt; n; i++){ bool ok = 1; int l = i, r = i; do{ ok \u0026amp;= (s[l] == s[r]); f[l][r] = ok; l--; r++; } while(l \u0026gt;= 0 \u0026amp;\u0026amp; r \u0026lt; n); } for(int i = 0; i + 1 \u0026lt; n; i++){ bool ok = 1; int l = i, r = i + 1; do{ ok \u0026amp;= (s[l] == s[r]); f[l][r] = ok; l--; r++; } while(l \u0026gt;= 0 \u0026amp;\u0026amp; r \u0026lt; n); } bool ok = 0; for(int i = 1; i + 2 \u0026lt;= n; i++){ if(!f[0][0 + i - 1]) continue; for(int j = 1; i + j \u0026lt; n; j++){ if(!f[i][i + j - 1]) continue; ok |= f[i + j][n - 1]; } } cout \u0026lt;\u0026lt; (ok? \u0026#34;YES\\n\u0026#34;: \u0026#34;NO\\n\u0026#34;); } Hướng dẫn 2\nCode\nĐộ phưc tạp O(n * n). Tuy nhiên thời gian chạy lên tới 500ms vì cài đặt hashing sử dụng nhiều lần phép lấy dư. #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long struct hashing{ int n; int A, B; vector\u0026lt;int\u0026gt; h, p; hashing(string \u0026amp;s, int _A, int _B){ n = s.length(); A = _A; B = _B; h = vector\u0026lt;int\u0026gt;(n); p = vector\u0026lt;int\u0026gt;(n); p[0] = 1; h[0] = (s[0] - \u0026#39;a\u0026#39;) % B; for(int i = 1; i \u0026lt; n; i++){ p[i] = p[i - 1] * A % B; h[i] = (h[i - 1] * A + (s[i] - \u0026#39;a\u0026#39;)) % B; } } int get(int l, int r){ if(l == 0) return h[r]; return (h[r] - h[l - 1] * p[r - l + 1] + B * B) % B; } }; signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); string s; cin \u0026gt;\u0026gt; s; string h = s; reverse(h.begin(), h.end()); int n = s.length(); hashing a(s, 911382323, 972663749); hashing b(h, 911382323, 972663749); bool res = 0; for(int i = 1; i + 2 \u0026lt;= n; i++){ if(a.get(0, 0 + i - 1) != b.get(n - 1 - i + 1, n - 1)) continue; for(int j = 1; j + i \u0026lt; n; j++){ if(a.get(i, i + j - 1) != b.get(n - 1 - i - j + 1, n - 1 - i)) continue; res |= (a.get(i + j, n - 1) == b.get(0, (n - 1) - (i + j) + 1 - 1)); } } cout \u0026lt;\u0026lt; (res? \u0026#34;YES\\n\u0026#34;: \u0026#34;NO\\n\u0026#34;); } "},{"id":53,"href":"/posts/2021-12-17-PaprikaandPermutation/","title":"Problem: Paprika and Permutation","section":"Blog","content":"Cho mảng a gồm n số nguyên dương. Bạn được phép thực hiện thao tác sau với số lần tùy thích: đặt a[i] = a[i] % x, x là số nguyên dương mà bạn chọn. Hỏi có thể thu được mảng a gồm n phần tử là hoán vị từ [1, n].\nRàng buộc\n1≤t≤1e4 1≤n≤1e5 1≤ai≤1e9 It is guaranteed that the sum of n over all test cases does not exceed 2e5. Input\n4 2 1 7 3 1 5 4 4 12345678 87654321 20211218 23571113 9 1 2 3 4 18 19 5 6 7 Output\n1 -1 4 2 Submit tại đây\nHướng dẫn\nSố i có thể thu được từ các số a[j] mà a[j] \u0026gt; i * 2 hoặc a[j] = i. i càng nhỏ thì càng có ít sự lựa chọn, và ngược lại. Nên ta sẽ ưu tiên tạo ra các số i từ [1, n] Lúc này phát sinh một chuyện, nếu a[j] (giá trị a[j] nhỏ nhất mà a[j] \u0026gt; i * 2) mà \u0026lt;= n thì ta có dùng giá trị a[j] này không? Nếu dùng thì ta lại mất một giá trị khác để tạo nên giá trị a[j]. Mà giá trị khác này có thể dùng luôn để tạo nên giá trị i mà không cần phải qua nhiều bước. Như vậy với các phần tử a[j] của mảng a, ta sẽ chọn ra những thằng có giá trị trong khoảng [1, n], nếu có 2 phần tử trùng thì cũng chỉ chọn 1 thôi. Ví dụ a = {2, 5, 3, 3} có n = 4 vậy các giá trị được chọn ra trước là {2, 3}`. Code\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long #define double long double const double E = 1e-6; const int M = (int)1e9 + 7; signed main() { FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false); cin.tie(nullptr); int test; cin \u0026gt;\u0026gt; test; while(test--) { int n; cin \u0026gt;\u0026gt; n; multiset\u0026lt;int\u0026gt; mse; vector\u0026lt;int\u0026gt; mark(n + 1, 0); for(int i = 0; i \u0026lt; n; i++) { int x; cin \u0026gt;\u0026gt; x; if(x \u0026lt;= n \u0026amp;\u0026amp; mark[x] == 0){ mark[x] = 1; continue; } mse.insert(x); } int res = 0; for(int i = 1; i \u0026lt;= n; i++){ if(mark[i]) continue; auto it = mse.lower_bound(i * 2 + 1); if(it != mse.end()){ res++; mse.erase(it); } else{ res = -1; break; } } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":54,"href":"/posts/2021-10-10-Peopleareleaving/","title":"Problem: People are leaving","section":"Blog","content":"Cho n người đang đứng ở vị trí từ 1 tới n. Bạn phải thực hiện các truy vấn thuộc 2 loại:\n- x Người ở vị trí x rời đi. ? x Người gần nhất bên phải vị trí x. Ràng buộc\n1≤n,m≤106 1≤x≤n Input\n5 10 ? 1 - 3 ? 3 - 2 ? 1 ? 2 - 4 ? 3 - 5 ? 3 Output\n1 4 1 4 5 -1 Submit tại đây\nHướng dẫn\nBài này cần sử dụng dsu kết hợp nén đường dẫn(path-compression) để không bị TLE. Code\nĐộ phức tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; const int MAX=1e6+1; vector\u0026lt;int\u0026gt; link(MAX+1); int find(int a){ if(a != link[a]) return link[a] = find(link[a]); return a; } void unite(int y, int z){//a\u0026lt;b z=find(z); link[y]=z; } int main(){ ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0); for(int i=1; i\u0026lt;=MAX; i++) link[i]=i; int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; while(m--){ char x; int y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; if(x==\u0026#39;?\u0026#39;){ y=find(y); cout \u0026lt;\u0026lt; (y==n+1? -1: y) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } else unite(y, y+1); } } "},{"id":55,"href":"/posts/2021-10-21-quangcao/","title":"Problem: Quảng cáo","section":"Blog","content":"Nhân dịp Tết sắp đến công ty Jelly-for-Kids quyết định tăng cường việc quảng bá sản phẩm đến người tiêu dùng. Vì thế giám đốc marketing, ông Fruit-Jelly muốn gửi đi số lượng nhân viên tối đa có thể, làm nhiệm vụ tiếp thị tại đại lý trong thành phố\nTrong thành phố có m con đường, n đại lý bán kẹo (đánh số từ 1 đến n). Mỗi con đường chỉ nối trực tiếp giữa 2 đại lý, và được ký hiệu bằng chỉ số của 2 đại lý mà nó nối. Đồng thời, giữa 2 đại lý bất kỳ có không quá 1 con đường nối chúng\nÔng Fruit-Jelly nghĩ rằng, ông ta sẽ quản lý nhân viên dễ hơn nếu xếp mỗi người tiếp thị trên những hành trình có tính chất thứ tự. Tức là những đại lý bán kẹo trên hành trình đó thỏa các điều kiện sau\nCó đường nối trực tiếp giữa 2 đại lý liên tiếp nhau trên hành trình\nTừ một đại lý bất kỳ trong hành trình có thể đi qua tất cả các đoạn đường trong hành trình đó rồi trở về nơi xuất phát mà không đi qua đoạn đường nào quá một lần\nHành trình phân công cho mỗi nhân viên phải có ít nhất một đoạn đường chưa có nhân viên nào khác đi tiếp thị.\nMỗi nhân viên chỉ di chuyển trên hành trình mà anh ta được phân công. Hãy tính số lượng nhân viên tối đa mà ông Fruit-Jelly có thể xếp việc, và hành trình cụ thể mà mỗi người được xếp.\nRàng buộc\nN \u0026lt;= 2000 M \u0026lt;= 5000 Input\n5 6 1 2 2 4 4 5 3 5 1 3 2 3 Output\n2 Submit tại đây\nHướng dẫn\nTa đi tìm số chu trình đơn tối đa có trong đồ thị Nếu ta dfs gặp một đỉnh nằm trong thành phần liên thông đang xét, chứng tỏ cạnh này đã tạo một chu trình. Code\nĐộ phức tạp O(n + m) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;int\u0026gt; adj[n + 1]; while(m--){ int u, v; cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; adj[u].push_back(v); adj[v].push_back(u); } vector\u0026lt;int\u0026gt; travel(n + 1, 0); int cycle = 0; function\u0026lt;void(int,int)\u0026gt; dfs = [\u0026amp;](int u, int p){ travel[u] = 2; for(auto v: adj[u]){ if(travel[v] == 1 || v == p) continue; if(travel[v] == 0) dfs(v, u); else cycle++; } travel[u] = 1; }; for(int i = 1; i \u0026lt;= n; i++){ if(travel[i] == 0) dfs(i, 0); } cout \u0026lt;\u0026lt; cycle; } "},{"id":56,"href":"/posts/2021-12-02-RememberingStrings/","title":"Problem: Remembering Strings","section":"Blog","content":"Bạn có nhiều tập hợp n chuỗi có cùng độ dài, bao gồm các chữ cái tiếng Anh viết thường. Chúng ta sẽ nói rằng những chuỗi đó dễ nhớ nếu đối với mỗi chuỗi có một số vị trí i và một số chữ cái c của bảng chữ cái tiếng Anh, sao cho chuỗi này là chuỗi duy nhất trong tập hợp đa có chữ c ở vị trí i.\nVí dụ: một tập hợp nhiều chuỗi {\u0026quot;abc\u0026quot;, \u0026quot;aba\u0026quot;, \u0026quot;adc\u0026quot;, \u0026quot;ada\u0026quot;} không dễ nhớ. Và multiset {\u0026quot;abc\u0026quot;, \u0026quot;ada\u0026quot;, \u0026quot;ssa\u0026quot;} rất dễ nhớ vì: chuỗi đầu tiên là chuỗi duy nhất có ký tự c ở vị trí 3 ; chuỗi thứ hai là chuỗi duy nhất có ký tự d ở vị trí 2 ; chuỗi thứ ba là chuỗi duy nhất có ký tự s ở vị trí 2 .\nBạn muốn thay đổi một chút bộ đa năng của mình để dễ nhớ. Đối với aij tiền xu, bạn có thể thay đổi nhân vật trong j vị trí -thứ i của chuỗi -thứ vào bất kỳ chữ cái thường khác của bảng chữ cái tiếng Anh. Tìm số tiền tối thiểu bạn phải trả là bao nhiêu để làm cho tập hợp nhiều chuỗi dễ nhớ.\nRàng buộc\n1 \u0026lt;= n, m \u0026lt;= 20 0 \u0026lt;= aij \u0026lt;= 1e6 Input\n4 5 abcde abcde abcde abcde 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 Output\n3 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":57,"href":"/posts/2021-12-25-Reverse/","title":"Problem: Reverse","section":"Blog","content":"Bạn được cung cấp hai số nguyên dương x và y. Bạn có thể thực hiện thao tác sau với x: viết nó ở dạng nhị phân không có số 0 ở đầu, thêm 0 hoặc là 1 ở bên phải của nó, đảo ngược dạng nhị phân và biến nó thành một số thập phân được gán làm giá trị mới của x.\nVí dụ:\n34 có thể được biến thành 81 thông qua một hoạt động: dạng nhị phân của 34 Là 100010, Nếu bạn thêm 1, đảo ngược nó và loại bỏ các số không ở đầu, bạn sẽ nhận được 1010001, là dạng nhị phân của 81. 34 có thể được biến thành 17 thông qua một hoạt động: dạng nhị phân của 34 Là 100010, Nếu bạn thêm 0, đảo ngược nó và loại bỏ các số không ở đầu, bạn sẽ nhận được 10001, là dạng nhị phân của 17. 81 có thể được biến thành 69 thông qua một hoạt động: dạng nhị phân của 81 Là 1010001, Nếu bạn thêm 0, đảo ngược nó và loại bỏ các số không ở đầu, bạn sẽ nhận được 1000101, là dạng nhị phân của 69. 34 có thể được biến thành 69 qua hai thao tác: đầu tiên bạn lần lượt 34 vào trong 81 và sau đó 81 vào trong 69.\nNhiệm vụ của bạn là tìm hiểu xem liệu x có thể được biến thành y sau một số hoạt động nhất định (có thể bằng không).\nRàng buộc\n1≤x,y≤1e18 Input\n3 3 Output\nyes Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":58,"href":"/posts/2021-12-02-RoadImprovement/","title":"Problem: Road Improvement","section":"Blog","content":"Đất nước có n thành phố và n - 1 con đường hai chiều, bạn có thể đi từ mọi thành phố này đến bất kỳ thành phố nào khác nếu bạn chỉ di chuyển dọc theo các con đường. Các thành phố được đánh số bằng các số nguyên từ 1 đến n.\nTất cả các con đường ban đầu đều xấu, nhưng chính phủ muốn cải thiện tình trạng của một số con đường. Chúng tôi sẽ cho rằng người dân hài lòng về việc cải tạo đường nếu con đường từ thủ đô nằm ở thành phố x đến bất kỳ thành phố nào khác có nhiều nhất một con đường xấu.\nNhiệm vụ của bạn là với mọi x có thể xác định số cách cải thiện chất lượng của một số con đường để đáp ứng điều kiện của người dân. Vì những giá trị đó có thể khá lớn, bạn cần in từng mô-đun giá trị 1000000007.\nRàng buộc\nn \u0026lt;= 2e5 Input\n3 1 1 Output\n4 3 3 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int N = 2e5; const int M = (int)1e9 + 7; vector\u0026lt;int\u0026gt; adj[N + 1]; int upp[N + 1]; int doww[N + 1]; int all[N + 1]; int allM[N + 1]; int n; int euclidExtend(int a, int b){ //tim nghiem pt ax + by = 1 trong do gcd(a, b) = 1 //nghiem co the am if(a == 0) return 0; int y = euclidExtend(b % a, a); return (1 - b * y) / a; } int divide(int a, int b){ int u = __gcd(b, M); int z = (euclidExtend(b / u, M / u) + M * M) % M; return a * z % M; } void dfs(int u, int p){ upp[u] = 1; for(auto v: adj[u]){ if(v == p) continue; dfs(v, u); upp[u] = upp[u] * (upp[v] + 1) % M; } } void dfs1(int u, int p){ if(doww[u] + 1 == M){ allM[u]++; all[u] = 1; } else all[u] = (doww[u] + 1) % M; for(auto v: adj[u]){ if(v == p) continue; if(upp[v] + 1 == M) allM[u]++; else all[u] = all[u] * (upp[v] + 1) % M; } for(auto v: adj[u]){ if(v == p) continue; if(upp[v] + 1 == M){ if(allM[u] \u0026gt; 1) doww[v] = 0; else doww[v] = all[u]; } else doww[v] = divide((allM[u]? 0: all[u]), upp[v] + 1); dfs1(v, u); } } signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); cin \u0026gt;\u0026gt; n; for(int i = 2; i \u0026lt;= n; i++){ int p; cin \u0026gt;\u0026gt; p; adj[i].push_back(p); adj[p].push_back(i); } dfs(1, 0); dfs1(1, 0); for(int i = 1; i \u0026lt;= n; i++){ // debug(i) // debug(doww[i]) // debug(upp[i]) if(allM[i]) cout \u0026lt;\u0026lt; \u0026#34;0 \u0026#34;; else cout \u0026lt;\u0026lt; all[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; } } "},{"id":59,"href":"/posts/2021-10-21-Robin/","title":"Problem: Robin","section":"Blog","content":"Một ngày đẹp trời nọ, trên vương quốc của các Coders 2011, bỗng xuất hiện 1 lão phù thủy độc ác, lão phù thủy sirDat_LS đã có âm mưu thôn tính đất nước của đức vua vodanh9x. Lão phù thủy này rất yêu con gái của đức vua là Rose và đã bắt Rose về nơi ở của lão ta.\nĐức vua vodanh9x liền tìm hiệp sĩ Robin và sẽ hứa gả con gái cho Robin nếu chàng cứu được công chúa Rose trở về. Lão phù thủy sirDat_LS độc ác với khuôn mặt rất ghê tởm khiến công chúa mỗi khi nhìn thấy hắn thì công chúa lại ngất đi.\nVà rồi, chàng Robin của chúng ta đã tìm được đến nơi ở của lão phù thủy. Nơi ở của lão là 1 mê cung có N phòng, và N phòng này liên thông với nhau và có đúng N-1 đường đi (coi mỗi đường đi là 1 cạnh).\nNhưng khó khăn thay, lão phù thủy đã đánh số mỗi đường đi là 1 hoặc 2. Nếu chàng Robin muốn đến cứu công chúa, thì từ nơi xuất phát đến nơi có công chúa phải có ít nhất một đường đi được đánh số 2, nếu không chàng Robin sẽ chết.\nYêu cầu: Cho m truy vấn (m \u0026lt;= 10^5) mỗi truy vấn có dạng (x,y), trong đó x là nơi xuất phát của Robin và y là nơi nhốt công chúa. Xác định đường đi ngắn nhất từ x đến y có cạnh co trọng số 2 hay không.\nRàng buộc\nN \u0026lt;= 1e4 Input\n6 7 1 1 1 2 3 1 1 2 5 2 1 3 5 1 2 1 2 1 1 2 2 4 1 2 Output\nYES YES NO NO NO YES NO Submit tại đây\nHướng dẫn 1: LCA\nTìm tổ tiên chung gần nhất của (x, y) sau đó kiểm tra đoạn đường từ x đến lca(x, y) xem có cạnh nào là 2 không. làm tương tự với y. Code\nĐộ phức tạp O(n * logn + m * logn * logn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;pair\u0026lt;int,int\u0026gt;\u0026gt; adj[n + 1]; for(int i = 2; i \u0026lt;= n; i++){ int x, k; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; k; adj[x].push_back(make_pair(i, k)); adj[i].push_back(make_pair(x, k)); } vector\u0026lt;int\u0026gt; dist(n + 1, 0), cost(n + 1, 0), par(n + 1, 1); function\u0026lt;void(int,int)\u0026gt; dfs = [\u0026amp;](int u, int p){ for(auto val: adj[u]){ int v = val.first; int x = val.second; if(v == p) continue; par[v] = u; dist[v] = dist[u] + 1; cost[v] = cost[u] + x; dfs(v, u); } }; dfs(1, 0); int h = ceil(log2(n)); vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; sp(h + 1, vector\u0026lt;int\u0026gt;(n + 1)); for(int j = 1; j \u0026lt;= n; j++) sp[0][j] = par[j]; for(int i = 1; i \u0026lt;= h; i++){ for(int j = 1; j \u0026lt;= n; j++){ sp[i][j] = sp[i - 1][sp[i - 1][j]]; } } function\u0026lt;int(int,int)\u0026gt; find = [\u0026amp;](int x,int k){ for(int i = 0; i \u0026lt;= h; i++){ if((k \u0026gt;\u0026gt; i)\u0026amp;1) x = sp[i][x]; } return x; }; function\u0026lt;int(int,int)\u0026gt; lca = [\u0026amp;](int x, int y){ if(dist[x] \u0026lt; dist[y]) swap(x, y); int del = dist[x] - dist[y]; x = find(x, del); if(x == y) return x; int p = h; while(p - 1 \u0026gt;= 0 \u0026amp;\u0026amp; sp[p - 1][x] == sp[p - 1][y]) p--; int l = max(1, (1 \u0026lt;\u0026lt; (p - 1))); int r = (1 \u0026lt;\u0026lt; p); while(true){ if(r - l \u0026lt;= 1){ int u = find(x, l); int v = find(y, l); if(u == v) return u; return find(y, r); } int mid = ((l + r) \u0026gt;\u0026gt; 1); int u = find(x, mid); int v = find(y, mid); if(u == v) r = mid; else l = mid; } }; while(m--){ int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; int z = lca(x, y); if(dist[x] - dist[z] \u0026lt; cost[x] - cost[z] || dist[y] - dist[z] \u0026lt; cost[y] - cost[z]) cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; else cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; } } Code: nhanh hơn\nĐộ phức tạp O(n * logn + m * logn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;pair\u0026lt;int,int\u0026gt;\u0026gt; adj[n + 1]; for(int i = 2; i \u0026lt;= n; i++){ int x, k; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; k; adj[x].push_back(make_pair(i, k)); adj[i].push_back(make_pair(x, k)); } vector\u0026lt;int\u0026gt; dist(n + 1, 0), cost(n + 1, 0), par(n + 1, 1); function\u0026lt;void(int,int)\u0026gt; dfs = [\u0026amp;](int u, int p){ for(auto val: adj[u]){ int v = val.first; int x = val.second; if(v == p) continue; par[v] = u; dist[v] = dist[u] + 1; cost[v] = cost[u] + x; dfs(v, u); } }; dfs(1, 0); int h = ceil(log2(n)); vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; sp(h + 1, vector\u0026lt;int\u0026gt;(n + 1)); for(int j = 1; j \u0026lt;= n; j++) sp[0][j] = par[j]; for(int i = 1; i \u0026lt;= h; i++){ for(int j = 1; j \u0026lt;= n; j++){ sp[i][j] = sp[i - 1][sp[i - 1][j]]; } } function\u0026lt;int(int,int)\u0026gt; find = [\u0026amp;](int x,int k){ for(int i = 0; i \u0026lt;= h; i++){ if((k \u0026gt;\u0026gt; i)\u0026amp;1) x = sp[i][x]; } return x; }; function\u0026lt;int(int,int)\u0026gt; lca = [\u0026amp;](int x, int y){ if(dist[x] \u0026lt; dist[y]) swap(x, y); x = find(x, dist[x] - dist[y]); for(int i = h; i \u0026gt;= 0; i--){ if(sp[i][x] != sp[i][y]){ x = sp[i][x]; y = sp[i][y]; } } if(x == y) return x; return sp[0][x]; }; while(m--){ int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; int z = lca(x, y); // debug(x) // debug(y) // debug(z) if(dist[x] - dist[z] \u0026lt; cost[x] - cost[z] || dist[y] - dist[z] \u0026lt; cost[y] - cost[z]) cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; else cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; } } Hướng dẫn 2: DSU\nLoại bỏ tất cả các cạnh có trọng số là 2. Code\nĐộ phức tạp O(nlogn + mlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; struct dsu{ int n; vector\u0026lt;int\u0026gt; link, sz; dsu(int _n){ n = _n; link.assign(n + 1, 0); sz.assign(n + 1, 1); for(int i = 1; i \u0026lt;= n; i++) link[i] = i; } int find(int x){ if(x != link[x]) return link[x] = find(link[x]); return x; } bool unite(int a, int b){ a = find(a); b = find(b); if(a == b) return false; if(sz[a] \u0026lt; sz[b]) swap(a, b); link[b] = a; sz[a] += sz[b]; sz[b] = 0; return true; } bool same(int a, int b){ return find(a) == find(b); } }; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; dsu ds(n); for(int i = 2; i \u0026lt;= n; i++){ int x, k; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; k; if(k == 2) continue; ds.unite(i, x); } while(m--){ int x, y; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; if(ds.same(x, y)) cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; else cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; } } "},{"id":60,"href":"/posts/2021-11-03-SearchEngine/","title":"Problem: Search Engine","section":"Blog","content":"Cho mảng n phần tử, mỗi phần tử gồm 1 chuỗi và 1 trọng số. Cho q truy vấn, mỗi truy vấn là một chuỗi x. Tìm chuỗi y trong mảng a sao cho x là tiền tố của y và trọng số của y là lớn nhất có thể.\nRàng buộc\n1 ≤ n, weight, len(s), len(t) ≤ 1e6 1 ≤ q ≤ 1e5 total length of all strings in database entries ≤ 1e6 total length of all query strings ≤ 1e6 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(x + y) trong đó x là total length of all strings in database entries, y là total length of all query strings #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long struct TrieNode{ TrieNode * child[26]; int val; TrieNode(){ for(int i = 0; i \u0026lt; 26; i++){ child[i] = nullptr; } val = 0; } }; TrieNode * root = new TrieNode(); void trieInsert(const string \u0026amp;s, int val){ TrieNode * p = root; for(int i = 0; i \u0026lt; s.length(); i++){ int x = s[i] - \u0026#39;a\u0026#39;; if(p-\u0026gt;child[x] == nullptr){ p-\u0026gt;child[x] = new TrieNode(); } p = p-\u0026gt;child[x]; p-\u0026gt;val = max(p-\u0026gt;val, val); } } int trieFind(const string \u0026amp;s){ TrieNode * p = root; for(int i = 0; i \u0026lt; s.length(); i++){ int x = s[i] - \u0026#39;a\u0026#39;; if(p-\u0026gt;child[x] == nullptr){ return 0; } p = p-\u0026gt;child[x]; } return p-\u0026gt;val; } signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int n, q; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; q; for(int i = 0; i \u0026lt; n; i++){ string s; cin \u0026gt;\u0026gt; s; int val; cin \u0026gt;\u0026gt; val; trieInsert(s, val); } while(q--){ string h; cin \u0026gt;\u0026gt; h; int res = trieFind(h); if(res == 0) cout \u0026lt;\u0026lt; -1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; else cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } } "},{"id":61,"href":"/posts/2021-09-20-ShiftingSort/","title":"Problem: Shifting Sort","section":"Blog","content":"Cho một mảng số nguyên. Hãy sắp xếp lại mảng. Được sử dụng thao tác sau không quá n lần: chọn 1 đoạn [l,r] của mảng, dịch sang trái k vị trí. Ví dụ 2, 5, 3 dịch sang trái 1 đơn vị sẽ là 5, 3, 2. Xuất ra các thao tác đã thực hiện để thu được mảng không giảm.\nRàng buộc\n1≤t≤1000 2≤n≤50 −1e9≤ai≤1e9 Input\n4 2 2 1 3 1 2 1 4 2 4 1 3 5 2 5 1 4 3 Output\n1 1 2 1 1 1 3 2 3 2 4 1 2 3 1 1 3 2 4 2 4 2 1 5 3 1 2 1 1 3 1 Submit tại đây\nHướng dẫn\nCode\nĐộ phức tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #include \u0026lt;ext/pb_ds/assoc_container.hpp\u0026gt; using namespace __gnu_pbds; typedef tree\u0026lt;int,null_type,less\u0026lt;int\u0026gt;,rb_tree_tag,tree_order_statistics_node_update\u0026gt; indexed_set; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long main(){ freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; vector\u0026lt;pair\u0026lt;int,int\u0026gt;\u0026gt; res; indexed_set is; pair\u0026lt;int,int\u0026gt; a[n]; for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i].first; a[i].second = i; } sort(a, a + n); int b[n]; for(int i = 0; i \u0026lt; n; i++){ b[a[i].second] = i; } for(int i = 0; i \u0026lt; n; i++){; int u = is.order_of_key(b[i]); if(u \u0026lt; (int)is.size()) res.push_back(make_pair(u, i)); is.insert(b[i]); } cout \u0026lt;\u0026lt; res.size() \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; for(int i = 0; i \u0026lt; res.size(); i++){ cout \u0026lt;\u0026lt; res[i].first + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; res[i].second + 1 \u0026lt;\u0026lt; \u0026#34; \u0026#34; \u0026lt;\u0026lt; res[i].second - res[i].first \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } } indexed_set\r#\r#include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #include \u0026lt;ext/pb_ds/assoc_container.hpp\u0026gt; using namespace __gnu_pbds; typedef tree\u0026lt;int,null_type,less\u0026lt;int\u0026gt;,rb_tree_tag,tree_order_statistics_node_update\u0026gt; indexed_set; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); indexed_set s; s.insert(1); s.insert(5); cout \u0026lt;\u0026lt; *s.find_by_order(0) \u0026lt;\u0026lt; endl; // 1 cout \u0026lt;\u0026lt; *s.find_by_order(1) \u0026lt;\u0026lt; endl; // 5 cout \u0026lt;\u0026lt; *s.find_by_order(3) \u0026lt;\u0026lt; endl; // 0 cout \u0026lt;\u0026lt; s.order_of_key(1) \u0026lt;\u0026lt; endl; // 0 cout \u0026lt;\u0026lt; s.order_of_key(5) \u0026lt;\u0026lt; endl; // 1 cout \u0026lt;\u0026lt; s.order_of_key(0) \u0026lt;\u0026lt; endl; // 0 cout \u0026lt;\u0026lt; s.order_of_key(3) \u0026lt;\u0026lt; endl; // 1 cout \u0026lt;\u0026lt; s.order_of_key(10) \u0026lt;\u0026lt; endl; // 2 } "},{"id":62,"href":"/posts/2021-12-25-SingersTour/","title":"Problem: Singers' Tour","section":"Blog","content":"Mảng a gồm n phần tử, mảng b được tạo nên từ mảng a như sau: ví dụ\na = {2, 5, 3}\n2 4 6\n15 5 10\n6 9 3\n23 18 19\nvậy mảng b = {23, 18, 19} Tức là trong ma trận n x n thì các phần tử của mảng a chính là các phần tử trân đường chéo chính của ma trận. Các phần tử tiếp bên phải được tạo nên bằng cách gấp đôi phần tử trước.\nCho mảng b, tìm mảng a. hoặc cho biết không thể.\nRàng buộc\n1≤t≤1e3 1≤n≤4e4 1≤bi≤1e9 The sum of n over all test cases does not exceed 2e5. Input\n4 3 12 16 14 1 1 3 1 2 3 6 81 75 75 93 93 87 Output\nYES 3 1 3 YES 1 NO YES 5 5 4 1 4 5 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":63,"href":"/posts/2021-12-25-SpecialNumber/","title":"Problem: Special Number","section":"Blog","content":"Đếm số cặp số nguyên dương (x, y) sao cho x + 2y = N.\nRàng buộc\n1 \u0026lt;= N \u0026lt;= 1e15 Input\n100 Output\n7 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() "},{"id":64,"href":"/posts/2021-11-03-StringMatching/","title":"Problem: String Matching","section":"Blog","content":"Cho một chuỗi và mẫu. Đếm số vị trí mẫu xuất hiện trong chuỗi.\nRàng buộc\n1≤n,m≤1e6 Input\nsaippuakauppias pp Output\n2 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long struct hashing{ int n; int A, B; vector\u0026lt;int\u0026gt; h, p; hashing(string \u0026amp;s, int _a, int _b){ n = s.length(); A = _a; B = _b; h = vector\u0026lt;int\u0026gt;(n); p = vector\u0026lt;int\u0026gt;(n); p[0] = 1; h[0] = s[0]; for(int i = 1; i \u0026lt; n; i++){ p[i] = p[i - 1] * A % B; h[i] = (h[i - 1] * A + s[i]) % B; } } int get(int l, int r){ if(l == 0) return h[r]; return (h[r] - h[l - 1]*p[r - l + 1] + B*B) % B; } int cal(string \u0026amp;s){ int m = s.length(); vector\u0026lt;int\u0026gt; h(m); h[0] = s[0]; for(int i = 1; i \u0026lt; m; i++){ h[i] = (h[i - 1] * A + s[i]) % B; } return h[m - 1]; } }; signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); string s,h; cin \u0026gt;\u0026gt; s \u0026gt;\u0026gt; h; hashing ha(s, 911382323, 972663749); int z = ha.cal(h); int n = s.length(); int m = h.length(); int res = 0; for(int i = m - 1; i \u0026lt; n; i++){ if(ha.get(i - m + 1, i) == z) res++; } cout \u0026lt;\u0026lt; res; } "},{"id":65,"href":"/posts/2021-11-02-StringSubsequences/","title":"Problem: String Subsequences","section":"Blog","content":"Cho chuỗi s1 có độ dài 3, s2 có độ dài \u0026lt;=1e5. Tìm số s2.subsequence(s1).\nSubmit tại đây\nHướng dẫn\nGọi kết quả cần tìm là dp[3][n], chính là số subsequence s1(0, 3) xuất hiện trong chuỗi s2(0, n). Code\nĐộ phưc tạp O(3 * n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define int long long /* * Complete the \u0026#39;getSubsequenceCount\u0026#39; function below. * * The function is expected to return a LONG_INTEGER. * The function accepts following parameters: * 1. STRING s1 * 2. STRING s2 */ int getSubsequenceCount(string a, string b) { int n = b.length(); vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(3, vector\u0026lt;int\u0026gt;(n, 0)); dp[0][0] = (b[0] == a[0]); for(int i = 1; i \u0026lt; n; i++){ dp[0][i] = dp[0][i - 1] + (b[i] == a[0]); } for(int i = 1; i \u0026lt; 3; i++){ for(int j = 1; j \u0026lt; n; j++){ if(b[j] != a[i]) dp[i][j] = dp[i][j - 1]; else dp[i][j] = dp[i][j - 1] + dp[i - 1][j - 1]; } } return dp[2][n - 1]; } signed main() { ofstream fout(getenv(\u0026#34;OUTPUT_PATH\u0026#34;)); string s1; getline(cin, s1); string s2; getline(cin, s2); long result = getSubsequenceCount(s1, s2); fout \u0026lt;\u0026lt; result \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; fout.close(); return 0; } "},{"id":66,"href":"/posts/2021-12-02-Theleastroundway/","title":"Problem: The least round way","section":"Blog","content":"Có một ma trận vuông n × n , bao gồm các số nguyên không âm. Bạn nên tìm một cách như vậy trên đó bắt đầu ở ô phía trên bên trái của ma trận; mỗi ô sau nằm ở bên phải hoặc đi xuống so với ô hiện tại; đường kết thúc ở ô dưới cùng bên phải.\nHơn nữa, nếu chúng ta nhân với nhau tất cả các số trên đường đi, kết quả sẽ là \u0026ldquo;vòng\u0026rdquo; nhỏ nhất. Nói cách khác, nó phải kết thúc bằng số lượng số 0 ít nhất có thể.\nRàng buộc\n2 \u0026lt;= n \u0026lt;= 1000 0 \u0026lt;= aij \u0026lt;= 1e9 Input\n3 1 2 3 4 5 6 7 8 9 Output\n0 DDRR Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int N = 1000; pair\u0026lt;int,int\u0026gt; dp[N + 1][N + 1][2]; pair\u0026lt;int,int\u0026gt; a[N + 1][N + 1]; int n; signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); cin \u0026gt;\u0026gt; n; int rr = 0; for(int i = 1; i \u0026lt;= n; i++){ for(int j = 1; j \u0026lt;= n; j++){ int x; cin \u0026gt;\u0026gt; x; if(x == 0){ rr = i; continue; } while(x % 2 == 0){ a[i][j].first++; x /= 2; } while(x % 5 == 0){ a[i][j].second++; x /= 5; } } } for(int i = 1; i \u0026lt;= n; i++){ for(int j = 0; j \u0026lt; 2; j++){ dp[0][i][j] = make_pair(1e9, 1e9); dp[i][0][j] = make_pair(1e9, 1e9); } } dp[0][1][0] = make_pair(0, 0); for(int i = 1; i \u0026lt;= n; i++){ for(int j = 1; j \u0026lt;= n; j++){ vector\u0026lt;pair\u0026lt;int,int\u0026gt;\u0026gt; v; v.push_back(dp[i][j - 1][0]); v.push_back(dp[i][j - 1][1]); v.push_back(dp[i - 1][j][0]); v.push_back(dp[i - 1][j][1]); sort(v.begin(), v.end()); dp[i][j][0] = v[0]; dp[i][j][0].first += a[i][j].first; dp[i][j][0].second += a[i][j].second; sort(v.begin(), v.end(), [](pair\u0026lt;int,int\u0026gt; u, pair\u0026lt;int,int\u0026gt; v){ return u.second \u0026lt; v.second || (u.second == v.second \u0026amp;\u0026amp; u.first \u0026lt; v.first); }); dp[i][j][1] = v[0]; dp[i][j][1].first += a[i][j].first; dp[i][j][1].second += a[i][j].second; } } int r = n, c = n; pair\u0026lt;int,int\u0026gt; x; int u = min(dp[r][c][0].first, dp[r][c][0].second); int v = min(dp[r][c][1].first, dp[r][c][1].second); if(u \u0026lt; v) x = dp[r][c][0]; else x = dp[r][c][1]; string s; while(r \u0026gt; 0 \u0026amp;\u0026amp; c \u0026gt; 0){ x.first -= a[r][c].first; x.second -= a[r][c].second; if(r == 1 \u0026amp;\u0026amp; c \u0026gt; 1){ s.push_back(\u0026#39;R\u0026#39;); c--; continue; } if(c == 1 \u0026amp;\u0026amp; r \u0026gt; 1){ s.push_back(\u0026#39;D\u0026#39;); r--; continue; } if(r == 1 \u0026amp;\u0026amp; c == 1) break; if(dp[r][c - 1][0] == x || dp[r][c - 1][1] == x){ s.push_back(\u0026#39;R\u0026#39;); c--; continue; } if(dp[r - 1][c][0] == x || dp[r - 1][c][1] == x){ s.push_back(\u0026#39;D\u0026#39;); r--; continue; } break; } if(rr \u0026gt; 0 \u0026amp;\u0026amp; min(u, v) \u0026gt; 1){ cout \u0026lt;\u0026lt; 1 \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; string res = string(rr - 1, \u0026#39;D\u0026#39;) + string(n - 1, \u0026#39;R\u0026#39;) + string (n - rr, \u0026#39;D\u0026#39;); cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; return 0; } cout \u0026lt;\u0026lt; min(u, v) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; reverse(s.begin(), s.end()); cout \u0026lt;\u0026lt; s; } "},{"id":67,"href":"/posts/2021-10-12-TheNumberofImposters/","title":"Problem: The Number of Imposters","section":"Blog","content":"Cho n người chơi cùng chơi game. mỗi người sẽ là imposter hoặc crewmate. imposter là người luôn nói dối, cewmate là người luôn nói thật. cho m nhận xét có dạng (i, j, c) ví dụ: 1 2 imposter, tức là người chơi 1 nói người chơi 2 là imposter, như vậy nếu người chơi 2 đúng là imposter thì người chơi 1 là crewmate, và ngược lại. Tính số lượng tối đa imposter trong game.\nRàng buộc\n1≤t≤1e4 1≤n≤2e5 0≤m≤5e5 the structure \u0026#34;i j c\u0026#34; where i and j are two distinct integers and c is a string (1≤i,j≤n; i≠j; c is either imposter or crewmate There can be multiple comments for the same pair of (i,j). It is guaranteed that the sum of all n does not exceed 2e5 and the sum of all m does not exceed 5e5. Input\n5 3 2 1 2 imposter 2 3 crewmate 5 4 1 3 crewmate 2 5 crewmate 2 4 imposter 3 4 imposter 2 2 1 2 imposter 2 1 crewmate 3 5 1 2 imposter 1 2 imposter 3 2 crewmate 3 2 crewmate 1 3 imposter 5 0 Output\n2 4 -1 2 5 Submit tại đây\nHướng giải\nQuy bài toán về dạng đồ thị 2n đỉnh. với người chơi i tương ứng sẽ có 2 đỉnh i và i + n, đại diện cho 2 trường hợp là crewmate và imposter. Như vậy sẽ hình thành đồ thị với các thành phần liên thông. Trong đó nếu tồn tại 1 thành phần liên thông mà có đỉnh i và i + n liên thông với nhau thì suy ra không tồn tại game như vậy, xuất -1. Trong hình:\nđỉnh 1 - 5 - 6 là 1 thành phần liên thông, có 2 imposter đỉnh 2 - 3 là 1 thành phần liên thông, có 0 imposter đỉnh 4 là 1 thành phần liên thông, có 1 imposter. Code\nĐộ phức tạp O(n + m) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; vector\u0026lt;int\u0026gt; adj[2 * n + 1]; while(m--){ int x, y; string s; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y \u0026gt;\u0026gt; s; if(s[0] == \u0026#39;i\u0026#39;){ adj[x].push_back(y + n); adj[y + n].push_back(x); adj[x + n].push_back(y); adj[y].push_back(x + n); } else{ adj[x].push_back(y); adj[y].push_back(x); adj[x + n].push_back(y + n); adj[y + n].push_back(x + n); } } vector\u0026lt;bool\u0026gt; visitted(2 * n + 1, 0); int cntImposter = 0; bool ok = 0; vector\u0026lt;int\u0026gt; temp(2 * n + 1, 0); int temp1 = 0; int cnt = 0; function\u0026lt;void(int)\u0026gt; dfs = [\u0026amp;](int x){ visitted[x] = 1; temp[x] = temp1; cnt++; if(x \u0026gt; n \u0026amp;\u0026amp; temp[x - n] == temp[x]) ok = 1; else if(x \u0026lt;= n \u0026amp;\u0026amp; temp[x + n] == temp[x]) ok = 1; if(x \u0026gt; n) cntImposter++; for(auto v: adj[x]){ if(visitted[v]) continue; dfs(v); } }; int res = 0; for(int i = 1; i \u0026lt;= n; i++){ if(visitted[i] == 0 \u0026amp;\u0026amp; visitted[i + n] == 0){ temp1++; dfs(i); if(ok) break; else res += max(cnt - cntImposter, cntImposter); cntImposter = 0; cnt = 0; } } if(ok){ cout \u0026lt;\u0026lt; \u0026#34;-1\\n\u0026#34;; continue; } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":68,"href":"/posts/2021-12-17-TomandJery/","title":"Problem: Tom and Jery","section":"Blog","content":"Tom và Jerry đang đuổi theo nhau trong một mê cung được hình thành như một cái cây. Cây này có 𝑛 nút. Jerry hiện đang ở nút 𝑥 và có một quả bom do Tom đặt ở đây. Bom có tầm bắn 𝑡 nên khi phát nổ, tất cả các nút có khoảng cách đến nút 𝑥 nhỏ hơn hoặc bằng 𝑡 sẽ bị cháy. Nếu Jerry bị cháy, anh ta sẽ bị ngất và bị Tom bắt. Tất nhiên, Jerry muốn thoát khỏi khu vực phát nổ bằng cách chạy qua các cạnh trong mê cung. Mặt khác, Tom muốn bắt Jerry nên định chặn một vài cạnh trên mê cung để Jerry không thể di chuyển qua các cạnh này. Nhiệm vụ: Đưa ra một tập hợp 𝑚 truy vấn, mỗi truy vấn có hai số 𝑥 và 𝑡, cho biết nút ban đầu mà Jerry và quả bom hiện đang ở, và phạm vi của quả bom. Hãy giúp Tom tìm số cạnh tối thiểu phải chặn để bắt được Jerry\nRàng buộc\n1 ≤ 𝑛, 𝑚 ≤ 1e5 1 ≤ 𝑢, 𝑣 ≤ 𝑛; 𝑢 ≠ 𝑣 1 ≤ 𝑥 ≤ 𝑛; 0 ≤ 𝑡 ≤ 𝑛 Input\n7 3 1 2 2 3 2 4 3 5 3 6 4 7 4 1 2 2 2 1 Output\n1 0 2 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(nlogn) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int N = 1e5; vector\u0026lt;int\u0026gt; adj[N + 1]; vector\u0026lt;int\u0026gt; child[N + 1]; int par[N + 1]; int c[N + 1]; pair\u0026lt;int,int\u0026gt; d[N + 1]; pair\u0026lt;int,int\u0026gt; e[N + 1]; int f[N + 1]; void dfs(int u, int p){ for(auto v: adj[u]){ if(v == p) continue; child[u].push_back(v); par[v] = u; c[v] = c[u] + 1; dfs(v, u); pair\u0026lt;int,int\u0026gt; temp = make_pair(d[v].first + 1, v); if(temp.first \u0026gt; d[u].first){ e[u] = d[u]; d[u] = temp; } else if(temp.first \u0026gt; e[u].first){ e[u] = temp; } } return ; } void dfs1(int u, int p){ for(auto v: adj[u]){ if(v == p) continue; int temp; if(u == 1) temp = 0; else temp = f[u] + 1; if(d[u].second != v) temp = max(temp, d[u].first + 1); else if(e[u].second != v) temp = max(temp, e[u].first + 1); f[v] = temp; dfs1(v, u); } } int bise(int x, int t){ if(child[x].empty()) return 0; int l = 0, r = (int)child[x].size() - 1; while(true){ if(r - l \u0026lt;= 1){ if(child[x][l] \u0026gt; t) return (int)child[x].size() - l; if(child[x][r] \u0026gt; t) return (int)child[x].size() - r; return 0; } int mid = (l + r) / 2; if(child[x][mid] \u0026gt; t) r = mid; else l = mid; } } signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int n, m; cin \u0026gt;\u0026gt; n \u0026gt;\u0026gt; m; for(int i = 1; i \u0026lt; n; i++){ int u, v; cin \u0026gt;\u0026gt; u \u0026gt;\u0026gt; v; adj[u].push_back(v); adj[v].push_back(u); } dfs(1, 0); dfs1(1, 0); for(int i = 1; i \u0026lt;= n; i++){ for(auto \u0026amp;val: child[i]){ val = d[val].first + 1; } sort(child[i].begin(), child[i].end()); } while(m--){ int x, t; cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; t; if(n == 1){ cout \u0026lt;\u0026lt; \u0026#34;0\\n\u0026#34;; continue; } int res = bise(x, t); if(f[x] \u0026gt; t) res++; // debug(x) // debug(t) // debug(res) cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; } // debug(d[2].first) // debug(d[2].second) // debug(e[2].first) // debug(e[2].second) // debug(f[2]) // debug(d[3].first) // debug(d[3].second) // debug(e[3].first) // debug(e[3].second) // debug(f[3]) // debug(d[4].first) // debug(d[4].second) // debug(e[4].first) // debug(e[4].second) // debug(f[4]) // debug(d[7].first) // debug(d[7].second) // debug(e[7].first) // debug(e[7].second) // debug(f[7]) } "},{"id":69,"href":"/posts/2021-10-13-TrainingSession/","title":"Problem: Training Session","section":"Blog","content":"Cho n cặp số (x, y). Tính số cách chọn ra 3 cặp số (x, y) trong n cặp số, sao cho giá trị x của chúng khác nhau từng đôi hoặc giá trị y của chúng khác nhau từng đôi.\nRàng buộc\n1≤t≤50000 3≤n≤2e5 1≤ai,bi≤n It is guaranteed that there are no two problems that have the same topic and difficulty at the same time. The sum of n over all testcases doesn\u0026#39;t exceed 2⋅105. Input\n2 4 2 4 3 4 2 1 1 3 5 1 5 2 4 3 3 4 2 5 1 Output\n3 10 Submit tại đây\nSai\nĐó chính là kêt quả = số bộ 3 có x khác + số bộ 3 có y khác - số bộ 3 có x khác và y khác Việc tính số bộ 3 có x khác và y khác rất khó khăn. Hướng dẫn\nTa sử dụng phần bù - một phương pháp phổ biến trong toán tổ hợp, tức là kết quả = tất cả - không hợp lệ Số cách chọn 3 cặp số (x, y) bất kì từ n cặp số là: n * (n - 1) * (n - 2) / 6 Số cách chọn ra 3 cặp số (x, y) không hợp lệ, xem hình Ta thấy trường hợp không hợp lệ chỉ có 1 dạng, đó là xa == xb != xc \u0026amp;\u0026amp; ya != yb == yc Như vậy với mỗi cặp số (xa, yb) ta cần chọn thêm 1 cặp số (xb, yb) có xa == xb và 1 cặp số (xc, yc) có yb == yc. viếc chọn thêm 2 cặp này là độc lập, nên dễ dàng tính được. Code\nĐộ phức tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; int a[n], b[n]; vector\u0026lt;int\u0026gt; u(n + 1, 0), v(n + 1, 0); for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i] \u0026gt;\u0026gt; b[i]; u[a[i]]++; v[b[i]]++; } int res = n * (n - 1) * (n - 2) / 6; for(int i = 0; i \u0026lt; n; i++){ res -= (u[a[i]] - 1) * (v[b[i]] - 1); } cout \u0026lt;\u0026lt; res \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } "},{"id":70,"href":"/posts/2021-10-28-VupsenPupsenand0/","title":"Problem: Vupsen, Pupsen and 0","section":"Blog","content":"Cho mảng a gồm n số nguyên. Tìm mảng b có n phần tử (0 \u0026lt; |b[i]| \u0026lt;= 1e9) sao cho tổng của tất cả |b[i]| \u0026lt;= 1e9 và tổng của tất cả a[i] * b[i] bằng 0.\nRàng buộc\n2 \u0026lt;= n \u0026lt;= 1e5 0 \u0026lt; |a[i]| \u0026lt;= 1e4 Input\n3 2 5 5 5 5 -2 10 -9 4 7 1 2 3 4 5 6 7 Output\n1 -1 -1 5 1 -1 -1 -10 2 2 -3 5 -1 -1 Submit tại đây\nHướng dẫn\nPending Code\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; const int N = 1e5; ll a[N], b[N]; int n; void solve(int l, int r){ int sz = r - l + 1; if(sz % 2 == 0){ for(int i = l; i \u0026lt;= r; i++){ b[i] = a[r + l - i] *(i \u0026lt; l + sz / 2? 1: -1); } return ; } if(sz == 3){ vector\u0026lt;pair\u0026lt;ll,int\u0026gt;\u0026gt; v(3); for(int i = l; i \u0026lt;= r; i++){ v[i - l] = make_pair(a[i], i); } sort(v.begin(), v.end()); if(v[0].first + v[1].first == 0){ b[v[0].second] = v[2].first; b[v[1].second] = -v[2].first; b[v[2].second] = -(v[0].first - v[1].first); } else { b[v[0].second] = v[2].first; b[v[1].second] = v[2].first; b[v[2].second] = -(v[0].first + v[1].first); } return ; } solve(l, l + 2); solve(l + 3, r); } int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ cin \u0026gt;\u0026gt; n; for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i]; } solve(0, n - 1); ll check = 0; for(int i = 0; i \u0026lt; n; i++){ cout \u0026lt;\u0026lt; b[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; // check += a[i] * b[i]; } cout \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; // debug(check) } } "},{"id":71,"href":"/posts/2021-11-03-WordCombinations/","title":"Problem: Word Combinations","section":"Blog","content":"Cho 1 chuỗi s và n chuỗi. Hỏi có bao nhiêu cách tạo nên chuỗi s từ các chuỗi trong n chuỗi. Kết quả được lấy dư cho 1e9 + 7.\nRàng buộc\n1≤n≤5000 1≤k≤1e5 the total length of the words is at most 1e6 Input\n4 ab abab c cb Output\n2 Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O(n * n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long const int M = (int)1e9 + 7; const int N = 5000; struct TrieNode{ TrieNode * child[26]; int cnt; TrieNode(){ for(int i = 0; i \u0026lt; 26; i++){ child[i] = nullptr; } cnt = 0; } }; TrieNode* root = new TrieNode(); string s; void trieInsert(const string \u0026amp;s){ TrieNode * p = root; for(int i = 0; i \u0026lt; s.length(); ++i){ int x = s[i] - \u0026#39;a\u0026#39;; if(p-\u0026gt;child[x] == nullptr){ p-\u0026gt;child[x] = new TrieNode(); } p = p-\u0026gt;child[x]; } (p-\u0026gt;cnt)++; } int g[5000][5000]; int trieFind(int l, int r){ TrieNode * p = root; for(int i = l; i \u0026lt;= r; ++i){ int x = s[i] - \u0026#39;a\u0026#39;; if(p-\u0026gt;child[x] == nullptr){ g[l][i] = 0; for(int j = i + 1; j \u0026lt;= r; j++){ g[l][j] = 0; } return 0; } p = p-\u0026gt;child[x]; g[l][i] = p-\u0026gt;cnt; } return p-\u0026gt;cnt; } signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); cin \u0026gt;\u0026gt; s; int q; cin \u0026gt;\u0026gt; q; while(q--){ string x; cin \u0026gt;\u0026gt; x; trieInsert(x); } int n = s.length(); for(int i = 0; i \u0026lt; n; i++){ trieFind(i, n - 1); } int dp[n]; dp[0] = g[0][0]; for(int i = 1; i \u0026lt; n; i++){ dp[i] = g[0][i]; for(int j = i - 1; j \u0026gt;= 0; j--){ dp[i] += dp[j] * g[j + 1][i] % M; dp[i] %= M; } } cout \u0026lt;\u0026lt; dp[n - 1]; } "},{"id":72,"href":"/posts/2021-12-03-X-Magic-Pair/","title":"Problem: X-Magic Pair","section":"Blog","content":"Bạn được cung cấp một cặp số nguyên (a,b) và một số nguyên x.\nBạn có thể thay đổi cặp theo hai cách khác nhau: set (gán) a=|a−b|;set (gán) b=|a−b|,\nCặp (a,b) được gọi là x-magic nếu x có thể đạt được như a hoặc như b chỉ sử dụng các phép toán đã cho (tức là cặp (a,b) có a = x hoặc b = x).\nNhiệm vụ của bạn là tìm xem cặp (a,b) là x-magic hay không.\nBạn phải trả lời t trường hợp thử nghiệm độc lập.\nRàng buộc\n1 \u0026lt;= t \u0026lt;= 1e4 1 \u0026lt;= a, b, x \u0026lt;= 1e18 Input\n8 6 9 3 15 38 7 18 8 8 30 30 30 40 50 90 24 28 20 365 216 52 537037812705867558 338887693834423551 3199921013340 Output\nYES YES YES YES NO YES YES YES Submit tại đây\nHướng dẫn\nCode\nĐộ phưc tạp O() #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long bool solve(int a, int b, int x){ if(b \u0026lt; x) return 0; if(a == 0) return x == b; if((b - x) % a == 0) return 1; return solve(b % a, a, x); } signed main(){ FILE *pFile = fopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;); if(pFile != nullptr) freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(false);cin.tie(nullptr); int t; cin \u0026gt;\u0026gt; t; while(t--){ int a, b, x; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; x; if(a \u0026gt; b) swap(a, b); if(solve(a, b, x)) cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; else cout \u0026lt;\u0026lt; \u0026#34;NO\\n\u0026#34;; } } "},{"id":73,"href":"/posts/2021-10-21-lcs/","title":"Problem: Xâu con chung dài nhất","section":"Blog","content":"Xâu ký tự X được gọi là xâu con của xâu ký tự Y nếu ta có thể xoá đi một số ký tự trong xâu Y để được xâu X.\nCho biết hai xâu ký tự A và B, hãy tìm xâu ký tự C có độ dài lớn nhất và là con của cả A và B.\nRàng buộc\n|A|, |B| \u0026lt;= 2000 Input\nabc1def2ghi3 abcdefghi123 Output\n10 Submit tại đây\nHướng dẫn\nBài classic. Code\nĐộ phưc tạp O(n * m) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; using ll = long long; int main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); string a, b; cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; int n = a.length(); int m = b.length(); vector\u0026lt;vector\u0026lt;int\u0026gt;\u0026gt; dp(n + 1, vector\u0026lt;int\u0026gt;(m + 1, 0)); for(int i = 1; i \u0026lt;= n; i++){ for(int j = 1; j \u0026lt;= m; j++){ dp[i][j] = max(max(dp[i][j - 1], dp[i - 1][j]), dp[i - 1][j - 1] + (a[i - 1] == b[j - 1])); } } cout \u0026lt;\u0026lt; dp[n][m]; } "},{"id":74,"href":"/posts/2021-11-02-XORSpecia-LIS-t/","title":"Problem: XOR Specia-LIS-t","section":"Blog","content":"Cho mảng a gồm n phần từ. chia mảng a thành k subarrays sao cho mỗi phần tử trong a thuộc về 1 subarrays. Mỗi subarray có 1 giá trị x, chính là độ dài chuỗi con tăng dài nhất trong subarray (LIS). Sau đó xor tất cả các giá trị x lại được giá trị 0. Hỏi có tồn tại cách chia k subarrays theo yêu cầu của bài không?\nRàng buộc\n1≤t≤10000 2≤n≤1e5 1≤ai≤1e9 It is guaranteed that the sum of n over all test cases doesn\u0026#39;t exceed 3e5. Input\n4 7 1 3 4 2 2 1 5 3 1 3 4 5 1 3 2 4 2 4 4 3 2 1 Output\nYES NO YES YES Submit tại đây\nHướng dẫn\nTa thấy nếu n chẵn thì, ta chia thành n subarrays, mỗi subarray có kích thước 1, LIS = 1. Như vậy sau khi xor lại được giá trị 0. Ngược lại, n lẻ thì ta tìm một chỗ có thể ghép 2 phần từ liên tiếp lại cho số subarrays chẵn mà LIS của các subarray đều là 1. Nếu có thì yes, nếu ko thì no. Code\nĐộ phưc tạp O(n) #include \u0026lt;bits/stdc++.h\u0026gt; using namespace std; #define debug(x) cerr \u0026lt;\u0026lt; #x \u0026lt;\u0026lt; \u0026#34; = \u0026#34; \u0026lt;\u0026lt; x \u0026lt;\u0026lt; endl; #define int long long signed main(){ // freopen(\u0026#34;input.txt\u0026#34;, \u0026#34;r\u0026#34;, stdin); ios_base::sync_with_stdio(0);cin.tie(0); int t; cin \u0026gt;\u0026gt; t; while(t--){ int n; cin \u0026gt;\u0026gt; n; int a[n]; for(int i = 0; i \u0026lt; n; i++){ cin \u0026gt;\u0026gt; a[i]; } if(n % 2 == 0) cout \u0026lt;\u0026lt; \u0026#34;YES\\n\u0026#34;; else{ bool ok = 0; for(int i = 1; i \u0026lt; n; i++){ ok = ok or (a[i] \u0026lt;= a[i - 1]); } cout \u0026lt;\u0026lt; (ok? \u0026#34;YES\u0026#34;: \u0026#34;NO\u0026#34;) \u0026lt;\u0026lt; \u0026#34;\\n\u0026#34;; } } } "}]